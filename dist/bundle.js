(()=>{"use strict";var __webpack_modules__={540:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29pbnRvc3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanM/ZGU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///540\n\n}')},961:(module,__unused_webpack_exports,__webpack_require__)=>{eval("{\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) // removed by dead control flow\n{}\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(2551);\n} else // removed by dead control flow\n{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTYxLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanM/OGJjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///961\n\n}")},1113:module=>{eval("{\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExMy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29pbnRvc3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1113\n\n}")},1354:module=>{eval('{\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1NC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanM/YWYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1354\n\n}')},2162:(__unused_webpack_module,exports,__webpack_require__)=>{eval('{/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar React = __webpack_require__(6540),\n  shim = __webpack_require__(9888);\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = "function" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IucHJvZHVjdGlvbi5qcz81OGIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHVzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5wcm9kdWN0aW9uLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKSxcbiAgc2hpbSA9IHJlcXVpcmUoXCJ1c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltXCIpO1xuZnVuY3Rpb24gaXMoeCwgeSkge1xuICByZXR1cm4gKHggPT09IHkgJiYgKDAgIT09IHggfHwgMSAvIHggPT09IDEgLyB5KSkgfHwgKHggIT09IHggJiYgeSAhPT0geSk7XG59XG52YXIgb2JqZWN0SXMgPSBcImZ1bmN0aW9uXCIgPT09IHR5cGVvZiBPYmplY3QuaXMgPyBPYmplY3QuaXMgOiBpcyxcbiAgdXNlU3luY0V4dGVybmFsU3RvcmUgPSBzaGltLnVzZVN5bmNFeHRlcm5hbFN0b3JlLFxuICB1c2VSZWYgPSBSZWFjdC51c2VSZWYsXG4gIHVzZUVmZmVjdCA9IFJlYWN0LnVzZUVmZmVjdCxcbiAgdXNlTWVtbyA9IFJlYWN0LnVzZU1lbW8sXG4gIHVzZURlYnVnVmFsdWUgPSBSZWFjdC51c2VEZWJ1Z1ZhbHVlO1xuZXhwb3J0cy51c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvciA9IGZ1bmN0aW9uIChcbiAgc3Vic2NyaWJlLFxuICBnZXRTbmFwc2hvdCxcbiAgZ2V0U2VydmVyU25hcHNob3QsXG4gIHNlbGVjdG9yLFxuICBpc0VxdWFsXG4pIHtcbiAgdmFyIGluc3RSZWYgPSB1c2VSZWYobnVsbCk7XG4gIGlmIChudWxsID09PSBpbnN0UmVmLmN1cnJlbnQpIHtcbiAgICB2YXIgaW5zdCA9IHsgaGFzVmFsdWU6ICExLCB2YWx1ZTogbnVsbCB9O1xuICAgIGluc3RSZWYuY3VycmVudCA9IGluc3Q7XG4gIH0gZWxzZSBpbnN0ID0gaW5zdFJlZi5jdXJyZW50O1xuICBpbnN0UmVmID0gdXNlTWVtbyhcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICBmdW5jdGlvbiBtZW1vaXplZFNlbGVjdG9yKG5leHRTbmFwc2hvdCkge1xuICAgICAgICBpZiAoIWhhc01lbW8pIHtcbiAgICAgICAgICBoYXNNZW1vID0gITA7XG4gICAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCA9IG5leHRTbmFwc2hvdDtcbiAgICAgICAgICBuZXh0U25hcHNob3QgPSBzZWxlY3RvcihuZXh0U25hcHNob3QpO1xuICAgICAgICAgIGlmICh2b2lkIDAgIT09IGlzRXF1YWwgJiYgaW5zdC5oYXNWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRTZWxlY3Rpb24gPSBpbnN0LnZhbHVlO1xuICAgICAgICAgICAgaWYgKGlzRXF1YWwoY3VycmVudFNlbGVjdGlvbiwgbmV4dFNuYXBzaG90KSlcbiAgICAgICAgICAgICAgcmV0dXJuIChtZW1vaXplZFNlbGVjdGlvbiA9IGN1cnJlbnRTZWxlY3Rpb24pO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gKG1lbW9pemVkU2VsZWN0aW9uID0gbmV4dFNuYXBzaG90KTtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50U2VsZWN0aW9uID0gbWVtb2l6ZWRTZWxlY3Rpb247XG4gICAgICAgIGlmIChvYmplY3RJcyhtZW1vaXplZFNuYXBzaG90LCBuZXh0U25hcHNob3QpKSByZXR1cm4gY3VycmVudFNlbGVjdGlvbjtcbiAgICAgICAgdmFyIG5leHRTZWxlY3Rpb24gPSBzZWxlY3RvcihuZXh0U25hcHNob3QpO1xuICAgICAgICBpZiAodm9pZCAwICE9PSBpc0VxdWFsICYmIGlzRXF1YWwoY3VycmVudFNlbGVjdGlvbiwgbmV4dFNlbGVjdGlvbikpXG4gICAgICAgICAgcmV0dXJuIChtZW1vaXplZFNuYXBzaG90ID0gbmV4dFNuYXBzaG90KSwgY3VycmVudFNlbGVjdGlvbjtcbiAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCA9IG5leHRTbmFwc2hvdDtcbiAgICAgICAgcmV0dXJuIChtZW1vaXplZFNlbGVjdGlvbiA9IG5leHRTZWxlY3Rpb24pO1xuICAgICAgfVxuICAgICAgdmFyIGhhc01lbW8gPSAhMSxcbiAgICAgICAgbWVtb2l6ZWRTbmFwc2hvdCxcbiAgICAgICAgbWVtb2l6ZWRTZWxlY3Rpb24sXG4gICAgICAgIG1heWJlR2V0U2VydmVyU25hcHNob3QgPVxuICAgICAgICAgIHZvaWQgMCA9PT0gZ2V0U2VydmVyU25hcHNob3QgPyBudWxsIDogZ2V0U2VydmVyU25hcHNob3Q7XG4gICAgICByZXR1cm4gW1xuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIG1lbW9pemVkU2VsZWN0b3IoZ2V0U25hcHNob3QoKSk7XG4gICAgICAgIH0sXG4gICAgICAgIG51bGwgPT09IG1heWJlR2V0U2VydmVyU25hcHNob3RcbiAgICAgICAgICA/IHZvaWQgMFxuICAgICAgICAgIDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gbWVtb2l6ZWRTZWxlY3RvcihtYXliZUdldFNlcnZlclNuYXBzaG90KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgXTtcbiAgICB9LFxuICAgIFtnZXRTbmFwc2hvdCwgZ2V0U2VydmVyU25hcHNob3QsIHNlbGVjdG9yLCBpc0VxdWFsXVxuICApO1xuICB2YXIgdmFsdWUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShzdWJzY3JpYmUsIGluc3RSZWZbMF0sIGluc3RSZWZbMV0pO1xuICB1c2VFZmZlY3QoXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgaW5zdC5oYXNWYWx1ZSA9ICEwO1xuICAgICAgaW5zdC52YWx1ZSA9IHZhbHVlO1xuICAgIH0sXG4gICAgW3ZhbHVlXVxuICApO1xuICB1c2VEZWJ1Z1ZhbHVlKHZhbHVlKTtcbiAgcmV0dXJuIHZhbHVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2162\n\n}')},2551:(__unused_webpack_module,exports,__webpack_require__)=>{eval('{/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(6540),ca=__webpack_require__(9982);function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+"Capture",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||"undefined"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n["checked","multiple","muted","selected"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope");Symbol.for("react.debug_trace_mode");\nvar Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden");Symbol.for("react.cache");Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){if(null===a||"object"!==typeof a)return null;a=Ja&&a[Ja]||a["@@iterator"];return"function"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||""}return"\\n"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"===typeof l.stack){for(var e=l.stack.split("\\n"),\nf=d.stack.split("\\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k="\\n"+e[g].replace(" at new "," at ");a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return""}}\nfunction Qa(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||"",a=""!==a?"ForwardRef("+a+")":"ForwardRef");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||"Memo";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=b.render,a=a.displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";\ncase 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof b)return b.displayName||b.name||null;if("string"===typeof b)return b}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "string":case "undefined":return a;case "object":return a;default:return""}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}\nfunction Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,"checked",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}\nfunction cb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}\nfunction lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}\nvar mb,nb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{mb=mb||document.createElement("div");mb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!==typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}});window.addEventListener("test",Mb,Mb);window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&"function"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");\nfunction Sc(a,b){switch(a){case "focusin":case "focusout":Lc=null;break;case "dragenter":case "dragleave":Mc=null;break;case "mouseover":case "mouseout":Nc=null;break;case "pointerover":case "pointerout":Oc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case "focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case "dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case "mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case "cancel":case "click":case "close":case "contextmenu":case "copy":case "cut":case "auxclick":case "dblclick":case "dragend":case "dragstart":case "drop":case "focusin":case "focusout":case "input":case "invalid":case "keydown":case "keypress":case "keyup":case "mousedown":case "mouseup":case "paste":case "pause":case "play":case "pointercancel":case "pointerdown":case "pointerup":case "ratechange":case "reset":case "resize":case "seeked":case "submit":case "touchcancel":case "touchend":case "touchstart":case "volumechange":case "change":case "selectionchange":case "textInput":case "compositionstart":case "compositionend":case "compositionupdate":case "beforeblur":case "afterblur":case "beforeinput":case "blur":case "fullscreenchange":case "focus":case "hashchange":case "popstate":case "select":case "selectstart":return 1;case "drag":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "mousemove":case "mouseout":case "mouseover":case "pointermove":case "pointerout":case "pointerover":case "scroll":case "toggle":case "touchmove":case "wheel":case "mouseenter":case "mouseleave":case "pointerenter":case "pointerleave":return 4;\ncase "message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in\na)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",\nSpacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",\n119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===\na.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});"function"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};\nia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);\nha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));\nfa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));\nfunction nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":n="focus";k=Fd;break;case "focusout":n="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=\nDd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var t=0!==(b&4),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F="onMouseLeave";x="onMouseEnter";w="mouse";if("pointerout"===a||"pointerover"===a)t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+"leave",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+"enter",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);"focusout"===a&&(xa=h._wrapperState)&&\nxa.controlled&&"number"===h.type&&cb(h,"number",h.value)}xa=d?ue(d):window;switch(a){case "focusin":if(me(xa)||"true"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case "compositionstart":var ba="onCompositionStart";break b;case "compositionend":ba="onCompositionEnd";\nbreak b;case "compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),\n0<d.length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return("string"===typeof a?a:""+a).replace(xf,"\\n").replace(yf,"")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff="function"===typeof setTimeout?setTimeout:void 0,Gf="function"===typeof clearTimeout?clearTimeout:void 0,Hf="function"===typeof Promise?Promise:void 0,Jf="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,"/$"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if("$"===b||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b="head"!==b&&"body"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if("string"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||"object"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if("string"===typeof b&&""!==b||"number"===typeof b)return b=Qg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c&&""!==c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if("string"===typeof d&&""!==d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if("function"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){"object"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if("object"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||"object"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return"string"===typeof f&&""!==f||"number"===typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if("function"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r="function"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return"function"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=":"+b+"R"+c;c=Kh++;0<c&&(b+="H"+c.toString(32));b+=":"}else c=Lh++,b=":"+b+"r"+c.toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;"object"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||(b=e.state,\n"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c="",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e="\\nError generating stack: "+f.message+"\\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi="function"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);"function"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if("function"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;q||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?("function"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===typeof g.componentDidMount&&(b.flags|=4194308)):\n("function"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m="function"===typeof y||"function"===typeof g.getSnapshotBeforeUpdate)||\n"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?("function"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:"$!"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:"hidden",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:"visible",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:"visible",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:"visible",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if("$!"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if("$?"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case "together":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "select":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case "dialog":D("cancel",d);D("close",d);break;case "iframe":case "object":case "embed":D("load",d);break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case "source":D("error",d);break;case "img":case "image":case "link":D("error",\nd);D("load",d);break;case "details":D("toggle",d);break;case "input":Za(d,f);D("invalid",d);break;case "select":d._wrapperState={wasMultiple:!!f.multiple};D("invalid",d);break;case "textarea":hb(d,f),D("invalid",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case "input":Va(d);db(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;"http://www.w3.org/1999/xhtml"===a&&(a=kb(c));"http://www.w3.org/1999/xhtml"===a?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\\x3c/script>",a=a.removeChild(a.firstChild)):\n"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case "dialog":D("cancel",a);D("close",a);e=d;break;case "iframe":case "object":case "embed":D("load",a);e=d;break;case "video":case "audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case "source":D("error",a);e=d;break;case "img":case "image":case "link":D("error",\na);D("load",a);e=d;break;case "details":D("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);D("invalid",a);break;case "option":e=d;break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D("invalid",a);break;case "textarea":hb(a,d);e=gb(a,d);D("invalid",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):"children"===f?"string"===typeof k?("textarea"!==\nc||""!==k)&&ob(a,k):"number"===typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case "input":Va(a);db(a,d,!1);break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:"function"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case "button":case "input":case "select":case "textarea":d=!!d.autoFocus;break a;case "img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj="function"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if("function"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}"function"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&"function"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,"function"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case "input":bb(e,f);break;case "textarea":ib(e,f);break;case "select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if("function"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty("display")?k.display:null,h.style.display=\nrb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,""),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case "button":case "input":case "select":case "textarea":k.autoFocus&&c.focus();break;case "img":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&("function"===typeof w.getDerivedStateFromError||null!==u&&"function"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&"function"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if("function"===typeof b.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;"object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if("function"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)aj(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,""));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl="function"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if("function"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,"",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if("function"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,"",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case "input":bb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+\'][type="radio"]\');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d="",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(",");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version="18.3.1-next-f1338f8080-20240426";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2551\n\n}')},4100:(module,__webpack_exports__,__webpack_require__)=>{eval("{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Reset and Base Styles */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* CSS Variables for Theme System */\n:root {\n  /* Enhanced Professional Dark Theme (Default) */\n  --bg-primary: linear-gradient(135deg, #0F0F23 0%, #1E1E38 100%);\n  --bg-secondary: #1A1B2E;\n  --bg-tertiary: #16213E;\n  --text-primary: #F8FAFC;\n  --text-secondary: #94A3B8;\n  --text-accent: #8B5CF6;\n  --accent-purple: #8B5CF6;\n  --accent-blue: #2563EB;\n  --accent-green: #059669;\n  --accent-orange: #EA580C;\n  --card-bg: rgba(26, 27, 46, 0.95);\n  --auth-container-bg: #1A1B2E;\n  --faq-bg: #1A1B2E;\n  --footer-bg: #1A1B2E;\n  --footer-text: #94A3B8;\n  --footer-star: #8B5CF6;\n  --border-color: rgba(248, 250, 252, 0.08);\n  --shadow: rgba(0, 0, 0, 0.25);\n}\n\n[data-theme=\"light\"] {\n  /* Enhanced Professional Light Theme */\n  --bg-primary: linear-gradient(135deg, #FAFBFC 0%, #F4F6F8 100%);\n  --bg-secondary: #FFFFFF;\n  --bg-tertiary: #F8FAFC;\n  --text-primary: #0F172A;\n  --text-secondary: #475569;\n  --text-accent: #8B5CF6;\n  --accent-purple: #8B5CF6;\n  --accent-blue: #2563EB;\n  --accent-green: #059669;\n  --accent-orange: #EA580C;\n  --card-bg: rgba(255, 255, 255, 0.95);\n  --auth-container-bg: #F1F5F9;\n  --faq-bg: #FFFFFF;\n  --footer-bg: #FFFFFF;\n  --footer-text: #475569;\n  --footer-star: #8B5CF6;\n  --border-color: rgba(15, 23, 42, 0.08);\n  --shadow: rgba(15, 23, 42, 0.04);\n}\n\n/* Price Ticker Background - Theme responsive */\n.price-ticker {\n  background: var(--bg-secondary) !important;\n}\n\n/* Price Ticker - Never wrap, always fit */\n.price-ticker {\n  display: flex !important;\n  align-items: center !important;\n  justify-content: center !important;\n  overflow: hidden !important;\n  white-space: nowrap !important;\n}\n\n.price-ticker span {\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  flex-shrink: 0 !important;\n}\n\n/* Navbar - Never wrap, always fit */\nnav {\n  overflow: hidden !important;\n}\n\nnav > div {\n  flex-wrap: nowrap !important;\n  overflow: hidden !important;\n}\n\n.desktop-nav {\n  flex-wrap: nowrap !important;\n  overflow: hidden !important;\n}\n\n.desktop-nav a {\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n/* Mobile Menu Hover Effects */\n.mobile-menu-link {\n  position: relative !important;\n  overflow: hidden !important;\n}\n\n.mobile-menu-link:hover {\n  background: var(--card-bg) !important;\n  transform: translateY(-2px) !important;\n  box-shadow: 0 4px 12px var(--shadow) !important;\n}\n\n.mobile-menu-link::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n  transition: left 0.5s;\n}\n\n.mobile-menu-link:hover::before {\n  left: 100%;\n}\n\n/* Feature Cards Mobile Layout */\n@media (max-width: 768px) {\n  .feature-cards-grid {\n    display: flex !important;\n    flex-direction: column !important;\n    gap: 1rem !important;\n    align-items: center !important;\n    padding: 0 1rem !important;\n  }\n  \n  .feature-card {\n    width: 100% !important;\n    max-width: 300px !important;\n    height: auto !important;\n    min-height: 80px !important;\n    padding: 1rem !important;\n    flex-direction: row !important;\n    align-items: center !important;\n    gap: 1rem !important;\n  }\n  \n  .feature-card h3 {\n    font-size: 1rem !important;\n    margin-bottom: 0 !important;\n  }\n  \n  .feature-card p {\n    font-size: 0.875rem !important;\n    margin: 0 !important;\n  }\n}\n\nbody {\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: var(--bg-primary);\n  min-height: 100vh;\n  color: var(--text-primary);\n  line-height: 1.6;\n  transition: all 0.3s ease;\n}\n\n#root {\n  min-height: 100vh;\n}\n\n/* Container */\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 1rem;\n}\n\n@media (min-width: 640px) {\n  .container {\n    padding: 0 1.5rem;\n  }\n}\n\n@media (min-width: 1024px) {\n  .container {\n    padding: 0 2rem;\n  }\n}\n\n/* Typography */\n.text-center {\n  text-align: center;\n}\n\n.text-purple {\n  color: #A855F7;\n}\n\n.text-blue {\n  color: #3B82F6;\n}\n\n.text-green {\n  color: #10B981;\n}\n\n.text-red {\n  color: #EF4444;\n}\n\n.text-gray {\n  color: #94A3B8;\n}\n\n.text-white {\n  color: white;\n}\n\n.font-bold {\n  font-weight: 700;\n}\n\n.font-semibold {\n  font-weight: 600;\n}\n\n.font-medium {\n  font-weight: 500;\n}\n\n/* Responsive Typography */\n.text-xs { font-size: 0.75rem; line-height: 1rem; }\n.text-sm { font-size: 0.875rem; line-height: 1.25rem; }\n.text-base { font-size: 1rem; line-height: 1.5rem; }\n.text-lg { font-size: 1.125rem; line-height: 1.75rem; }\n.text-xl { font-size: 1.25rem; line-height: 1.75rem; }\n.text-2xl { font-size: 1.5rem; line-height: 2rem; }\n.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }\n.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }\n.text-5xl { font-size: 3rem; line-height: 1; }\n.text-6xl { font-size: 3.75rem; line-height: 1; }\n.text-7xl { font-size: 4.5rem; line-height: 1; }\n.text-8xl { font-size: 6rem; line-height: 1; }\n.text-9xl { font-size: 8rem; line-height: 1; }\n\n/* Additional Typography Classes */\n.leading-tight { line-height: 1.25; }\n.max-w-3xl { max-width: 48rem; }\n.min-w-\\\\[250px\\\\] { min-width: 250px; }\n.w-12 { width: 3rem; }\n.h-12 { height: 3rem; }\n\n/* Additional Layout Classes */\n.mx-auto { margin-left: auto; margin-right: auto; }\n.z-10 { z-index: 10; }\n\n/* Advanced Animations */\n@keyframes flagWave {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg); \n  }\n  25% { \n    transform: translateY(-2px) rotate(0.5deg); \n  }\n  50% { \n    transform: translateY(-1px) rotate(0deg); \n  }\n  75% { \n    transform: translateY(-3px) rotate(-0.5deg); \n  }\n}\n\n@keyframes floatUp {\n  0% { \n    transform: translateY(30px); \n    opacity: 0; \n  }\n  100% { \n    transform: translateY(0); \n    opacity: 1; \n  }\n}\n\n@keyframes slideInLeft {\n  0% { \n    transform: translateX(-50px); \n    opacity: 0; \n  }\n  100% { \n    transform: translateX(0); \n    opacity: 1; \n  }\n}\n\n@keyframes slideInRight {\n  0% { \n    transform: translateX(50px); \n    opacity: 0; \n  }\n  100% { \n    transform: translateX(0); \n    opacity: 1; \n  }\n}\n\n@keyframes slideInUp {\n  0% { \n    transform: translateY(50px); \n    opacity: 0; \n  }\n  100% { \n    transform: translateY(0); \n    opacity: 1; \n  }\n}\n\n@keyframes fadeIn {\n  0% { \n    opacity: 0; \n    transform: translateY(-10px);\n  }\n  100% { \n    opacity: 1; \n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes pulse {\n  0%, 100% { \n    transform: scale(1); \n  }\n  50% { \n    transform: scale(1.05); \n  }\n}\n\n@keyframes shimmer {\n  0% { \n    background-position: -200% 0; \n  }\n  100% { \n    background-position: 200% 0; \n  }\n}\n\n@keyframes cryptoGlow {\n  0%, 100% { \n    text-shadow: 0 0 5px currentColor; \n  }\n  50% { \n    text-shadow: 0 0 20px currentColor, 0 0 30px currentColor; \n  }\n}\n\n@keyframes riseUp {\n  0% { \n    transform: translateY(50px) scale(0.7); \n    opacity: 0; \n    color: #10B981;\n  }\n  50% { \n    transform: translateY(-25px) scale(1.3); \n    opacity: 1; \n    color: #A855F7;\n    text-shadow: 0 0 20px #A855F7;\n  }\n  100% { \n    transform: translateY(0) scale(1); \n    opacity: 1; \n    color: #10B981;\n    text-shadow: none;\n  }\n}\n\n@keyframes fallDown {\n  0% { \n    transform: translateY(-50px) scale(0.7); \n    opacity: 0; \n    color: #EF4444;\n  }\n  50% { \n    transform: translateY(25px) scale(1.3); \n    opacity: 1; \n    color: #3B82F6;\n    text-shadow: 0 0 20px #3B82F6;\n  }\n  100% { \n    transform: translateY(0) scale(1); \n    opacity: 1; \n    color: #EF4444;\n    text-shadow: none;\n  }\n}\n\n@keyframes riseFloat {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(-15px); \n  }\n}\n\n@keyframes fallFloat {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(15px); \n  }\n}\n\n/* Flag Wave Animation */\n.flag-wave-text {\n  animation: flagWave 4s ease-in-out infinite;\n  background: linear-gradient(45deg, var(--text-secondary), var(--accent-purple), var(--accent-blue), var(--text-secondary));\n  background-size: 400% 400%;\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: flagWave 4s ease-in-out infinite, shimmer 3s ease-in-out infinite;\n}\n\n/* Crypto Price Glow Animation */\n.crypto-price {\n  animation: cryptoGlow 2s ease-in-out infinite;\n}\n\n/* Button Hover Animations */\n.btn-primary {\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n}\n\n.btn-primary:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 10px 25px rgba(139, 92, 246, 0.4);\n}\n\n.btn-primary::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s;\n}\n\n.btn-primary:hover::before {\n  left: 100%;\n}\n\n.btn-secondary {\n  background: transparent;\n  color: var(--text-primary);\n  border: 2px solid var(--text-primary);\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n}\n\n.btn-secondary:hover {\n  transform: translateY(-3px);\n  background: var(--accent-purple) !important;\n  color: #FFFFFF !important;\n  box-shadow: 0 10px 25px var(--shadow);\n  border-color: var(--accent-purple) !important;\n}\n\n/* Card Hover Animations */\n.info-card {\n  position: relative;\n  overflow: hidden;\n}\n\n.info-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n  transform: translateX(-100%);\n  transition: transform 0.6s;\n}\n\n.info-card:hover::before {\n  transform: translateX(100%);\n}\n\n/* Rise and Fall Word Animations */\n.rise-word {\n  animation: riseUp 0.6s linear 0.2s both, riseFloat 1.5s linear 1s infinite;\n  display: inline-block;\n  font-weight: 800;\n  letter-spacing: 2px;\n}\n\n.fall-word {\n  animation: fallDown 0.6s linear 0.4s both, fallFloat 1.5s linear 1s infinite;\n  display: inline-block;\n  font-weight: 800;\n  letter-spacing: 2px;\n}\n\n/* Process Card Animations */\n.process-card {\n  animation: slideInUp 0.8s ease-out both;\n}\n\n.process-card:nth-child(1) { animation-delay: 0.2s; }\n.process-card:nth-child(2) { animation-delay: 0.4s; }\n.process-card:nth-child(3) { animation-delay: 0.6s; }\n\n.process-card:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 12px 24px var(--shadow);\n}\n\n/* Live Prediction Card Animations */\n.prediction-card {\n  animation: slideInUp 0.8s ease-out both;\n}\n\n.prediction-card:nth-child(1) { animation-delay: 0.2s; }\n.prediction-card:nth-child(2) { animation-delay: 0.4s; }\n\n.prediction-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 8px 16px var(--shadow);\n}\n\n/* Feature Card Animations */\n.feature-card {\n  animation: slideInUp 0.8s ease-out both;\n}\n\n.feature-card:nth-child(1) { animation-delay: 0.1s; }\n.feature-card:nth-child(2) { animation-delay: 0.2s; }\n.feature-card:nth-child(3) { animation-delay: 0.3s; }\n.feature-card:nth-child(4) { animation-delay: 0.4s; }\n\n.feature-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 8px 16px var(--shadow);\n}\n\n/* Staggered Animation for Cards */\n.info-card:nth-child(1) { animation: slideInLeft 0.8s ease-out 0.2s both; }\n.info-card:nth-child(2) { animation: floatUp 0.8s ease-out 0.4s both; }\n.info-card:nth-child(3) { animation: slideInRight 0.8s ease-out 0.6s both; }\n\n/* Desktop Navigation */\n@media (min-width: 768px) {\n  .desktop-nav {\n    display: flex !important;\n  }\n  .mobile-menu-btn {\n    display: none !important;\n  }\n}\n\n@media (max-width: 767px) {\n  .mobile-menu-btn {\n    display: block !important;\n  }\n}\n\n/* Price Ticker Responsive */\n@media (max-width: 768px) {\n  .price-ticker-content {\n    gap: 2rem !important;\n  }\n}\n\n@media (max-width: 480px) {\n  .price-ticker-content {\n    gap: 1rem !important;\n    flex-direction: column !important;\n  }\n}\n\n/* Mobile Button Responsive */\n@media (max-width: 640px) {\n  .btn {\n    min-width: 200px !important;\n    padding: 0.875rem 1.5rem !important;\n    font-size: 1rem !important;\n  }\n  \n  .hero-buttons {\n    flex-direction: column !important;\n    gap: 1rem !important;\n  }\n}\n\n/* Tablet Responsive (768px and below) */\n@media (max-width: 768px) {\n  .live-predictions-grid {\n    grid-template-columns: 1fr !important;\n    gap: 1rem !important;\n  }\n  \n  .feature-cards-grid {\n    grid-template-columns: repeat(2, 1fr) !important;\n    gap: 1rem !important;\n  }\n  \n  .process-cards-grid {\n    grid-template-columns: 1fr !important;\n    gap: 1.5rem !important;\n  }\n  \n  .hero-buttons {\n    flex-direction: column !important;\n    gap: 1rem !important;\n    align-items: center !important;\n  }\n  \n  .desktop-nav {\n    display: none !important;\n  }\n  \n  .mobile-menu-btn {\n    display: block !important;\n  }\n}\n\n/* Mobile Responsive (640px and below) */\n@media (max-width: 640px) {\n  .feature-cards-grid {\n    grid-template-columns: 1fr !important;\n    gap: 1rem !important;\n  }\n  \n  .process-cards-grid {\n    grid-template-columns: 1fr !important;\n    gap: 1rem !important;\n  }\n  \n  /* Price ticker stays horizontal on all screen sizes */\n  \n  .hero-buttons {\n    flex-direction: column !important;\n    gap: 1rem !important;\n    width: 100% !important;\n  }\n  \n  .btn {\n    width: 100% !important;\n    max-width: 300px !important;\n  }\n}\n\n/* Small Mobile (480px and below) */\n@media (max-width: 480px) {\n  /* Price ticker stays horizontal on all screen sizes */\n  \n  .hero-buttons {\n    padding: 0 1rem !important;\n  }\n  \n  .btn {\n    width: 100% !important;\n    max-width: 280px !important;\n    font-size: 0.875rem !important;\n    padding: 0.75rem 1rem !important;\n  }\n}\n\n/* Mobile Typography */\n@media (max-width: 640px) {\n  .text-4xl { font-size: 1.75rem; line-height: 2.25rem; }\n  .text-5xl { font-size: 2.25rem; line-height: 2.5rem; }\n}\n\n/* iPad Responsive (1024px and below) */\n@media (max-width: 1024px) {\n  .process-cards-grid {\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)) !important;\n  }\n  \n  .live-predictions-grid {\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)) !important;\n  }\n  \n  .feature-cards-grid {\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) !important;\n  }\n}\n\n/* Large Mobile Responsive (480px to 640px) */\n@media (min-width: 480px) and (max-width: 640px) {\n  .hero-buttons {\n    flex-direction: row !important;\n    gap: 0.75rem !important;\n  }\n  \n  .btn {\n    flex: 1 !important;\n    min-width: auto !important;\n  }\n}\n\n/* Layout */\n.flex {\n  display: flex;\n}\n\n.flex-col {\n  flex-direction: column;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.justify-center {\n  justify-content: center;\n}\n\n.justify-between {\n  justify-content: space-between;\n}\n\n.gap-2 { gap: 0.5rem; }\n.gap-4 { gap: 1rem; }\n.gap-6 { gap: 1.5rem; }\n.gap-8 { gap: 2rem; }\n.gap-12 { gap: 3rem; }\n\n.w-full {\n  width: 100%;\n}\n\n.min-h-screen {\n  min-height: 100vh;\n}\n\n/* Grid */\n.grid {\n  display: grid;\n}\n\n.grid-cols-1 {\n  grid-template-columns: repeat(1, minmax(0, 1fr));\n}\n\n.grid-cols-3 {\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n}\n\n@media (min-width: 640px) {\n  .sm\\\\:grid-cols-3 {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  .sm\\\\:text-7xl { font-size: 4.5rem; line-height: 1; }\n  .sm\\\\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }\n  .sm\\\\:flex-row { flex-direction: row; }\n}\n\n@media (min-width: 768px) {\n  .md\\\\:flex {\n    display: flex;\n  }\n  .md\\\\:hidden {\n    display: none;\n  }\n  .md\\\\:text-8xl { font-size: 6rem; line-height: 1; }\n  .md\\\\:text-2xl { font-size: 1.5rem; line-height: 2rem; }\n}\n\n@media (min-width: 1024px) {\n  .lg\\\\:text-9xl { font-size: 8rem; line-height: 1; }\n}\n\n/* Spacing */\n.mb-2 { margin-bottom: 0.5rem; }\n.mb-4 { margin-bottom: 1rem; }\n.mb-6 { margin-bottom: 1.5rem; }\n.mb-8 { margin-bottom: 2rem; }\n.mb-12 { margin-bottom: 3rem; }\n.mb-16 { margin-bottom: 4rem; }\n\n.mt-2 { margin-top: 0.5rem; }\n.mt-4 { margin-top: 1rem; }\n.mt-6 { margin-top: 1.5rem; }\n.mt-8 { margin-top: 2rem; }\n\n.p-4 { padding: 1rem; }\n.p-6 { padding: 1.5rem; }\n.p-8 { padding: 2rem; }\n.px-8 { padding-left: 2rem; padding-right: 2rem; }\n.py-4 { padding-top: 1rem; padding-bottom: 1rem; }\n\n/* Hidden/Visible */\n.hidden {\n  display: none;\n}\n\n@media (min-width: 768px) {\n  .md\\\\:block {\n    display: block;\n  }\n}\n\n/* Position */\n.relative {\n  position: relative;\n}\n\n.absolute {\n  position: absolute;\n}\n\n/* Z-index */\n.z-10 {\n  z-index: 10;\n}\n\n/* Transitions */\n.transition-all {\n  transition: all 0.3s ease;\n}\n\n.transition-colors {\n  transition: color 0.3s ease, background-color 0.3s ease;\n}\n\n/* Hover Effects */\n.hover\\\\:scale-105:hover {\n  transform: scale(1.05);\n}\n\n.hover\\\\:opacity-80:hover {\n  opacity: 0.8;\n}\n\n/* Price Ticker */\n.price-ticker {\n  background: var(--bg-secondary);\n  color: var(--text-primary);\n  padding: 0.75rem 0;\n  font-size: 1.125rem;\n  font-weight: 700;\n  text-align: center;\n}\n\n/* Navigation */\n.nav-link {\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n}\n\n.nav-link:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.nav-link.active {\n  background: rgba(168, 85, 247, 0.2);\n  color: #c084fc;\n}\n\n/* Buttons */\n.btn {\n  padding: 0.75rem 1.5rem;\n  border-radius: 9999px;\n  border: none;\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  text-decoration: none;\n  display: inline-block;\n  text-align: center;\n  min-width: 120px;\n}\n\n.btn-primary {\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\n  color: white;\n}\n\n.btn-primary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(139, 92, 246, 0.4);\n}\n\n\n.btn-outline {\n  background: transparent;\n  color: white;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n}\n\n.btn-outline:hover {\n  background: rgba(255, 255, 255, 0.1);\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n/* Hero Section */\n.hero-section {\n  padding: 4rem 0;\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n  background: var(--bg-primary);\n  position: relative;\n}\n\n.hero-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: \n    linear-gradient(45deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),\n    linear-gradient(-45deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),\n    linear-gradient(45deg, transparent 75%, rgba(255, 255, 255, 0.02) 75%),\n    linear-gradient(-45deg, transparent 75%, rgba(255, 255, 255, 0.02) 75%);\n  background-size: 60px 60px;\n  background-position: 0 0, 0 30px, 30px -30px, -30px 0px;\n  opacity: 0.3;\n}\n\n@media (min-width: 768px) {\n  .hero-section {\n    padding: 6rem 0;\n    min-height: 90vh;\n  }\n}\n\n/* Info Cards */\n.info-cards {\n  padding: 4rem 0;\n  background: var(--bg-primary);\n}\n\n.info-card {\n  background: rgba(45, 27, 105, 0.8);\n  border-radius: 1rem;\n  padding: 2rem;\n  text-align: center;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  -webkit-backdrop-filter: blur(10px);\n          backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.info-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);\n}\n\n.info-card-icon {\n  width: 4rem;\n  height: 4rem;\n  margin: 0 auto 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.info-card-text {\n  color: white;\n  font-size: 1.125rem;\n  font-weight: 600;\n}\n\n/* Mobile Responsive */\n@media (max-width: 640px) {\n  .container {\n    padding: 0 1rem;\n  }\n  \n  .hero-section {\n    padding: 2rem 0;\n    min-height: 70vh;\n  }\n  \n  .info-cards {\n    padding: 2rem 0;\n  }\n  \n  .info-card {\n    padding: 1.5rem;\n    margin-bottom: 1rem;\n  }\n  \n  .btn {\n    padding: 0.75rem 1.5rem;\n    font-size: 0.875rem;\n  }\n}\n\n/* Theme Toggle */\n.theme-toggle {\n  background: none;\n  border: none;\n  color: #F59E0B;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.theme-toggle:hover {\n  transform: scale(1.1);\n}\n\n/* Form Elements */\n.input {\n  width: 100%;\n  padding: 1rem;\n  border-radius: 0.75rem;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  background: rgba(51, 38, 77, 0.8);\n  color: white;\n  font-family: 'Inter', sans-serif;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  margin-bottom: 1rem;\n}\n\n.input:focus {\n  outline: none;\n  border-color: #8B5CF6;\n  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);\n}\n\n.input::placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  color: #8B5CF6;\n  font-size: 0.875rem;\n}\n\n/* Form Layout */\n.form-container {\n  max-width: 28rem;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n@media (min-width: 640px) {\n  .form-container {\n    padding: 3rem;\n  }\n}\n\n/* Cards */\n.card {\n  background: rgba(45, 27, 105, 0.8);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  -webkit-backdrop-filter: blur(10px);\n          backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 1rem;\n  transition: all 0.3s ease;\n}\n\n.card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);\n}\n\n@media (min-width: 640px) {\n  .card {\n    padding: 2rem;\n  }\n}\n\n/* Betting Grid */\n.betting-grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n@media (min-width: 1024px) {\n  .betting-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n/* Chart Container */\n.chart-container {\n  background: var(--card-bg);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 1.5rem;\n}\n\n/* Mobile Optimizations */\n@media (max-width: 640px) {\n  .chart-container {\n    padding: 1rem;\n  }\n  \n  .betting-grid {\n    gap: 1rem;\n  }\n  \n  .card {\n    padding: 1rem;\n  }\n  \n  /* Ensure buttons are touch-friendly */\n  .btn {\n    min-height: 44px;\n    padding: 0.75rem 1.5rem;\n  }\n  \n  /* Quick bet buttons */\n  .quick-bet-grid {\n    grid-template-columns: repeat(3, 1fr);\n    gap: 0.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .quick-bet-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n/* Poll-based Betting Styles */\n.poll-card {\n  background: rgba(45, 27, 105, 0.8);\n  border-radius: 1rem;\n  padding: 1.5rem;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  -webkit-backdrop-filter: blur(10px);\n          backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 1rem;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.poll-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(168, 85, 247, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);\n  z-index: 1;\n}\n\n.poll-card > * {\n  position: relative;\n  z-index: 2;\n}\n\n/* Pool Display */\n.pool-display {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1rem;\n  margin: 1.5rem 0;\n}\n\n.pool-item {\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 0.75rem;\n  padding: 1rem;\n  text-align: center;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.pool-item.up {\n  border-color: rgba(16, 185, 129, 0.3);\n  background: rgba(16, 185, 129, 0.1);\n}\n\n.pool-item.down {\n  border-color: rgba(239, 68, 68, 0.3);\n  background: rgba(239, 68, 68, 0.1);\n}\n\n/* Betting Buttons */\n.betting-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1.5rem;\n}\n\n.bet-button {\n  flex: 1;\n  padding: 1rem;\n  border-radius: 0.75rem;\n  font-weight: bold;\n  font-size: 1.125rem;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  border: none;\n  cursor: pointer;\n}\n\n.bet-button.up {\n  background: #10B981;\n  color: white;\n}\n\n.bet-button.up:hover:not(:disabled) {\n  background: #059669;\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);\n}\n\n.bet-button.down {\n  background: #EF4444;\n  color: white;\n}\n\n.bet-button.down:hover:not(:disabled) {\n  background: #DC2626;\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.4);\n}\n\n.bet-button:disabled {\n  background: #6B7280;\n  color: #9CA3AF;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n/* Chart Container */\n.chart-container {\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 0.75rem;\n  padding: 1rem;\n  margin: 1rem 0;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Currency Dropdown */\n.currency-dropdown {\n  position: relative;\n}\n\n.currency-dropdown-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 0.5rem;\n  background: #1F2937;\n  border-radius: 0.75rem;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n  border: 1px solid #374151;\n  z-index: 10;\n  min-width: 120px;\n}\n\n.currency-option {\n  width: 100%;\n  text-align: left;\n  padding: 0.75rem 1rem;\n  font-size: 0.875rem;\n  transition: all 0.2s ease;\n  border: none;\n  background: none;\n  color: white;\n  cursor: pointer;\n}\n\n.currency-option:first-child {\n  border-radius: 0.75rem 0.75rem 0 0;\n}\n\n.currency-option:last-child {\n  border-radius: 0 0 0.75rem 0.75rem;\n}\n\n.currency-option:hover {\n  background: #374151;\n}\n\n.currency-option.selected {\n  color: #A855F7;\n  background: rgba(168, 85, 247, 0.1);\n}\n\n/* Filter Dropdowns */\n.filter-dropdown {\n  position: relative;\n}\n\n.filter-dropdown select {\n  background: rgba(31, 41, 55, 0.5);\n  color: white;\n  padding: 0.5rem 2rem 0.5rem 0.75rem;\n  border-radius: 0.5rem;\n  border: 1px solid #374151;\n  font-size: 0.875rem;\n  -webkit-appearance: none;\n          appearance: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.filter-dropdown select:hover {\n  border-color: #6B7280;\n}\n\n.filter-dropdown select:focus {\n  outline: none;\n  border-color: #A855F7;\n  box-shadow: 0 0 0 3px rgba(168, 85, 247, 0.1);\n}\n\n.filter-dropdown-icon {\n  position: absolute;\n  right: 0.5rem;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 1rem;\n  height: 1rem;\n  color: #9CA3AF;\n  pointer-events: none;\n}\n\n/* Mobile Responsive */\n@media (max-width: 640px) {\n  .poll-card {\n    padding: 1rem;\n  }\n  \n  .pool-display {\n    gap: 0.75rem;\n    margin: 1rem 0;\n  }\n  \n  .betting-buttons {\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n  \n  .bet-button {\n    padding: 0.875rem;\n    font-size: 1rem;\n  }\n  \n  .chart-container {\n    padding: 0.75rem;\n    margin: 0.75rem 0;\n  }\n  \n  .chart-bar {\n    min-width: 8px;\n  }\n  \n  .text-4xl {\n    font-size: 2rem;\n  }\n  \n  .text-3xl {\n    font-size: 1.875rem;\n  }\n  \n  .text-2xl {\n    font-size: 1.5rem;\n  }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA,0BAA0B;AAC1B;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA,mCAAmC;AACnC;EACE,+CAA+C;EAC/C,+DAA+D;EAC/D,uBAAuB;EACvB,sBAAsB;EACtB,uBAAuB;EACvB,yBAAyB;EACzB,sBAAsB;EACtB,wBAAwB;EACxB,sBAAsB;EACtB,uBAAuB;EACvB,wBAAwB;EACxB,iCAAiC;EACjC,4BAA4B;EAC5B,iBAAiB;EACjB,oBAAoB;EACpB,sBAAsB;EACtB,sBAAsB;EACtB,yCAAyC;EACzC,6BAA6B;AAC/B;;AAEA;EACE,sCAAsC;EACtC,+DAA+D;EAC/D,uBAAuB;EACvB,sBAAsB;EACtB,uBAAuB;EACvB,yBAAyB;EACzB,sBAAsB;EACtB,wBAAwB;EACxB,sBAAsB;EACtB,uBAAuB;EACvB,wBAAwB;EACxB,oCAAoC;EACpC,4BAA4B;EAC5B,iBAAiB;EACjB,oBAAoB;EACpB,sBAAsB;EACtB,sBAAsB;EACtB,sCAAsC;EACtC,gCAAgC;AAClC;;AAEA,+CAA+C;AAC/C;EACE,0CAA0C;AAC5C;;AAEA,0CAA0C;AAC1C;EACE,wBAAwB;EACxB,8BAA8B;EAC9B,kCAAkC;EAClC,2BAA2B;EAC3B,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;EAC9B,2BAA2B;EAC3B,kCAAkC;EAClC,yBAAyB;AAC3B;;AAEA,oCAAoC;AACpC;EACE,2BAA2B;AAC7B;;AAEA;EACE,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,8BAA8B;EAC9B,2BAA2B;EAC3B,kCAAkC;AACpC;;AAEA,8BAA8B;AAC9B;EACE,6BAA6B;EAC7B,2BAA2B;AAC7B;;AAEA;EACE,qCAAqC;EACrC,sCAAsC;EACtC,+CAA+C;AACjD;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,WAAW;EACX,YAAY;EACZ,sFAAsF;EACtF,qBAAqB;AACvB;;AAEA;EACE,UAAU;AACZ;;AAEA,gCAAgC;AAChC;EACE;IACE,wBAAwB;IACxB,iCAAiC;IACjC,oBAAoB;IACpB,8BAA8B;IAC9B,0BAA0B;EAC5B;;EAEA;IACE,sBAAsB;IACtB,2BAA2B;IAC3B,uBAAuB;IACvB,2BAA2B;IAC3B,wBAAwB;IACxB,8BAA8B;IAC9B,8BAA8B;IAC9B,oBAAoB;EACtB;;EAEA;IACE,0BAA0B;IAC1B,2BAA2B;EAC7B;;EAEA;IACE,8BAA8B;IAC9B,oBAAoB;EACtB;AACF;;AAEA;EACE;kFACgF;EAChF,mCAAmC;EACnC,kCAAkC;EAClC,6BAA6B;EAC7B,iBAAiB;EACjB,0BAA0B;EAC1B,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;AACnB;;AAEA,cAAc;AACd;EACE,iBAAiB;EACjB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE;IACE,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,eAAe;EACjB;AACF;;AAEA,eAAe;AACf;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA,0BAA0B;AAC1B,WAAW,kBAAkB,EAAE,iBAAiB,EAAE;AAClD,WAAW,mBAAmB,EAAE,oBAAoB,EAAE;AACtD,aAAa,eAAe,EAAE,mBAAmB,EAAE;AACnD,WAAW,mBAAmB,EAAE,oBAAoB,EAAE;AACtD,WAAW,kBAAkB,EAAE,oBAAoB,EAAE;AACrD,YAAY,iBAAiB,EAAE,iBAAiB,EAAE;AAClD,YAAY,mBAAmB,EAAE,oBAAoB,EAAE;AACvD,YAAY,kBAAkB,EAAE,mBAAmB,EAAE;AACrD,YAAY,eAAe,EAAE,cAAc,EAAE;AAC7C,YAAY,kBAAkB,EAAE,cAAc,EAAE;AAChD,YAAY,iBAAiB,EAAE,cAAc,EAAE;AAC/C,YAAY,eAAe,EAAE,cAAc,EAAE;AAC7C,YAAY,eAAe,EAAE,cAAc,EAAE;;AAE7C,kCAAkC;AAClC,iBAAiB,iBAAiB,EAAE;AACpC,aAAa,gBAAgB,EAAE;AAC/B,mBAAmB,gBAAgB,EAAE;AACrC,QAAQ,WAAW,EAAE;AACrB,QAAQ,YAAY,EAAE;;AAEtB,8BAA8B;AAC9B,WAAW,iBAAiB,EAAE,kBAAkB,EAAE;AAClD,QAAQ,WAAW,EAAE;;AAErB,wBAAwB;AACxB;EACE;IACE,uCAAuC;EACzC;EACA;IACE,0CAA0C;EAC5C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,2CAA2C;EAC7C;AACF;;AAEA;EACE;IACE,2BAA2B;IAC3B,UAAU;EACZ;EACA;IACE,wBAAwB;IACxB,UAAU;EACZ;AACF;;AAEA;EACE;IACE,4BAA4B;IAC5B,UAAU;EACZ;EACA;IACE,wBAAwB;IACxB,UAAU;EACZ;AACF;;AAEA;EACE;IACE,2BAA2B;IAC3B,UAAU;EACZ;EACA;IACE,wBAAwB;IACxB,UAAU;EACZ;AACF;;AAEA;EACE;IACE,2BAA2B;IAC3B,UAAU;EACZ;EACA;IACE,wBAAwB;IACxB,UAAU;EACZ;AACF;;AAEA;EACE;IACE,UAAU;IACV,4BAA4B;EAC9B;EACA;IACE,UAAU;IACV,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,UAAU;IACV,2BAA2B;EAC7B;EACA;IACE,UAAU;IACV,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,mBAAmB;EACrB;EACA;IACE,sBAAsB;EACxB;AACF;;AAEA;EACE;IACE,4BAA4B;EAC9B;EACA;IACE,2BAA2B;EAC7B;AACF;;AAEA;EACE;IACE,iCAAiC;EACnC;EACA;IACE,yDAAyD;EAC3D;AACF;;AAEA;EACE;IACE,sCAAsC;IACtC,UAAU;IACV,cAAc;EAChB;EACA;IACE,uCAAuC;IACvC,UAAU;IACV,cAAc;IACd,6BAA6B;EAC/B;EACA;IACE,iCAAiC;IACjC,UAAU;IACV,cAAc;IACd,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,uCAAuC;IACvC,UAAU;IACV,cAAc;EAChB;EACA;IACE,sCAAsC;IACtC,UAAU;IACV,cAAc;IACd,6BAA6B;EAC/B;EACA;IACE,iCAAiC;IACjC,UAAU;IACV,cAAc;IACd,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,0BAA0B;EAC5B;EACA;IACE,4BAA4B;EAC9B;AACF;;AAEA;EACE;IACE,0BAA0B;EAC5B;EACA;IACE,2BAA2B;EAC7B;AACF;;AAEA,wBAAwB;AACxB;EACE,2CAA2C;EAC3C,0HAA0H;EAC1H,0BAA0B;EAC1B,qBAAqB;EACrB,6BAA6B;EAC7B,oCAAoC;EACpC,4EAA4E;AAC9E;;AAEA,gCAAgC;AAChC;EACE,6CAA6C;AAC/C;;AAEA,4BAA4B;AAC5B;EACE,kBAAkB;EAClB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,2BAA2B;EAC3B,+CAA+C;AACjD;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,WAAW;EACX,WAAW;EACX,YAAY;EACZ,sFAAsF;EACtF,qBAAqB;AACvB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,uBAAuB;EACvB,0BAA0B;EAC1B,qCAAqC;EACrC,kBAAkB;EAClB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,2BAA2B;EAC3B,2CAA2C;EAC3C,yBAAyB;EACzB,qCAAqC;EACrC,6CAA6C;AAC/C;;AAEA,0BAA0B;AAC1B;EACE,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,sFAAsF;EACtF,4BAA4B;EAC5B,0BAA0B;AAC5B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA,kCAAkC;AAClC;EACE,0EAA0E;EAC1E,qBAAqB;EACrB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,4EAA4E;EAC5E,qBAAqB;EACrB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA,4BAA4B;AAC5B;EACE,uCAAuC;AACzC;;AAEA,6BAA6B,qBAAqB,EAAE;AACpD,6BAA6B,qBAAqB,EAAE;AACpD,6BAA6B,qBAAqB,EAAE;;AAEpD;EACE,2BAA2B;EAC3B,qCAAqC;AACvC;;AAEA,oCAAoC;AACpC;EACE,uCAAuC;AACzC;;AAEA,gCAAgC,qBAAqB,EAAE;AACvD,gCAAgC,qBAAqB,EAAE;;AAEvD;EACE,2BAA2B;EAC3B,oCAAoC;AACtC;;AAEA,4BAA4B;AAC5B;EACE,uCAAuC;AACzC;;AAEA,6BAA6B,qBAAqB,EAAE;AACpD,6BAA6B,qBAAqB,EAAE;AACpD,6BAA6B,qBAAqB,EAAE;AACpD,6BAA6B,qBAAqB,EAAE;;AAEpD;EACE,2BAA2B;EAC3B,oCAAoC;AACtC;;AAEA,kCAAkC;AAClC,0BAA0B,8CAA8C,EAAE;AAC1E,0BAA0B,0CAA0C,EAAE;AACtE,0BAA0B,+CAA+C,EAAE;;AAE3E,uBAAuB;AACvB;EACE;IACE,wBAAwB;EAC1B;EACA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,yBAAyB;EAC3B;AACF;;AAEA,4BAA4B;AAC5B;EACE;IACE,oBAAoB;EACtB;AACF;;AAEA;EACE;IACE,oBAAoB;IACpB,iCAAiC;EACnC;AACF;;AAEA,6BAA6B;AAC7B;EACE;IACE,2BAA2B;IAC3B,mCAAmC;IACnC,0BAA0B;EAC5B;;EAEA;IACE,iCAAiC;IACjC,oBAAoB;EACtB;AACF;;AAEA,wCAAwC;AACxC;EACE;IACE,qCAAqC;IACrC,oBAAoB;EACtB;;EAEA;IACE,gDAAgD;IAChD,oBAAoB;EACtB;;EAEA;IACE,qCAAqC;IACrC,sBAAsB;EACxB;;EAEA;IACE,iCAAiC;IACjC,oBAAoB;IACpB,8BAA8B;EAChC;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,yBAAyB;EAC3B;AACF;;AAEA,wCAAwC;AACxC;EACE;IACE,qCAAqC;IACrC,oBAAoB;EACtB;;EAEA;IACE,qCAAqC;IACrC,oBAAoB;EACtB;;EAEA,sDAAsD;;EAEtD;IACE,iCAAiC;IACjC,oBAAoB;IACpB,sBAAsB;EACxB;;EAEA;IACE,sBAAsB;IACtB,2BAA2B;EAC7B;AACF;;AAEA,mCAAmC;AACnC;EACE,sDAAsD;;EAEtD;IACE,0BAA0B;EAC5B;;EAEA;IACE,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;IAC9B,gCAAgC;EAClC;AACF;;AAEA,sBAAsB;AACtB;EACE,YAAY,kBAAkB,EAAE,oBAAoB,EAAE;EACtD,YAAY,kBAAkB,EAAE,mBAAmB,EAAE;AACvD;;AAEA,uCAAuC;AACvC;EACE;IACE,sEAAsE;EACxE;;EAEA;IACE,sEAAsE;EACxE;;EAEA;IACE,sEAAsE;EACxE;AACF;;AAEA,6CAA6C;AAC7C;EACE;IACE,8BAA8B;IAC9B,uBAAuB;EACzB;;EAEA;IACE,kBAAkB;IAClB,0BAA0B;EAC5B;AACF;;AAEA,WAAW;AACX;EACE,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,8BAA8B;AAChC;;AAEA,SAAS,WAAW,EAAE;AACtB,SAAS,SAAS,EAAE;AACpB,SAAS,WAAW,EAAE;AACtB,SAAS,SAAS,EAAE;AACpB,UAAU,SAAS,EAAE;;AAErB;EACE,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA,SAAS;AACT;EACE,aAAa;AACf;;AAEA;EACE,gDAAgD;AAClD;;AAEA;EACE,gDAAgD;AAClD;;AAEA;EACE;IACE,gDAAgD;EAClD;EACA,gBAAgB,iBAAiB,EAAE,cAAc,EAAE;EACnD,eAAe,kBAAkB,EAAE,oBAAoB,EAAE;EACzD,gBAAgB,mBAAmB,EAAE;AACvC;;AAEA;EACE;IACE,aAAa;EACf;EACA;IACE,aAAa;EACf;EACA,gBAAgB,eAAe,EAAE,cAAc,EAAE;EACjD,gBAAgB,iBAAiB,EAAE,iBAAiB,EAAE;AACxD;;AAEA;EACE,gBAAgB,eAAe,EAAE,cAAc,EAAE;AACnD;;AAEA,YAAY;AACZ,QAAQ,qBAAqB,EAAE;AAC/B,QAAQ,mBAAmB,EAAE;AAC7B,QAAQ,qBAAqB,EAAE;AAC/B,QAAQ,mBAAmB,EAAE;AAC7B,SAAS,mBAAmB,EAAE;AAC9B,SAAS,mBAAmB,EAAE;;AAE9B,QAAQ,kBAAkB,EAAE;AAC5B,QAAQ,gBAAgB,EAAE;AAC1B,QAAQ,kBAAkB,EAAE;AAC5B,QAAQ,gBAAgB,EAAE;;AAE1B,OAAO,aAAa,EAAE;AACtB,OAAO,eAAe,EAAE;AACxB,OAAO,aAAa,EAAE;AACtB,QAAQ,kBAAkB,EAAE,mBAAmB,EAAE;AACjD,QAAQ,iBAAiB,EAAE,oBAAoB,EAAE;;AAEjD,mBAAmB;AACnB;EACE,aAAa;AACf;;AAEA;EACE;IACE,cAAc;EAChB;AACF;;AAEA,aAAa;AACb;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,YAAY;AACZ;EACE,WAAW;AACb;;AAEA,gBAAgB;AAChB;EACE,yBAAyB;AAC3B;;AAEA;EACE,uDAAuD;AACzD;;AAEA,kBAAkB;AAClB;EACE,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA,iBAAiB;AACjB;EACE,+BAA+B;EAC/B,0BAA0B;EAC1B,kBAAkB;EAClB,mBAAmB;EACnB,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA,eAAe;AACf;EACE,YAAY;EACZ,qBAAqB;EACrB,oBAAoB;EACpB,qBAAqB;EACrB,yBAAyB;EACzB,eAAe;AACjB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,mCAAmC;EACnC,cAAc;AAChB;;AAEA,YAAY;AACZ;EACE,uBAAuB;EACvB,qBAAqB;EACrB,YAAY;EACZ,gCAAgC;EAChC,gBAAgB;EAChB,mBAAmB;EACnB,eAAe;EACf,yBAAyB;EACzB,qBAAqB;EACrB,qBAAqB;EACrB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,6DAA6D;EAC7D,YAAY;AACd;;AAEA;EACE,2BAA2B;EAC3B,8CAA8C;AAChD;;;AAGA;EACE,uBAAuB;EACvB,YAAY;EACZ,0CAA0C;AAC5C;;AAEA;EACE,oCAAoC;EACpC,sCAAsC;AACxC;;AAEA,iBAAiB;AACjB;EACE,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT;;;;2EAIyE;EACzE,0BAA0B;EAC1B,uDAAuD;EACvD,YAAY;AACd;;AAEA;EACE;IACE,eAAe;IACf,gBAAgB;EAClB;AACF;;AAEA,eAAe;AACf;EACE,eAAe;EACf,6BAA6B;AAC/B;;AAEA;EACE,kCAAkC;EAClC,mBAAmB;EACnB,aAAa;EACb,kBAAkB;EAClB,yCAAyC;EACzC,mCAA2B;UAA3B,2BAA2B;EAC3B,0CAA0C;EAC1C,yBAAyB;AAC3B;;AAEA;EACE,2BAA2B;EAC3B,0CAA0C;AAC5C;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA,sBAAsB;AACtB;EACE;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,gBAAgB;EAClB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,mBAAmB;EACrB;;EAEA;IACE,uBAAuB;IACvB,mBAAmB;EACrB;AACF;;AAEA,iBAAiB;AACjB;EACE,gBAAgB;EAChB,YAAY;EACZ,cAAc;EACd,iBAAiB;EACjB,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;AACvB;;AAEA,kBAAkB;AAClB;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,0CAA0C;EAC1C,iCAAiC;EACjC,YAAY;EACZ,gCAAgC;EAChC,eAAe;EACf,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,6CAA6C;AAC/C;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,cAAc;EACd,qBAAqB;EACrB,gBAAgB;EAChB,cAAc;EACd,mBAAmB;AACrB;;AAEA,gBAAgB;AAChB;EACE,gBAAgB;EAChB,cAAc;EACd,aAAa;AACf;;AAEA;EACE;IACE,aAAa;EACf;AACF;;AAEA,UAAU;AACV;EACE,kCAAkC;EAClC,mBAAmB;EACnB,eAAe;EACf,yCAAyC;EACzC,mCAA2B;UAA3B,2BAA2B;EAC3B,0CAA0C;EAC1C,mBAAmB;EACnB,yBAAyB;AAC3B;;AAEA;EACE,2BAA2B;EAC3B,0CAA0C;AAC5C;;AAEA;EACE;IACE,aAAa;EACf;AACF;;AAEA,iBAAiB;AACjB;EACE,aAAa;EACb,0BAA0B;EAC1B,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE;IACE,qCAAqC;EACvC;AACF;;AAEA,oBAAoB;AACpB;EACE,0BAA0B;EAC1B,mBAAmB;EACnB,eAAe;EACf,0CAA0C;EAC1C,qBAAqB;AACvB;;AAEA,yBAAyB;AACzB;EACE;IACE,aAAa;EACf;;EAEA;IACE,SAAS;EACX;;EAEA;IACE,aAAa;EACf;;EAEA,sCAAsC;EACtC;IACE,gBAAgB;IAChB,uBAAuB;EACzB;;EAEA,sBAAsB;EACtB;IACE,qCAAqC;IACrC,WAAW;EACb;AACF;;AAEA;EACE;IACE,qCAAqC;EACvC;AACF;;AAEA,8BAA8B;AAC9B;EACE,kCAAkC;EAClC,mBAAmB;EACnB,eAAe;EACf,yCAAyC;EACzC,mCAA2B;UAA3B,2BAA2B;EAC3B,0CAA0C;EAC1C,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,6FAA6F;EAC7F,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA,iBAAiB;AACjB;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,8BAA8B;EAC9B,sBAAsB;EACtB,aAAa;EACb,kBAAkB;EAClB,0CAA0C;AAC5C;;AAEA;EACE,qCAAqC;EACrC,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;EACpC,kCAAkC;AACpC;;AAEA,oBAAoB;AACpB;EACE,aAAa;EACb,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,mBAAmB;EACnB,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,2BAA2B;EAC3B,8CAA8C;AAChD;;AAEA;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,2BAA2B;EAC3B,6CAA6C;AAC/C;;AAEA;EACE,mBAAmB;EACnB,cAAc;EACd,mBAAmB;EACnB,eAAe;EACf,gBAAgB;AAClB;;AAEA,oBAAoB;AACpB;EACE,8BAA8B;EAC9B,sBAAsB;EACtB,aAAa;EACb,cAAc;EACd,0CAA0C;AAC5C;;AAEA,sBAAsB;AACtB;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,kBAAkB;EAClB,mBAAmB;EACnB,sBAAsB;EACtB,0CAA0C;EAC1C,yBAAyB;EACzB,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,qBAAqB;EACrB,mBAAmB;EACnB,yBAAyB;EACzB,YAAY;EACZ,gBAAgB;EAChB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,mCAAmC;AACrC;;AAEA,qBAAqB;AACrB;EACE,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,YAAY;EACZ,mCAAmC;EACnC,qBAAqB;EACrB,yBAAyB;EACzB,mBAAmB;EACnB,wBAAgB;UAAhB,gBAAgB;EAChB,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,6CAA6C;AAC/C;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,QAAQ;EACR,2BAA2B;EAC3B,WAAW;EACX,YAAY;EACZ,cAAc;EACd,oBAAoB;AACtB;;AAEA,sBAAsB;AACtB;EACE;IACE,aAAa;EACf;;EAEA;IACE,YAAY;IACZ,cAAc;EAChB;;EAEA;IACE,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,iBAAiB;IACjB,eAAe;EACjB;;EAEA;IACE,gBAAgB;IAChB,iBAAiB;EACnB;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,mBAAmB;EACrB;;EAEA;IACE,iBAAiB;EACnB;AACF\",\"sourcesContent\":[\"/* Reset and Base Styles */\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\n/* CSS Variables for Theme System */\\n:root {\\n  /* Enhanced Professional Dark Theme (Default) */\\n  --bg-primary: linear-gradient(135deg, #0F0F23 0%, #1E1E38 100%);\\n  --bg-secondary: #1A1B2E;\\n  --bg-tertiary: #16213E;\\n  --text-primary: #F8FAFC;\\n  --text-secondary: #94A3B8;\\n  --text-accent: #8B5CF6;\\n  --accent-purple: #8B5CF6;\\n  --accent-blue: #2563EB;\\n  --accent-green: #059669;\\n  --accent-orange: #EA580C;\\n  --card-bg: rgba(26, 27, 46, 0.95);\\n  --auth-container-bg: #1A1B2E;\\n  --faq-bg: #1A1B2E;\\n  --footer-bg: #1A1B2E;\\n  --footer-text: #94A3B8;\\n  --footer-star: #8B5CF6;\\n  --border-color: rgba(248, 250, 252, 0.08);\\n  --shadow: rgba(0, 0, 0, 0.25);\\n}\\n\\n[data-theme=\\\"light\\\"] {\\n  /* Enhanced Professional Light Theme */\\n  --bg-primary: linear-gradient(135deg, #FAFBFC 0%, #F4F6F8 100%);\\n  --bg-secondary: #FFFFFF;\\n  --bg-tertiary: #F8FAFC;\\n  --text-primary: #0F172A;\\n  --text-secondary: #475569;\\n  --text-accent: #8B5CF6;\\n  --accent-purple: #8B5CF6;\\n  --accent-blue: #2563EB;\\n  --accent-green: #059669;\\n  --accent-orange: #EA580C;\\n  --card-bg: rgba(255, 255, 255, 0.95);\\n  --auth-container-bg: #F1F5F9;\\n  --faq-bg: #FFFFFF;\\n  --footer-bg: #FFFFFF;\\n  --footer-text: #475569;\\n  --footer-star: #8B5CF6;\\n  --border-color: rgba(15, 23, 42, 0.08);\\n  --shadow: rgba(15, 23, 42, 0.04);\\n}\\n\\n/* Price Ticker Background - Theme responsive */\\n.price-ticker {\\n  background: var(--bg-secondary) !important;\\n}\\n\\n/* Price Ticker - Never wrap, always fit */\\n.price-ticker {\\n  display: flex !important;\\n  align-items: center !important;\\n  justify-content: center !important;\\n  overflow: hidden !important;\\n  white-space: nowrap !important;\\n}\\n\\n.price-ticker span {\\n  white-space: nowrap !important;\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  flex-shrink: 0 !important;\\n}\\n\\n/* Navbar - Never wrap, always fit */\\nnav {\\n  overflow: hidden !important;\\n}\\n\\nnav > div {\\n  flex-wrap: nowrap !important;\\n  overflow: hidden !important;\\n}\\n\\n.desktop-nav {\\n  flex-wrap: nowrap !important;\\n  overflow: hidden !important;\\n}\\n\\n.desktop-nav a {\\n  white-space: nowrap !important;\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n}\\n\\n/* Mobile Menu Hover Effects */\\n.mobile-menu-link {\\n  position: relative !important;\\n  overflow: hidden !important;\\n}\\n\\n.mobile-menu-link:hover {\\n  background: var(--card-bg) !important;\\n  transform: translateY(-2px) !important;\\n  box-shadow: 0 4px 12px var(--shadow) !important;\\n}\\n\\n.mobile-menu-link::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: -100%;\\n  width: 100%;\\n  height: 100%;\\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\\n  transition: left 0.5s;\\n}\\n\\n.mobile-menu-link:hover::before {\\n  left: 100%;\\n}\\n\\n/* Feature Cards Mobile Layout */\\n@media (max-width: 768px) {\\n  .feature-cards-grid {\\n    display: flex !important;\\n    flex-direction: column !important;\\n    gap: 1rem !important;\\n    align-items: center !important;\\n    padding: 0 1rem !important;\\n  }\\n  \\n  .feature-card {\\n    width: 100% !important;\\n    max-width: 300px !important;\\n    height: auto !important;\\n    min-height: 80px !important;\\n    padding: 1rem !important;\\n    flex-direction: row !important;\\n    align-items: center !important;\\n    gap: 1rem !important;\\n  }\\n  \\n  .feature-card h3 {\\n    font-size: 1rem !important;\\n    margin-bottom: 0 !important;\\n  }\\n  \\n  .feature-card p {\\n    font-size: 0.875rem !important;\\n    margin: 0 !important;\\n  }\\n}\\n\\nbody {\\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  background: var(--bg-primary);\\n  min-height: 100vh;\\n  color: var(--text-primary);\\n  line-height: 1.6;\\n  transition: all 0.3s ease;\\n}\\n\\n#root {\\n  min-height: 100vh;\\n}\\n\\n/* Container */\\n.container {\\n  max-width: 1200px;\\n  margin: 0 auto;\\n  padding: 0 1rem;\\n}\\n\\n@media (min-width: 640px) {\\n  .container {\\n    padding: 0 1.5rem;\\n  }\\n}\\n\\n@media (min-width: 1024px) {\\n  .container {\\n    padding: 0 2rem;\\n  }\\n}\\n\\n/* Typography */\\n.text-center {\\n  text-align: center;\\n}\\n\\n.text-purple {\\n  color: #A855F7;\\n}\\n\\n.text-blue {\\n  color: #3B82F6;\\n}\\n\\n.text-green {\\n  color: #10B981;\\n}\\n\\n.text-red {\\n  color: #EF4444;\\n}\\n\\n.text-gray {\\n  color: #94A3B8;\\n}\\n\\n.text-white {\\n  color: white;\\n}\\n\\n.font-bold {\\n  font-weight: 700;\\n}\\n\\n.font-semibold {\\n  font-weight: 600;\\n}\\n\\n.font-medium {\\n  font-weight: 500;\\n}\\n\\n/* Responsive Typography */\\n.text-xs { font-size: 0.75rem; line-height: 1rem; }\\n.text-sm { font-size: 0.875rem; line-height: 1.25rem; }\\n.text-base { font-size: 1rem; line-height: 1.5rem; }\\n.text-lg { font-size: 1.125rem; line-height: 1.75rem; }\\n.text-xl { font-size: 1.25rem; line-height: 1.75rem; }\\n.text-2xl { font-size: 1.5rem; line-height: 2rem; }\\n.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }\\n.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }\\n.text-5xl { font-size: 3rem; line-height: 1; }\\n.text-6xl { font-size: 3.75rem; line-height: 1; }\\n.text-7xl { font-size: 4.5rem; line-height: 1; }\\n.text-8xl { font-size: 6rem; line-height: 1; }\\n.text-9xl { font-size: 8rem; line-height: 1; }\\n\\n/* Additional Typography Classes */\\n.leading-tight { line-height: 1.25; }\\n.max-w-3xl { max-width: 48rem; }\\n.min-w-\\\\[250px\\\\] { min-width: 250px; }\\n.w-12 { width: 3rem; }\\n.h-12 { height: 3rem; }\\n\\n/* Additional Layout Classes */\\n.mx-auto { margin-left: auto; margin-right: auto; }\\n.z-10 { z-index: 10; }\\n\\n/* Advanced Animations */\\n@keyframes flagWave {\\n  0%, 100% { \\n    transform: translateY(0px) rotate(0deg); \\n  }\\n  25% { \\n    transform: translateY(-2px) rotate(0.5deg); \\n  }\\n  50% { \\n    transform: translateY(-1px) rotate(0deg); \\n  }\\n  75% { \\n    transform: translateY(-3px) rotate(-0.5deg); \\n  }\\n}\\n\\n@keyframes floatUp {\\n  0% { \\n    transform: translateY(30px); \\n    opacity: 0; \\n  }\\n  100% { \\n    transform: translateY(0); \\n    opacity: 1; \\n  }\\n}\\n\\n@keyframes slideInLeft {\\n  0% { \\n    transform: translateX(-50px); \\n    opacity: 0; \\n  }\\n  100% { \\n    transform: translateX(0); \\n    opacity: 1; \\n  }\\n}\\n\\n@keyframes slideInRight {\\n  0% { \\n    transform: translateX(50px); \\n    opacity: 0; \\n  }\\n  100% { \\n    transform: translateX(0); \\n    opacity: 1; \\n  }\\n}\\n\\n@keyframes slideInUp {\\n  0% { \\n    transform: translateY(50px); \\n    opacity: 0; \\n  }\\n  100% { \\n    transform: translateY(0); \\n    opacity: 1; \\n  }\\n}\\n\\n@keyframes fadeIn {\\n  0% { \\n    opacity: 0; \\n    transform: translateY(-10px);\\n  }\\n  100% { \\n    opacity: 1; \\n    transform: translateY(0);\\n  }\\n}\\n\\n@keyframes fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@keyframes pulse {\\n  0%, 100% { \\n    transform: scale(1); \\n  }\\n  50% { \\n    transform: scale(1.05); \\n  }\\n}\\n\\n@keyframes shimmer {\\n  0% { \\n    background-position: -200% 0; \\n  }\\n  100% { \\n    background-position: 200% 0; \\n  }\\n}\\n\\n@keyframes cryptoGlow {\\n  0%, 100% { \\n    text-shadow: 0 0 5px currentColor; \\n  }\\n  50% { \\n    text-shadow: 0 0 20px currentColor, 0 0 30px currentColor; \\n  }\\n}\\n\\n@keyframes riseUp {\\n  0% { \\n    transform: translateY(50px) scale(0.7); \\n    opacity: 0; \\n    color: #10B981;\\n  }\\n  50% { \\n    transform: translateY(-25px) scale(1.3); \\n    opacity: 1; \\n    color: #A855F7;\\n    text-shadow: 0 0 20px #A855F7;\\n  }\\n  100% { \\n    transform: translateY(0) scale(1); \\n    opacity: 1; \\n    color: #10B981;\\n    text-shadow: none;\\n  }\\n}\\n\\n@keyframes fallDown {\\n  0% { \\n    transform: translateY(-50px) scale(0.7); \\n    opacity: 0; \\n    color: #EF4444;\\n  }\\n  50% { \\n    transform: translateY(25px) scale(1.3); \\n    opacity: 1; \\n    color: #3B82F6;\\n    text-shadow: 0 0 20px #3B82F6;\\n  }\\n  100% { \\n    transform: translateY(0) scale(1); \\n    opacity: 1; \\n    color: #EF4444;\\n    text-shadow: none;\\n  }\\n}\\n\\n@keyframes riseFloat {\\n  0%, 100% { \\n    transform: translateY(0px); \\n  }\\n  50% { \\n    transform: translateY(-15px); \\n  }\\n}\\n\\n@keyframes fallFloat {\\n  0%, 100% { \\n    transform: translateY(0px); \\n  }\\n  50% { \\n    transform: translateY(15px); \\n  }\\n}\\n\\n/* Flag Wave Animation */\\n.flag-wave-text {\\n  animation: flagWave 4s ease-in-out infinite;\\n  background: linear-gradient(45deg, var(--text-secondary), var(--accent-purple), var(--accent-blue), var(--text-secondary));\\n  background-size: 400% 400%;\\n  background-clip: text;\\n  -webkit-background-clip: text;\\n  -webkit-text-fill-color: transparent;\\n  animation: flagWave 4s ease-in-out infinite, shimmer 3s ease-in-out infinite;\\n}\\n\\n/* Crypto Price Glow Animation */\\n.crypto-price {\\n  animation: cryptoGlow 2s ease-in-out infinite;\\n}\\n\\n/* Button Hover Animations */\\n.btn-primary {\\n  position: relative;\\n  overflow: hidden;\\n  transition: all 0.3s ease;\\n}\\n\\n.btn-primary:hover {\\n  transform: translateY(-3px);\\n  box-shadow: 0 10px 25px rgba(139, 92, 246, 0.4);\\n}\\n\\n.btn-primary::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: -100%;\\n  width: 100%;\\n  height: 100%;\\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\\n  transition: left 0.5s;\\n}\\n\\n.btn-primary:hover::before {\\n  left: 100%;\\n}\\n\\n.btn-secondary {\\n  background: transparent;\\n  color: var(--text-primary);\\n  border: 2px solid var(--text-primary);\\n  position: relative;\\n  overflow: hidden;\\n  transition: all 0.3s ease;\\n}\\n\\n.btn-secondary:hover {\\n  transform: translateY(-3px);\\n  background: var(--accent-purple) !important;\\n  color: #FFFFFF !important;\\n  box-shadow: 0 10px 25px var(--shadow);\\n  border-color: var(--accent-purple) !important;\\n}\\n\\n/* Card Hover Animations */\\n.info-card {\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.info-card::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);\\n  transform: translateX(-100%);\\n  transition: transform 0.6s;\\n}\\n\\n.info-card:hover::before {\\n  transform: translateX(100%);\\n}\\n\\n/* Rise and Fall Word Animations */\\n.rise-word {\\n  animation: riseUp 0.6s linear 0.2s both, riseFloat 1.5s linear 1s infinite;\\n  display: inline-block;\\n  font-weight: 800;\\n  letter-spacing: 2px;\\n}\\n\\n.fall-word {\\n  animation: fallDown 0.6s linear 0.4s both, fallFloat 1.5s linear 1s infinite;\\n  display: inline-block;\\n  font-weight: 800;\\n  letter-spacing: 2px;\\n}\\n\\n/* Process Card Animations */\\n.process-card {\\n  animation: slideInUp 0.8s ease-out both;\\n}\\n\\n.process-card:nth-child(1) { animation-delay: 0.2s; }\\n.process-card:nth-child(2) { animation-delay: 0.4s; }\\n.process-card:nth-child(3) { animation-delay: 0.6s; }\\n\\n.process-card:hover {\\n  transform: translateY(-8px);\\n  box-shadow: 0 12px 24px var(--shadow);\\n}\\n\\n/* Live Prediction Card Animations */\\n.prediction-card {\\n  animation: slideInUp 0.8s ease-out both;\\n}\\n\\n.prediction-card:nth-child(1) { animation-delay: 0.2s; }\\n.prediction-card:nth-child(2) { animation-delay: 0.4s; }\\n\\n.prediction-card:hover {\\n  transform: translateY(-4px);\\n  box-shadow: 0 8px 16px var(--shadow);\\n}\\n\\n/* Feature Card Animations */\\n.feature-card {\\n  animation: slideInUp 0.8s ease-out both;\\n}\\n\\n.feature-card:nth-child(1) { animation-delay: 0.1s; }\\n.feature-card:nth-child(2) { animation-delay: 0.2s; }\\n.feature-card:nth-child(3) { animation-delay: 0.3s; }\\n.feature-card:nth-child(4) { animation-delay: 0.4s; }\\n\\n.feature-card:hover {\\n  transform: translateY(-4px);\\n  box-shadow: 0 8px 16px var(--shadow);\\n}\\n\\n/* Staggered Animation for Cards */\\n.info-card:nth-child(1) { animation: slideInLeft 0.8s ease-out 0.2s both; }\\n.info-card:nth-child(2) { animation: floatUp 0.8s ease-out 0.4s both; }\\n.info-card:nth-child(3) { animation: slideInRight 0.8s ease-out 0.6s both; }\\n\\n/* Desktop Navigation */\\n@media (min-width: 768px) {\\n  .desktop-nav {\\n    display: flex !important;\\n  }\\n  .mobile-menu-btn {\\n    display: none !important;\\n  }\\n}\\n\\n@media (max-width: 767px) {\\n  .mobile-menu-btn {\\n    display: block !important;\\n  }\\n}\\n\\n/* Price Ticker Responsive */\\n@media (max-width: 768px) {\\n  .price-ticker-content {\\n    gap: 2rem !important;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .price-ticker-content {\\n    gap: 1rem !important;\\n    flex-direction: column !important;\\n  }\\n}\\n\\n/* Mobile Button Responsive */\\n@media (max-width: 640px) {\\n  .btn {\\n    min-width: 200px !important;\\n    padding: 0.875rem 1.5rem !important;\\n    font-size: 1rem !important;\\n  }\\n  \\n  .hero-buttons {\\n    flex-direction: column !important;\\n    gap: 1rem !important;\\n  }\\n}\\n\\n/* Tablet Responsive (768px and below) */\\n@media (max-width: 768px) {\\n  .live-predictions-grid {\\n    grid-template-columns: 1fr !important;\\n    gap: 1rem !important;\\n  }\\n  \\n  .feature-cards-grid {\\n    grid-template-columns: repeat(2, 1fr) !important;\\n    gap: 1rem !important;\\n  }\\n  \\n  .process-cards-grid {\\n    grid-template-columns: 1fr !important;\\n    gap: 1.5rem !important;\\n  }\\n  \\n  .hero-buttons {\\n    flex-direction: column !important;\\n    gap: 1rem !important;\\n    align-items: center !important;\\n  }\\n  \\n  .desktop-nav {\\n    display: none !important;\\n  }\\n  \\n  .mobile-menu-btn {\\n    display: block !important;\\n  }\\n}\\n\\n/* Mobile Responsive (640px and below) */\\n@media (max-width: 640px) {\\n  .feature-cards-grid {\\n    grid-template-columns: 1fr !important;\\n    gap: 1rem !important;\\n  }\\n  \\n  .process-cards-grid {\\n    grid-template-columns: 1fr !important;\\n    gap: 1rem !important;\\n  }\\n  \\n  /* Price ticker stays horizontal on all screen sizes */\\n  \\n  .hero-buttons {\\n    flex-direction: column !important;\\n    gap: 1rem !important;\\n    width: 100% !important;\\n  }\\n  \\n  .btn {\\n    width: 100% !important;\\n    max-width: 300px !important;\\n  }\\n}\\n\\n/* Small Mobile (480px and below) */\\n@media (max-width: 480px) {\\n  /* Price ticker stays horizontal on all screen sizes */\\n  \\n  .hero-buttons {\\n    padding: 0 1rem !important;\\n  }\\n  \\n  .btn {\\n    width: 100% !important;\\n    max-width: 280px !important;\\n    font-size: 0.875rem !important;\\n    padding: 0.75rem 1rem !important;\\n  }\\n}\\n\\n/* Mobile Typography */\\n@media (max-width: 640px) {\\n  .text-4xl { font-size: 1.75rem; line-height: 2.25rem; }\\n  .text-5xl { font-size: 2.25rem; line-height: 2.5rem; }\\n}\\n\\n/* iPad Responsive (1024px and below) */\\n@media (max-width: 1024px) {\\n  .process-cards-grid {\\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)) !important;\\n  }\\n  \\n  .live-predictions-grid {\\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)) !important;\\n  }\\n  \\n  .feature-cards-grid {\\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) !important;\\n  }\\n}\\n\\n/* Large Mobile Responsive (480px to 640px) */\\n@media (min-width: 480px) and (max-width: 640px) {\\n  .hero-buttons {\\n    flex-direction: row !important;\\n    gap: 0.75rem !important;\\n  }\\n  \\n  .btn {\\n    flex: 1 !important;\\n    min-width: auto !important;\\n  }\\n}\\n\\n/* Layout */\\n.flex {\\n  display: flex;\\n}\\n\\n.flex-col {\\n  flex-direction: column;\\n}\\n\\n.items-center {\\n  align-items: center;\\n}\\n\\n.justify-center {\\n  justify-content: center;\\n}\\n\\n.justify-between {\\n  justify-content: space-between;\\n}\\n\\n.gap-2 { gap: 0.5rem; }\\n.gap-4 { gap: 1rem; }\\n.gap-6 { gap: 1.5rem; }\\n.gap-8 { gap: 2rem; }\\n.gap-12 { gap: 3rem; }\\n\\n.w-full {\\n  width: 100%;\\n}\\n\\n.min-h-screen {\\n  min-height: 100vh;\\n}\\n\\n/* Grid */\\n.grid {\\n  display: grid;\\n}\\n\\n.grid-cols-1 {\\n  grid-template-columns: repeat(1, minmax(0, 1fr));\\n}\\n\\n.grid-cols-3 {\\n  grid-template-columns: repeat(3, minmax(0, 1fr));\\n}\\n\\n@media (min-width: 640px) {\\n  .sm\\\\:grid-cols-3 {\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n  }\\n  .sm\\\\:text-7xl { font-size: 4.5rem; line-height: 1; }\\n  .sm\\\\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }\\n  .sm\\\\:flex-row { flex-direction: row; }\\n}\\n\\n@media (min-width: 768px) {\\n  .md\\\\:flex {\\n    display: flex;\\n  }\\n  .md\\\\:hidden {\\n    display: none;\\n  }\\n  .md\\\\:text-8xl { font-size: 6rem; line-height: 1; }\\n  .md\\\\:text-2xl { font-size: 1.5rem; line-height: 2rem; }\\n}\\n\\n@media (min-width: 1024px) {\\n  .lg\\\\:text-9xl { font-size: 8rem; line-height: 1; }\\n}\\n\\n/* Spacing */\\n.mb-2 { margin-bottom: 0.5rem; }\\n.mb-4 { margin-bottom: 1rem; }\\n.mb-6 { margin-bottom: 1.5rem; }\\n.mb-8 { margin-bottom: 2rem; }\\n.mb-12 { margin-bottom: 3rem; }\\n.mb-16 { margin-bottom: 4rem; }\\n\\n.mt-2 { margin-top: 0.5rem; }\\n.mt-4 { margin-top: 1rem; }\\n.mt-6 { margin-top: 1.5rem; }\\n.mt-8 { margin-top: 2rem; }\\n\\n.p-4 { padding: 1rem; }\\n.p-6 { padding: 1.5rem; }\\n.p-8 { padding: 2rem; }\\n.px-8 { padding-left: 2rem; padding-right: 2rem; }\\n.py-4 { padding-top: 1rem; padding-bottom: 1rem; }\\n\\n/* Hidden/Visible */\\n.hidden {\\n  display: none;\\n}\\n\\n@media (min-width: 768px) {\\n  .md\\\\:block {\\n    display: block;\\n  }\\n}\\n\\n/* Position */\\n.relative {\\n  position: relative;\\n}\\n\\n.absolute {\\n  position: absolute;\\n}\\n\\n/* Z-index */\\n.z-10 {\\n  z-index: 10;\\n}\\n\\n/* Transitions */\\n.transition-all {\\n  transition: all 0.3s ease;\\n}\\n\\n.transition-colors {\\n  transition: color 0.3s ease, background-color 0.3s ease;\\n}\\n\\n/* Hover Effects */\\n.hover\\\\:scale-105:hover {\\n  transform: scale(1.05);\\n}\\n\\n.hover\\\\:opacity-80:hover {\\n  opacity: 0.8;\\n}\\n\\n/* Price Ticker */\\n.price-ticker {\\n  background: var(--bg-secondary);\\n  color: var(--text-primary);\\n  padding: 0.75rem 0;\\n  font-size: 1.125rem;\\n  font-weight: 700;\\n  text-align: center;\\n}\\n\\n/* Navigation */\\n.nav-link {\\n  color: white;\\n  text-decoration: none;\\n  padding: 0.5rem 1rem;\\n  border-radius: 0.5rem;\\n  transition: all 0.3s ease;\\n  font-size: 1rem;\\n}\\n\\n.nav-link:hover {\\n  background: rgba(255, 255, 255, 0.1);\\n}\\n\\n.nav-link.active {\\n  background: rgba(168, 85, 247, 0.2);\\n  color: #c084fc;\\n}\\n\\n/* Buttons */\\n.btn {\\n  padding: 0.75rem 1.5rem;\\n  border-radius: 9999px;\\n  border: none;\\n  font-family: 'Inter', sans-serif;\\n  font-weight: 600;\\n  font-size: 0.875rem;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  text-decoration: none;\\n  display: inline-block;\\n  text-align: center;\\n  min-width: 120px;\\n}\\n\\n.btn-primary {\\n  background: linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%);\\n  color: white;\\n}\\n\\n.btn-primary:hover {\\n  transform: translateY(-2px);\\n  box-shadow: 0 8px 25px rgba(139, 92, 246, 0.4);\\n}\\n\\n\\n.btn-outline {\\n  background: transparent;\\n  color: white;\\n  border: 2px solid rgba(255, 255, 255, 0.3);\\n}\\n\\n.btn-outline:hover {\\n  background: rgba(255, 255, 255, 0.1);\\n  border-color: rgba(255, 255, 255, 0.5);\\n}\\n\\n/* Hero Section */\\n.hero-section {\\n  padding: 4rem 0;\\n  min-height: 80vh;\\n  display: flex;\\n  align-items: center;\\n  background: var(--bg-primary);\\n  position: relative;\\n}\\n\\n.hero-section::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-image: \\n    linear-gradient(45deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),\\n    linear-gradient(-45deg, rgba(255, 255, 255, 0.02) 25%, transparent 25%),\\n    linear-gradient(45deg, transparent 75%, rgba(255, 255, 255, 0.02) 75%),\\n    linear-gradient(-45deg, transparent 75%, rgba(255, 255, 255, 0.02) 75%);\\n  background-size: 60px 60px;\\n  background-position: 0 0, 0 30px, 30px -30px, -30px 0px;\\n  opacity: 0.3;\\n}\\n\\n@media (min-width: 768px) {\\n  .hero-section {\\n    padding: 6rem 0;\\n    min-height: 90vh;\\n  }\\n}\\n\\n/* Info Cards */\\n.info-cards {\\n  padding: 4rem 0;\\n  background: var(--bg-primary);\\n}\\n\\n.info-card {\\n  background: rgba(45, 27, 105, 0.8);\\n  border-radius: 1rem;\\n  padding: 2rem;\\n  text-align: center;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  transition: all 0.3s ease;\\n}\\n\\n.info-card:hover {\\n  transform: translateY(-4px);\\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);\\n}\\n\\n.info-card-icon {\\n  width: 4rem;\\n  height: 4rem;\\n  margin: 0 auto 1.5rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.info-card-text {\\n  color: white;\\n  font-size: 1.125rem;\\n  font-weight: 600;\\n}\\n\\n/* Mobile Responsive */\\n@media (max-width: 640px) {\\n  .container {\\n    padding: 0 1rem;\\n  }\\n  \\n  .hero-section {\\n    padding: 2rem 0;\\n    min-height: 70vh;\\n  }\\n  \\n  .info-cards {\\n    padding: 2rem 0;\\n  }\\n  \\n  .info-card {\\n    padding: 1.5rem;\\n    margin-bottom: 1rem;\\n  }\\n  \\n  .btn {\\n    padding: 0.75rem 1.5rem;\\n    font-size: 0.875rem;\\n  }\\n}\\n\\n/* Theme Toggle */\\n.theme-toggle {\\n  background: none;\\n  border: none;\\n  color: #F59E0B;\\n  font-size: 1.5rem;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n}\\n\\n.theme-toggle:hover {\\n  transform: scale(1.1);\\n}\\n\\n/* Form Elements */\\n.input {\\n  width: 100%;\\n  padding: 1rem;\\n  border-radius: 0.75rem;\\n  border: 2px solid rgba(255, 255, 255, 0.1);\\n  background: rgba(51, 38, 77, 0.8);\\n  color: white;\\n  font-family: 'Inter', sans-serif;\\n  font-size: 1rem;\\n  transition: all 0.3s ease;\\n  margin-bottom: 1rem;\\n}\\n\\n.input:focus {\\n  outline: none;\\n  border-color: #8B5CF6;\\n  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);\\n}\\n\\n.input::placeholder {\\n  color: rgba(255, 255, 255, 0.5);\\n}\\n\\n.label {\\n  display: block;\\n  margin-bottom: 0.5rem;\\n  font-weight: 600;\\n  color: #8B5CF6;\\n  font-size: 0.875rem;\\n}\\n\\n/* Form Layout */\\n.form-container {\\n  max-width: 28rem;\\n  margin: 0 auto;\\n  padding: 2rem;\\n}\\n\\n@media (min-width: 640px) {\\n  .form-container {\\n    padding: 3rem;\\n  }\\n}\\n\\n/* Cards */\\n.card {\\n  background: rgba(45, 27, 105, 0.8);\\n  border-radius: 1rem;\\n  padding: 1.5rem;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  margin-bottom: 1rem;\\n  transition: all 0.3s ease;\\n}\\n\\n.card:hover {\\n  transform: translateY(-2px);\\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);\\n}\\n\\n@media (min-width: 640px) {\\n  .card {\\n    padding: 2rem;\\n  }\\n}\\n\\n/* Betting Grid */\\n.betting-grid {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  gap: 1.5rem;\\n  margin-bottom: 2rem;\\n}\\n\\n@media (min-width: 1024px) {\\n  .betting-grid {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n}\\n\\n/* Chart Container */\\n.chart-container {\\n  background: var(--card-bg);\\n  border-radius: 1rem;\\n  padding: 1.5rem;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  margin-bottom: 1.5rem;\\n}\\n\\n/* Mobile Optimizations */\\n@media (max-width: 640px) {\\n  .chart-container {\\n    padding: 1rem;\\n  }\\n  \\n  .betting-grid {\\n    gap: 1rem;\\n  }\\n  \\n  .card {\\n    padding: 1rem;\\n  }\\n  \\n  /* Ensure buttons are touch-friendly */\\n  .btn {\\n    min-height: 44px;\\n    padding: 0.75rem 1.5rem;\\n  }\\n  \\n  /* Quick bet buttons */\\n  .quick-bet-grid {\\n    grid-template-columns: repeat(3, 1fr);\\n    gap: 0.5rem;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .quick-bet-grid {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n}\\n\\n/* Poll-based Betting Styles */\\n.poll-card {\\n  background: rgba(45, 27, 105, 0.8);\\n  border-radius: 1rem;\\n  padding: 1.5rem;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n  margin-bottom: 1rem;\\n  transition: all 0.3s ease;\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.poll-card::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: linear-gradient(135deg, rgba(168, 85, 247, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);\\n  z-index: 1;\\n}\\n\\n.poll-card > * {\\n  position: relative;\\n  z-index: 2;\\n}\\n\\n/* Pool Display */\\n.pool-display {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 1rem;\\n  margin: 1.5rem 0;\\n}\\n\\n.pool-item {\\n  background: rgba(0, 0, 0, 0.3);\\n  border-radius: 0.75rem;\\n  padding: 1rem;\\n  text-align: center;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n}\\n\\n.pool-item.up {\\n  border-color: rgba(16, 185, 129, 0.3);\\n  background: rgba(16, 185, 129, 0.1);\\n}\\n\\n.pool-item.down {\\n  border-color: rgba(239, 68, 68, 0.3);\\n  background: rgba(239, 68, 68, 0.1);\\n}\\n\\n/* Betting Buttons */\\n.betting-buttons {\\n  display: flex;\\n  gap: 1rem;\\n  margin-top: 1.5rem;\\n}\\n\\n.bet-button {\\n  flex: 1;\\n  padding: 1rem;\\n  border-radius: 0.75rem;\\n  font-weight: bold;\\n  font-size: 1.125rem;\\n  transition: all 0.3s ease;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 0.5rem;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.bet-button.up {\\n  background: #10B981;\\n  color: white;\\n}\\n\\n.bet-button.up:hover:not(:disabled) {\\n  background: #059669;\\n  transform: translateY(-2px);\\n  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);\\n}\\n\\n.bet-button.down {\\n  background: #EF4444;\\n  color: white;\\n}\\n\\n.bet-button.down:hover:not(:disabled) {\\n  background: #DC2626;\\n  transform: translateY(-2px);\\n  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.4);\\n}\\n\\n.bet-button:disabled {\\n  background: #6B7280;\\n  color: #9CA3AF;\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: none;\\n}\\n\\n/* Chart Container */\\n.chart-container {\\n  background: rgba(0, 0, 0, 0.2);\\n  border-radius: 0.75rem;\\n  padding: 1rem;\\n  margin: 1rem 0;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n}\\n\\n/* Currency Dropdown */\\n.currency-dropdown {\\n  position: relative;\\n}\\n\\n.currency-dropdown-menu {\\n  position: absolute;\\n  top: 100%;\\n  right: 0;\\n  margin-top: 0.5rem;\\n  background: #1F2937;\\n  border-radius: 0.75rem;\\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\\n  border: 1px solid #374151;\\n  z-index: 10;\\n  min-width: 120px;\\n}\\n\\n.currency-option {\\n  width: 100%;\\n  text-align: left;\\n  padding: 0.75rem 1rem;\\n  font-size: 0.875rem;\\n  transition: all 0.2s ease;\\n  border: none;\\n  background: none;\\n  color: white;\\n  cursor: pointer;\\n}\\n\\n.currency-option:first-child {\\n  border-radius: 0.75rem 0.75rem 0 0;\\n}\\n\\n.currency-option:last-child {\\n  border-radius: 0 0 0.75rem 0.75rem;\\n}\\n\\n.currency-option:hover {\\n  background: #374151;\\n}\\n\\n.currency-option.selected {\\n  color: #A855F7;\\n  background: rgba(168, 85, 247, 0.1);\\n}\\n\\n/* Filter Dropdowns */\\n.filter-dropdown {\\n  position: relative;\\n}\\n\\n.filter-dropdown select {\\n  background: rgba(31, 41, 55, 0.5);\\n  color: white;\\n  padding: 0.5rem 2rem 0.5rem 0.75rem;\\n  border-radius: 0.5rem;\\n  border: 1px solid #374151;\\n  font-size: 0.875rem;\\n  appearance: none;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.filter-dropdown select:hover {\\n  border-color: #6B7280;\\n}\\n\\n.filter-dropdown select:focus {\\n  outline: none;\\n  border-color: #A855F7;\\n  box-shadow: 0 0 0 3px rgba(168, 85, 247, 0.1);\\n}\\n\\n.filter-dropdown-icon {\\n  position: absolute;\\n  right: 0.5rem;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  width: 1rem;\\n  height: 1rem;\\n  color: #9CA3AF;\\n  pointer-events: none;\\n}\\n\\n/* Mobile Responsive */\\n@media (max-width: 640px) {\\n  .poll-card {\\n    padding: 1rem;\\n  }\\n  \\n  .pool-display {\\n    gap: 0.75rem;\\n    margin: 1rem 0;\\n  }\\n  \\n  .betting-buttons {\\n    flex-direction: column;\\n    gap: 0.75rem;\\n  }\\n  \\n  .bet-button {\\n    padding: 0.875rem;\\n    font-size: 1rem;\\n  }\\n  \\n  .chart-container {\\n    padding: 0.75rem;\\n    margin: 0.75rem 0;\\n  }\\n  \\n  .chart-bar {\\n    min-width: 8px;\\n  }\\n  \\n  .text-4xl {\\n    font-size: 2rem;\\n  }\\n  \\n  .text-3xl {\\n    font-size: 1.875rem;\\n  }\\n  \\n  .text-2xl {\\n    font-size: 1.5rem;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4100\n\n}")},5056:(module,__unused_webpack_exports,__webpack_require__)=>{eval('{\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA1Ni5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzP2RkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5056\n\n}')},5072:module=>{eval('{\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA3Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5072\n\n}')},5287:(__unused_webpack_module,exports)=>{eval('{/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;function A(a){if(null===a||"object"!==typeof a)return null;a=z&&a[z]||a["@@iterator"];return"function"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return"object"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;h=0;d=""===d?".":d+":";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,"","",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error("act(...) is not supported in production builds of React.");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version="18.3.1";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5287\n\n}')},5338:(__unused_webpack_module,exports,__webpack_require__)=>{eval("{\n\nvar m = __webpack_require__(961);\nif (true) {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else // removed by dead control flow\n{ var i; }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMzOC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29pbnRvc3MtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcz8xMWIxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5338\n\n}")},6314:module=>{eval('{\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMxNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6314\n\n}')},6540:(module,__unused_webpack_exports,__webpack_require__)=>{eval("{\n\nif (true) {\n  module.exports = __webpack_require__(5287);\n} else // removed by dead control flow\n{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU0MC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcz9hYjViIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6540\n\n}")},7463:(__unused_webpack_module,exports)=>{eval('{/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"===typeof setTimeout?setTimeout:null,E="function"===typeof clearTimeout?clearTimeout:null,F="undefined"!==typeof setImmediate?setImmediate:null;\n"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if("function"===typeof F)S=function(){F(R)};else if("undefined"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQ2My5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzP2ZiMDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztmdW5jdGlvbiBmKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDswPGM7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZigwPGcoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIGgoYSl7cmV0dXJuIDA9PT1hLmxlbmd0aD9udWxsOmFbMF19ZnVuY3Rpb24gayhhKXtpZigwPT09YS5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGI9YVswXSxjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGgsdz1lPj4+MTtkPHc7KXt2YXIgbT0yKihkKzEpLTEsQz1hW21dLG49bSsxLHg9YVtuXTtpZigwPmcoQyxjKSluPGUmJjA+Zyh4LEMpPyhhW2RdPXgsYVtuXT1jLGQ9bik6KGFbZF09QyxhW21dPWMsZD1tKTtlbHNlIGlmKG48ZSYmMD5nKHgsYykpYVtkXT14LGFbbl09YyxkPW47ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fXZhciByPVtdLHQ9W10sdT0xLHY9bnVsbCx5PTMsej0hMSxBPSExLEI9ITEsRD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Om51bGwsRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpudWxsLEY9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBzZXRJbW1lZGlhdGU/c2V0SW1tZWRpYXRlOm51bGw7XG5cInVuZGVmaW5lZFwiIT09dHlwZW9mIG5hdmlnYXRvciYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcmJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZy5iaW5kKG5hdmlnYXRvci5zY2hlZHVsaW5nKTtmdW5jdGlvbiBHKGEpe2Zvcih2YXIgYj1oKHQpO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spayh0KTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKWsodCksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxmKHIsYik7ZWxzZSBicmVhaztiPWgodCl9fWZ1bmN0aW9uIEgoYSl7Qj0hMTtHKGEpO2lmKCFBKWlmKG51bGwhPT1oKHIpKUE9ITAsSShKKTtlbHNle3ZhciBiPWgodCk7bnVsbCE9PWImJksoSCxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBKKGEsYil7QT0hMTtCJiYoQj0hMSxFKEwpLEw9LTEpO3o9ITA7dmFyIGM9eTt0cnl7RyhiKTtmb3Iodj1oKHIpO251bGwhPT12JiYoISh2LmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhTSgpKTspe3ZhciBkPXYuY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3YuY2FsbGJhY2s9bnVsbDt5PXYucHJpb3JpdHlMZXZlbDt2YXIgZT1kKHYuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT92LmNhbGxiYWNrPWU6dj09PWgocikmJmsocik7RyhiKX1lbHNlIGsocik7dj1oKHIpfWlmKG51bGwhPT12KXZhciB3PSEwO2Vsc2V7dmFyIG09aCh0KTtudWxsIT09bSYmSyhILG0uc3RhcnRUaW1lLWIpO3c9ITF9cmV0dXJuIHd9ZmluYWxseXt2PW51bGwseT1jLHo9ITF9fXZhciBOPSExLE89bnVsbCxMPS0xLFA9NSxRPS0xO1xuZnVuY3Rpb24gTSgpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpLVE8UD8hMTohMH1mdW5jdGlvbiBSKCl7aWYobnVsbCE9PU8pe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7UT1hO3ZhciBiPSEwO3RyeXtiPU8oITAsYSl9ZmluYWxseXtiP1MoKTooTj0hMSxPPW51bGwpfX1lbHNlIE49ITF9dmFyIFM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEYpUz1mdW5jdGlvbigpe0YoUil9O2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1SO1M9ZnVuY3Rpb24oKXtVLnBvc3RNZXNzYWdlKG51bGwpfX1lbHNlIFM9ZnVuY3Rpb24oKXtEKFIsMCl9O2Z1bmN0aW9uIEkoYSl7Tz1hO058fChOPSEwLFMoKSl9ZnVuY3Rpb24gSyhhLGIpe0w9RChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfVxuZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe0F8fHp8fChBPSEwLEkoSikpfTtcbmV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOlA9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4geX07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBoKHIpfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKHkpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPXl9dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXt5PWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtcbmV4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPXk7eT1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7eT1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOnUrKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLGYodCxhKSxudWxsPT09aChyKSYmYT09PWgodCkmJihCPyhFKEwpLEw9LTEpOkI9ITAsSyhILGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxmKHIsYSksQXx8enx8KEE9ITAsSShKKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9TTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj15O3JldHVybiBmdW5jdGlvbigpe3ZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXt5PWN9fX07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7463\n\n}')},7659:module=>{eval('{\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzY1OS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7659\n\n}')},7825:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzgyNS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NvaW50b3NzLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanM/ZTQ3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7825\n\n}')},8493:(__unused_webpack_module,exports,__webpack_require__)=>{eval('{/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar React = __webpack_require__(6540);\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = "function" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  "undefined" === typeof window ||\n  "undefined" === typeof window.document ||\n  "undefined" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQ5My5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5wcm9kdWN0aW9uLmpzP2I0ODkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS5wcm9kdWN0aW9uLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgcmV0dXJuICh4ID09PSB5ICYmICgwICE9PSB4IHx8IDEgLyB4ID09PSAxIC8geSkpIHx8ICh4ICE9PSB4ICYmIHkgIT09IHkpO1xufVxudmFyIG9iamVjdElzID0gXCJmdW5jdGlvblwiID09PSB0eXBlb2YgT2JqZWN0LmlzID8gT2JqZWN0LmlzIDogaXMsXG4gIHVzZVN0YXRlID0gUmVhY3QudXNlU3RhdGUsXG4gIHVzZUVmZmVjdCA9IFJlYWN0LnVzZUVmZmVjdCxcbiAgdXNlTGF5b3V0RWZmZWN0ID0gUmVhY3QudXNlTGF5b3V0RWZmZWN0LFxuICB1c2VEZWJ1Z1ZhbHVlID0gUmVhY3QudXNlRGVidWdWYWx1ZTtcbmZ1bmN0aW9uIHVzZVN5bmNFeHRlcm5hbFN0b3JlJDIoc3Vic2NyaWJlLCBnZXRTbmFwc2hvdCkge1xuICB2YXIgdmFsdWUgPSBnZXRTbmFwc2hvdCgpLFxuICAgIF91c2VTdGF0ZSA9IHVzZVN0YXRlKHsgaW5zdDogeyB2YWx1ZTogdmFsdWUsIGdldFNuYXBzaG90OiBnZXRTbmFwc2hvdCB9IH0pLFxuICAgIGluc3QgPSBfdXNlU3RhdGVbMF0uaW5zdCxcbiAgICBmb3JjZVVwZGF0ZSA9IF91c2VTdGF0ZVsxXTtcbiAgdXNlTGF5b3V0RWZmZWN0KFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIGluc3QudmFsdWUgPSB2YWx1ZTtcbiAgICAgIGluc3QuZ2V0U25hcHNob3QgPSBnZXRTbmFwc2hvdDtcbiAgICAgIGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkgJiYgZm9yY2VVcGRhdGUoeyBpbnN0OiBpbnN0IH0pO1xuICAgIH0sXG4gICAgW3N1YnNjcmliZSwgdmFsdWUsIGdldFNuYXBzaG90XVxuICApO1xuICB1c2VFZmZlY3QoXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSAmJiBmb3JjZVVwZGF0ZSh7IGluc3Q6IGluc3QgfSk7XG4gICAgICByZXR1cm4gc3Vic2NyaWJlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSAmJiBmb3JjZVVwZGF0ZSh7IGluc3Q6IGluc3QgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIFtzdWJzY3JpYmVdXG4gICk7XG4gIHVzZURlYnVnVmFsdWUodmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBjaGVja0lmU25hcHNob3RDaGFuZ2VkKGluc3QpIHtcbiAgdmFyIGxhdGVzdEdldFNuYXBzaG90ID0gaW5zdC5nZXRTbmFwc2hvdDtcbiAgaW5zdCA9IGluc3QudmFsdWU7XG4gIHRyeSB7XG4gICAgdmFyIG5leHRWYWx1ZSA9IGxhdGVzdEdldFNuYXBzaG90KCk7XG4gICAgcmV0dXJuICFvYmplY3RJcyhpbnN0LCBuZXh0VmFsdWUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiAhMDtcbiAgfVxufVxuZnVuY3Rpb24gdXNlU3luY0V4dGVybmFsU3RvcmUkMShzdWJzY3JpYmUsIGdldFNuYXBzaG90KSB7XG4gIHJldHVybiBnZXRTbmFwc2hvdCgpO1xufVxudmFyIHNoaW0gPVxuICBcInVuZGVmaW5lZFwiID09PSB0eXBlb2Ygd2luZG93IHx8XG4gIFwidW5kZWZpbmVkXCIgPT09IHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgfHxcbiAgXCJ1bmRlZmluZWRcIiA9PT0gdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50XG4gICAgPyB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQxXG4gICAgOiB1c2VTeW5jRXh0ZXJuYWxTdG9yZSQyO1xuZXhwb3J0cy51c2VTeW5jRXh0ZXJuYWxTdG9yZSA9XG4gIHZvaWQgMCAhPT0gUmVhY3QudXNlU3luY0V4dGVybmFsU3RvcmUgPyBSZWFjdC51c2VTeW5jRXh0ZXJuYWxTdG9yZSA6IHNoaW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8493\n\n}')},8666:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("{\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\nvar react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(5338);\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(961);\nvar react_dom_namespaceObject = /*#__PURE__*/__webpack_require__.t(react_dom, 2);\n;// ./node_modules/@remix-run/router/dist/router.js\n/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction router_createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : router_createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction router_createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : router_createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction router_createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : router_createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction router_createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : router_createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = router_stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = router_joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = router_matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = router_matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: router_joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(router_joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = router_joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction router_matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction router_stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction router_resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst router_joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst router_IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst router_IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction router_createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, router_IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, router_IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, router_IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        router_stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || router_IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || router_IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || router_IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", router_createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", router_createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = router_resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), router_stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : router_joinPaths([basename, path.pathname]);\n  }\n  return router_createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: router_createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = router_stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return router_createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\n\n//# sourceMappingURL=router.js.map\n\n;// ./node_modules/react-router/dist/index.js\n/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\n\nfunction dist_extends() {\n  dist_extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return dist_extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/react.createContext(null);\nif (false) // removed by dead control flow\n{}\nconst DataRouterStateContext = /*#__PURE__*/react.createContext(null);\nif (false) // removed by dead control flow\n{}\nconst AwaitContext = /*#__PURE__*/react.createContext(null);\nif (false) // removed by dead control flow\n{}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/react.createContext(null);\nif (false) // removed by dead control flow\n{}\nconst LocationContext = /*#__PURE__*/react.createContext(null);\nif (false) // removed by dead control flow\n{}\nconst RouteContext = /*#__PURE__*/react.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (false) // removed by dead control flow\n{}\nconst RouteErrorContext = /*#__PURE__*/react.createContext(null);\nif (false) // removed by dead control flow\n{}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = react.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = dist_useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : router_joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return react.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction dist_useLocation() {\n  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;\n  return react.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = dist_useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = (/* unused pure expression or super */ null && (\"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"));\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = react.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction dist_useNavigate() {\n  let {\n    isDataRoute\n  } = react.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;\n  let dataRouterContext = react.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = react.useContext(NavigationContext);\n  let {\n    matches\n  } = react.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = dist_useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = react.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = react.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n     false ? 0 : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = router_resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : router_joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/(/* unused pure expression or super */ null && (React.createContext(null)));\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction dist_useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = react.useContext(NavigationContext);\n  let {\n    matches\n  } = react.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = dist_useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return react.useMemo(() => router_resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ?  false ? 0 : invariant(false) : void 0;\n  let {\n    navigator\n  } = react.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = react.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (false) // removed by dead control flow\n{}\n  let locationFromContext = dist_useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? 0 : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (false) // removed by dead control flow\n{}\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: router_joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : router_joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/react.createElement(LocationContext.Provider, {\n      value: {\n        location: dist_extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (false) // removed by dead control flow\n{}\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/react.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/react.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends react.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/react.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/react.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = react.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/react.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ?  false ? 0 : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/react.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/react.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/react.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = react.useContext(DataRouterContext);\n  !ctx ?  false ? 0 : invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = react.useContext(DataRouterStateContext);\n  !state ?  false ? 0 : invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = react.useContext(RouteContext);\n  !route ?  false ? 0 : invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ?  false ? 0 : invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction dist_useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction dist_useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = react.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction dist_useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: dist_extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: dist_extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = react.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = react.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n     false ? 0 : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, dist_extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n     false ? 0 : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (false) // removed by dead control flow\n{}\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = react_namespaceObject[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n     false ? 0 : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(dist_Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(dist_Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n   false ? 0 : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = dist_useLocation();\n  let navigate = dist_useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n   false ? 0 : invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction dist_Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ?  false ? 0 : invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = react.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: dist_extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = react.useMemo(() => {\n    let trailingPathname = router_stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n   false ? 0 : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/react.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/react.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends react.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/react.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/react.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  react.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/react.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === react.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ?  false ? 0 : invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ?  false ? 0 : invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (false) // removed by dead control flow\n{}\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (false) // removed by dead control flow\n{}\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (false) // removed by dead control flow\n{}\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: dist_extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\n\n//# sourceMappingURL=index.js.map\n\n;// ./node_modules/react-router-dom/dist/index.js\n/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n\n\n\n\n\n\nfunction react_router_dom_dist_extends() {\n  react_router_dom_dist_extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return react_router_dom_dist_extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n     false ? 0 : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = (/* unused pure expression or super */ null && ([\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"])),\n  _excluded3 = (/* unused pure expression or super */ null && ([\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"]));\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: react_router_dom_dist_extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: react_router_dom_dist_extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = react_router_dom_dist_extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/react.createContext({\n  isTransitioning: false\n});\nif (false) // removed by dead control flow\n{}\nconst FetchersContext = /*#__PURE__*/react.createContext(new Map());\nif (false) // removed by dead control flow\n{}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst dist_START_TRANSITION = \"startTransition\";\nconst dist_startTransitionImpl = react_namespaceObject[dist_START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = react_dom_namespaceObject[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = react_namespaceObject[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (dist_startTransitionImpl) {\n    dist_startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction dist_RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n     false ? 0 : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/(/* unused pure expression or super */ null && (React.memo(dist_DataRoutes)));\nfunction dist_DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = react.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = router_createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = react.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = react.useCallback(newState => {\n    v7_startTransition && dist_startTransitionImpl ? dist_startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  react.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  react.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/react.createElement(dist_Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && dist_startTransitionImpl ? dist_startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && dist_startTransitionImpl ? dist_startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (false) // removed by dead control flow\n{}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst dist_ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/react.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = react.useContext(NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && dist_ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = router_stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n         false ? 0 : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    react.createElement(\"a\", react_router_dom_dist_extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (false) // removed by dead control flow\n{}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, react_router_dom_dist_extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n})));\nif (false) // removed by dead control flow\n{}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", react_router_dom_dist_extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n})));\nif (false) // removed by dead control flow\n{}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (false) // removed by dead control flow\n{}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar dist_DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(dist_DataRouterHook || (dist_DataRouterHook = {}));\nvar dist_DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(dist_DataRouterStateHook || (dist_DataRouterStateHook = {}));\n// Internal hooks\nfunction dist_getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction dist_useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction dist_useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = dist_useNavigate();\n  let location = dist_useLocation();\n  let path = dist_useResolvedPath(to, {\n    relative\n  });\n  return react.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : router_createPath(location) === router_createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n   false ? 0 : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = dist_useDataRouterContext(dist_DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = react_router_dom_dist_extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = dist_useDataRouterContext(dist_DataRouterHook.UseFetcher);\n  let state = dist_useDataRouterState(dist_DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  !route ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, react_router_dom_dist_extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, react_router_dom_dist_extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (false) // removed by dead control flow\n{}\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => react_router_dom_dist_extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = dist_useDataRouterState(dist_DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return react_router_dom_dist_extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = dist_useDataRouterContext(dist_DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = dist_useDataRouterState(dist_DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n       false ? 0 : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      react_router_dom_dist_extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ?  false ? 0 : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = dist_useDataRouterContext(dist_DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\n\n//# sourceMappingURL=index.js.map\n\n;// ./node_modules/zustand/esm/vanilla.mjs\nconst createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if (( false ? 0 : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\n\n\n// EXTERNAL MODULE: ./node_modules/use-sync-external-store/shim/with-selector.js\nvar with_selector = __webpack_require__(9242);\n;// ./node_modules/zustand/esm/index.mjs\n\n\n\n\n\nconst { useDebugValue } = react;\nconst { useSyncExternalStoreWithSelector } = with_selector;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if (( false ? 0 : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar esm_react = (createState) => {\n  if (( false ? 0 : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\n\n\n;// ./src/services/api.js\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// API Service Layer for Cointoss Backend Integration\n// This file handles all communication with the backend API\n\n// Use proxy in development, direct URL in production (guarded for browser runtime)\nconst getNodeEnv = () => {\n  try {\n    return typeof process !== 'undefined' && process.env && \"production\" ? \"production\" : 'production';\n  } catch (_) {\n    return 'production';\n  }\n};\nconst NODE_ENV_SAFE = getNodeEnv();\n\n// More robust environment detection\nconst isDevelopment = () => {\n  // Check multiple conditions for development\n  if (typeof window !== 'undefined') {\n    return window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' || window.location.hostname.includes('localhost');\n  }\n  return NODE_ENV_SAFE === 'development';\n};\n\n// Get API base URL with environment variable support\nconst getApiBaseUrl = () => {\n  // Check for environment variable first\n  try {\n    if (typeof process !== 'undefined' && process.env && process.env.REACT_APP_API_BASE_URL) {\n      return process.env.REACT_APP_API_BASE_URL;\n    }\n  } catch (_) {\n    // Ignore if process is not available\n  }\n\n  // Fallback to default logic\n  return isDevelopment() ? '' // Use relative URLs in development (webpack proxy will handle it)\n  : 'https://cointoss-app-latest.onrender.com';\n};\nconst API_BASE_URL = getApiBaseUrl();\n\n// Debug logging for API URL\nconsole.log('🔧 API Configuration Debug:', {\n  NODE_ENV: NODE_ENV_SAFE,\n  isDevelopment: isDevelopment(),\n  API_BASE_URL: API_BASE_URL,\n  hostname: typeof window !== 'undefined' ? window.location.hostname : 'server-side',\n  origin: typeof window !== 'undefined' ? window.location.origin : 'server-side',\n  envVar: typeof process !== 'undefined' && process.env ? process.env.REACT_APP_API_BASE_URL : 'not available'\n});\n\n// Check if we're in production and should use mock data due to CORS issues\nconst shouldUseMockDataInProduction = () => {\n  // Only use demo mode if explicitly enabled via environment variable or localStorage flag\n  let envDemo = false;\n  try {\n    envDemo = typeof process !== 'undefined' && process.env && process.env.REACT_APP_DEMO_MODE === 'true';\n  } catch (_) {\n    envDemo = false;\n  }\n  return envDemo || localStorage.getItem('forceDemoMode') === 'true';\n};\n\n// Helper function to get auth token from localStorage\nconst getAuthToken = () => {\n  return localStorage.getItem('accessToken');\n};\n\n// Helper function to get user ID from localStorage\nconst getUserId = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user).id : null;\n};\n\n// Mock data for development fallback\nconst mockData = {\n  currentPool: {\n    id: 1,\n    assetPair: 'BTC/USDT',\n    status: 'OPEN',\n    totalUpPool: 1250.50,\n    totalDownPool: 890.25,\n    startPrice: 110699.58,\n    currentPrice: 110750.32,\n    lockTime: new Date(Date.now() + 5 * 60 * 1000).toISOString(),\n    // 5 minutes from now\n    endPrice: null\n  },\n  user: {\n    id: 1,\n    firstName: '',\n    lastName: '',\n    email: '',\n    balance: 100\n  }\n};\n\n// Check if we should use mock data (development or production CORS issues)\nconst shouldUseMockData = () => {\n  return NODE_ENV_SAFE === 'development' && (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') || shouldUseMockDataInProduction();\n};\n\n// Generic API request function with fallback to mock data\nconst apiRequest = async function (endpoint) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const url = \"\".concat(API_BASE_URL).concat(endpoint);\n  const token = getAuthToken();\n\n  // Enhanced debugging for API requests\n  console.log('🌐 API Request Debug:', {\n    endpoint,\n    fullUrl: url,\n    method: options.method || 'GET',\n    hasToken: !!token,\n    API_BASE_URL,\n    isDevelopment: isDevelopment()\n  });\n  const defaultHeaders = {\n    'Content-Type': 'application/json'\n  };\n\n  // Add authorization header if token exists\n  if (token) {\n    defaultHeaders.Authorization = \"Bearer \".concat(token);\n  }\n  const config = _objectSpread(_objectSpread({}, options), {}, {\n    headers: _objectSpread(_objectSpread({}, defaultHeaders), options.headers),\n    mode: 'cors'\n  });\n  try {\n    const response = await fetch(url, config);\n\n    // Handle different response types\n    if (response.status === 204) {\n      return {\n        success: true\n      }; // No content response\n    }\n    const contentType = response.headers.get('content-type') || '';\n    let data;\n    if (contentType.includes('application/json')) {\n      data = await response.json();\n    } else {\n      const text = await response.text();\n      try {\n        data = JSON.parse(text);\n      } catch (_) {\n        if (!response.ok) {\n          throw new Error(text || \"HTTP error! status: \".concat(response.status));\n        }\n        // If OK but not JSON, return raw text\n        return text;\n      }\n    }\n    if (!response.ok) {\n      throw new Error(data && (data.error || data.message) || \"HTTP error! status: \".concat(response.status));\n    }\n    return data;\n  } catch (error) {\n    console.error('API Request Error:', error);\n\n    // Check if this is a CORS error specifically\n    const isCorsError = error.message.includes('CORS') || error.message.includes('fetch') || error.message.includes('blocked');\n\n    // Fall back to mock data for development or explicit demo mode\n    if (shouldUseMockData()) {\n      console.warn('Using mock data due to API failure or CORS issues');\n\n      // Set demo mode flag only for actual CORS issues\n      if (isCorsError && NODE_ENV_SAFE === 'production') {\n        localStorage.setItem('isDemoMode', 'true');\n        console.warn('CORS error detected - switching to demo mode');\n      }\n      return getMockDataForEndpoint(endpoint, options);\n    }\n    throw error;\n  }\n};\n\n// Test backend connection\nconst testBackendConnection = async () => {\n  const testUrl = \"\".concat(API_BASE_URL, \"/api/bets/current-pool\");\n  console.log('🔍 Testing Backend Connection:', {\n    testUrl,\n    API_BASE_URL,\n    isDevelopment: isDevelopment(),\n    hostname: typeof window !== 'undefined' ? window.location.hostname : 'server-side'\n  });\n  try {\n    const response = await fetch(testUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n    console.log('📡 Backend Response:', {\n      status: response.status,\n      statusText: response.statusText,\n      ok: response.ok,\n      url: response.url\n    });\n    if (response.ok) {\n      // Backend is working, clear demo mode\n      localStorage.removeItem('isDemoMode');\n      localStorage.removeItem('forceDemoMode');\n      console.log('✅ Backend connection successful - demo mode cleared');\n      return true;\n    } else {\n      console.warn('⚠️ Backend responded but not OK:', response.status, response.statusText);\n    }\n  } catch (error) {\n    console.error('❌ Backend connection failed:', {\n      message: error.message,\n      name: error.name,\n      stack: error.stack\n    });\n  }\n  return false;\n};\n\n// Get your Vercel URL for backend CORS configuration\nconst getVercelUrl = () => {\n  return 'https://coin-toss-tw57.vercel.app';\n};\n\n// Get mock data based on endpoint\nconst getMockDataForEndpoint = (endpoint, options) => {\n  if (endpoint === '/api/bets/current-pool') {\n    return mockData.currentPool;\n  }\n  if (endpoint === '/users' && options.method === 'POST') {\n    // Mock user registration\n    const userData = JSON.parse(options.body);\n    return {\n      id: Date.now(),\n      firstName: userData.firstName,\n      lastName: userData.lastName,\n      email: userData.email,\n      balance: 100\n    };\n  }\n  if (endpoint === '/auth/login' && options.method === 'POST') {\n    // Mock login\n    return {\n      token: 'mock-jwt-token-' + Date.now(),\n      user: mockData.user\n    };\n  }\n  if (endpoint === '/auth/me') {\n    return mockData.user;\n  }\n\n  // Default mock response\n  return {\n    success: true,\n    message: 'Mock response'\n  };\n};\n\n// Authentication API\nconst authAPI = {\n  // Login user\n  login: async (email, password) => {\n    const response = await apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n\n    // Store the access token\n    if (response.token) {\n      localStorage.setItem('accessToken', response.token);\n    }\n    return response;\n  },\n  // Refresh access token\n  refresh: async () => {\n    const response = await apiRequest('/auth/refresh', {\n      method: 'POST'\n    });\n\n    // Update the stored access token\n    if (response.token) {\n      localStorage.setItem('accessToken', response.token);\n    }\n    return response;\n  },\n  // Get current user profile\n  getProfile: async () => {\n    return await apiRequest('/auth/me');\n  },\n  // Logout (clear local storage)\n  logout: () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('user');\n  }\n};\n\n// User Management API\nconst userAPI = {\n  // Register new user\n  register: async userData => {\n    const response = await apiRequest('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n\n    // Store user data if registration successful\n    if (response.id) {\n      localStorage.setItem('user', JSON.stringify(response));\n    }\n    return response;\n  },\n  // Change password\n  changePassword: async (userId, oldPassword, newPassword) => {\n    return await apiRequest(\"/users/\".concat(userId, \"/change-password\"), {\n      method: 'POST',\n      body: JSON.stringify({\n        oldPassword,\n        newPassword\n      })\n    });\n  },\n  // Update username (first and last name)\n  updateUsername: async (userId, firstName, lastName) => {\n    return await apiRequest(\"/users/\".concat(userId, \"/changeUsername\"), {\n      method: 'PUT',\n      body: JSON.stringify({\n        firstName,\n        lastName\n      })\n    });\n  },\n  // Update email\n  updateEmail: async (userId, email) => {\n    return await apiRequest(\"/users/\".concat(userId, \"/changeEmail\"), {\n      method: 'PUT',\n      body: JSON.stringify({\n        email\n      })\n    });\n  }\n};\n\n// Betting API\nconst bettingAPI = {\n  // Get current betting pool\n  getCurrentPool: async () => {\n    return await apiRequest('/api/bets/current-pool');\n  },\n  // Place a bet\n  placeBet: async (poolId, amount, direction) => {\n    return await apiRequest('/api/bets', {\n      method: 'POST',\n      body: JSON.stringify({\n        poolId,\n        amount,\n        direction\n      })\n    });\n  }\n};\n\n// Admin API (for future use)\nconst adminAPI = {\n  // Get all users\n  getAllUsers: async () => {\n    return await apiRequest('/admin');\n  },\n  // Get specific user\n  getUser: async userId => {\n    return await apiRequest(\"/admin/\".concat(userId));\n  }\n};\n\n// WebSocket Service for real-time updates\nclass WebSocketService {\n  constructor() {\n    this.client = null;\n    this.isConnected = false;\n    this.subscriptions = new Map();\n    this.connectionAttempts = 0;\n    this.maxConnectionAttempts = 3;\n  }\n\n  // Initialize WebSocket connection with CORS handling\n  connect() {\n    return new Promise((resolve, reject) => {\n      try {\n        // Import SockJS and STOMP dynamically\n        __webpack_require__.e(/* import() */ 350).then(__webpack_require__.t.bind(__webpack_require__, 9350, 23)).then(SockJS => {\n          __webpack_require__.e(/* import() */ 676).then(__webpack_require__.bind(__webpack_require__, 7676)).then(_ref => {\n            let {\n              Client\n            } = _ref;\n            // Create SockJS connection with CORS configuration\n            const wsUrl =  false ? 0 // Use relative URL in development (webpack proxy will handle it)\n            : \"\".concat(API_BASE_URL, \"/ws\");\n            const sockJS = new SockJS.default(wsUrl, null, {\n              // Add CORS headers for the connection\n              transports: ['websocket', 'xhr-streaming', 'xhr-polling'],\n              // Add authentication token if available\n              sessionId: () => {\n                const token = getAuthToken();\n                return token ? \"Bearer \".concat(token) : '';\n              }\n            });\n            this.client = new Client({\n              webSocketFactory: () => sockJS,\n              debug: str => {\n                console.log('STOMP Debug:', str);\n              },\n              reconnectDelay: 5000,\n              // Add connection timeout\n              connectionTimeout: 10000,\n              // Add heartbeat configuration\n              heartbeatIncoming: 4000,\n              heartbeatOutgoing: 4000\n            });\n            this.client.onConnect = frame => {\n              console.log('WebSocket Connected:', frame);\n              this.isConnected = true;\n              this.connectionAttempts = 0;\n              resolve(frame);\n            };\n            this.client.onStompError = frame => {\n              console.error('STOMP Error:', frame);\n              this.isConnected = false;\n              this.connectionAttempts++;\n\n              // If we've exceeded max attempts, reject\n              if (this.connectionAttempts >= this.maxConnectionAttempts) {\n                console.error('Max WebSocket connection attempts reached');\n                reject(new Error('WebSocket connection failed after multiple attempts'));\n              } else {\n                // Try to reconnect after a delay\n                setTimeout(() => {\n                  console.log(\"Attempting WebSocket reconnection (\".concat(this.connectionAttempts, \"/\").concat(this.maxConnectionAttempts, \")\"));\n                  this.connect().catch(reject);\n                }, 5000);\n              }\n            };\n            this.client.onWebSocketClose = event => {\n              console.log('WebSocket Closed:', event);\n              this.isConnected = false;\n            };\n            this.client.onWebSocketError = error => {\n              console.error('WebSocket Error:', error);\n              this.isConnected = false;\n              this.connectionAttempts++;\n\n              // Handle CORS errors specifically\n              if (error.message && error.message.includes('CORS')) {\n                console.warn('CORS error detected. WebSocket connection may not work in development.');\n                // Don't reject immediately for CORS errors, let it try other transports\n              }\n            };\n            this.client.activate();\n          });\n        });\n      } catch (error) {\n        console.error('WebSocket Connection Error:', error);\n        reject(error);\n      }\n    });\n  }\n\n  // Subscribe to pool updates\n  subscribeToPool(poolId, callback) {\n    if (!this.isConnected || !this.client) {\n      console.error('WebSocket not connected');\n      return;\n    }\n    const topic = \"/topic/pool/\".concat(poolId);\n    const subscription = this.client.subscribe(topic, message => {\n      try {\n        const update = JSON.parse(message.body);\n        callback(update);\n      } catch (error) {\n        console.error('Error parsing pool update:', error);\n      }\n    });\n    this.subscriptions.set(topic, subscription);\n    console.log(\"Subscribed to pool \".concat(poolId));\n  }\n\n  // Check if WebSocket is available and working\n  isWebSocketAvailable() {\n    return this.isConnected && this.client;\n  }\n\n  // Get connection status\n  getConnectionStatus() {\n    return {\n      isConnected: this.isConnected,\n      connectionAttempts: this.connectionAttempts,\n      maxAttempts: this.maxConnectionAttempts\n    };\n  }\n\n  // Unsubscribe from pool updates\n  unsubscribeFromPool(poolId) {\n    const topic = \"/topic/pool/\".concat(poolId);\n    const subscription = this.subscriptions.get(topic);\n    if (subscription) {\n      subscription.unsubscribe();\n      this.subscriptions.delete(topic);\n      console.log(\"Unsubscribed from pool \".concat(poolId));\n    }\n  }\n\n  // Disconnect WebSocket\n  disconnect() {\n    if (this.client) {\n      this.client.deactivate();\n      this.isConnected = false;\n      this.subscriptions.clear();\n      console.log('WebSocket disconnected');\n    }\n  }\n}\n\n// Create a singleton instance of WebSocket service\nconst webSocketService = new WebSocketService();\n\n// Error handling utility\nconst handleAPIError = error => {\n  console.error('API Error:', error);\n\n  // Handle specific error cases\n  if (error.message.includes('401')) {\n    // Token expired, try to refresh\n    return authAPI.refresh().catch(() => {\n      // Refresh failed, redirect to login\n      authAPI.logout();\n      window.location.href = '/login';\n    });\n  }\n\n  // For other errors, just throw them\n  throw error;\n};\n/* harmony default export */ const api = ({\n  authAPI,\n  userAPI,\n  bettingAPI,\n  adminAPI,\n  webSocketService,\n  handleAPIError\n});\n;// ./src/store/useStore.js\nfunction useStore_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction useStore_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? useStore_ownKeys(Object(t), !0).forEach(function (r) { useStore_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : useStore_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction useStore_defineProperty(e, r, t) { return (r = useStore_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction useStore_toPropertyKey(t) { var i = useStore_toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction useStore_toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n// Helpers to safely access localStorage (SSR/initial load guard)\nconst safeGet = (key, fallback) => {\n  try {\n    if (typeof window === 'undefined') return fallback;\n    const v = window.localStorage.getItem(key);\n    return v !== null ? v : fallback;\n  } catch (_unused) {\n    return fallback;\n  }\n};\nconst persist = (key, value) => {\n  try {\n    if (typeof window !== 'undefined') window.localStorage.setItem(key, value);\n  } catch (_) {}\n};\n\n// Helper function to calculate time remaining from pool data\nconst calculateTimeRemaining = poolData => {\n  if (!poolData.lockTime) return 0;\n  const now = new Date();\n  const lockTime = new Date(poolData.lockTime);\n  const timeDiff = Math.max(0, Math.floor((lockTime - now) / 1000));\n  return timeDiff;\n};\nconst useStore_useStore = create((set, get) => ({\n  // User state\n  user: null,\n  isAuthenticated: false,\n  // Wallet state\n  balance: 100,\n  // Mock $100 USDT balance\n  transactions: [],\n  // Betting state\n  currentBets: [],\n  activeCycle: {\n    id: 1,\n    market: 'BTC/USDT',\n    status: 'OPEN',\n    // OPEN, LOCKED, SETTLED\n    timeRemaining: 600,\n    // 10 minutes in seconds (5 min open + 5 min locked)\n    totalCycleTime: 600,\n    // 10 minutes total\n    openTime: 300,\n    // First 5 minutes for betting\n    lockedTime: 300,\n    // Last 5 minutes for settlement\n    upPool: 0,\n    downPool: 0,\n    upBets: [],\n    // Array of individual bets\n    downBets: [],\n    // Array of individual bets\n    currentPrice: 110699.58,\n    startPrice: 110699.58,\n    // Price when cycle started\n    endPrice: null,\n    result: null,\n    // 'UP' or 'DOWN'\n    cyclePhase: 'OPEN' // OPEN, LOCKED, SETTLING\n  },\n  selectedCurrencyPair: 'BTC/USDT',\n  // UI state\n  currentPage: 'home',\n  showModal: false,\n  modalType: null,\n  modalData: null,\n  theme: 'light',\n  // 'light' or 'dark'\n  chartInterval: safeGet('chartInterval', '1m'),\n  // 1m,5m,15m,1h default\n  chartSymbol: safeGet('chartSymbol', 'BTCUSDT'),\n  // Trading symbol for charts (no slash, matches exchange API format)\n  pollingInterval: null,\n  // For fallback polling when WebSocket fails\n  isDemoMode: false,\n  // Shows when running in demo mode due to CORS issues\n\n  // Actions\n  setUser: user => set({\n    user,\n    isAuthenticated: !!user\n  }),\n  // Authentication actions\n  login: async (email, password) => {\n    try {\n      const response = await authAPI.login(email, password);\n\n      // Get user profile after successful login\n      const userProfile = await authAPI.getProfile();\n\n      // Store user data\n      const userData = {\n        id: userProfile.id,\n        firstName: userProfile.firstName,\n        lastName: userProfile.lastName,\n        email: userProfile.email,\n        balance: 100,\n        // Default balance, will be updated from backend\n        level: 'Beginner',\n        signUpDate: new Date().toISOString(),\n        totalBets: 0,\n        winRate: 0,\n        totalWinnings: 0\n      };\n      localStorage.setItem('user', JSON.stringify(userData));\n      set({\n        user: userData,\n        isAuthenticated: true\n      });\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await userAPI.register(userData);\n\n      // Store user data\n      const user = {\n        id: response.id,\n        firstName: response.firstName,\n        lastName: response.lastName,\n        email: response.email,\n        balance: 100,\n        // Default balance from backend\n        level: 'Beginner',\n        signUpDate: new Date().toISOString(),\n        totalBets: 0,\n        winRate: 0,\n        totalWinnings: 0\n      };\n      localStorage.setItem('user', JSON.stringify(user));\n      set({\n        user,\n        isAuthenticated: true\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n  logout: () => {\n    authAPI.logout();\n    set({\n      user: null,\n      isAuthenticated: false\n    });\n  },\n  // Initialize user from localStorage on app start\n  initializeAuth: () => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      const token = localStorage.getItem('accessToken');\n      if (storedUser && token) {\n        const user = JSON.parse(storedUser);\n\n        // Ensure user has required properties with defaults\n        const userWithDefaults = useStore_objectSpread(useStore_objectSpread({}, user), {}, {\n          balance: user.balance || 100,\n          // Default balance if missing\n          firstName: user.firstName || '',\n          lastName: user.lastName || '',\n          email: user.email || '',\n          level: user.level || 'Beginner',\n          signUpDate: user.signUpDate || new Date().toISOString(),\n          totalBets: user.totalBets || 0,\n          winRate: user.winRate || 0,\n          totalWinnings: user.totalWinnings || 0\n        });\n        set({\n          user: userWithDefaults,\n          isAuthenticated: true\n        });\n\n        // Verify token is still valid by getting profile\n        authAPI.getProfile().catch(() => {\n          // Token invalid, logout\n          authAPI.logout();\n          set({\n            user: null,\n            isAuthenticated: false\n          });\n        });\n      }\n    } catch (error) {\n      console.error('Auth initialization error:', error);\n      authAPI.logout();\n      set({\n        user: null,\n        isAuthenticated: false\n      });\n    }\n  },\n  toggleTheme: () => set(state => ({\n    theme: state.theme === 'light' ? 'dark' : 'light'\n  })),\n  setChartInterval: interval => {\n    persist('chartInterval', interval);\n    set({\n      chartInterval: interval\n    });\n  },\n  setChartSymbol: symbol => {\n    persist('chartSymbol', symbol);\n    set({\n      chartSymbol: symbol\n    });\n  },\n  updateBalance: amount => set(state => ({\n    balance: Math.max(0, state.balance + amount)\n  })),\n  addTransaction: transaction => set(state => ({\n    transactions: [transaction, ...state.transactions]\n  })),\n  placeBet: async bet => {\n    try {\n      // Get current pool from backend\n      const currentPool = await bettingAPI.getCurrentPool();\n\n      // Place bet with backend\n      const response = await bettingAPI.placeBet(currentPool.id, bet.amount, bet.direction);\n\n      // Update local state with backend response\n      const newBet = useStore_objectSpread(useStore_objectSpread({\n        id: response.id || Date.now()\n      }, bet), {}, {\n        timestamp: new Date().toISOString(),\n        status: 'PENDING',\n        userPercentage: 0 // Will be calculated\n      });\n      const newBalance = state.balance - bet.amount;\n      const newTransaction = {\n        id: Date.now(),\n        type: 'BET',\n        amount: -bet.amount,\n        description: \"Bet \".concat(bet.amount, \" USDT on \").concat(bet.direction),\n        timestamp: new Date().toISOString()\n      };\n\n      // Update pools with backend data\n      const updatedUpBets = bet.direction === 'UP' ? [...state.activeCycle.upBets, newBet] : state.activeCycle.upBets;\n      const updatedDownBets = bet.direction === 'DOWN' ? [...state.activeCycle.downBets, newBet] : state.activeCycle.downBets;\n\n      // Use backend pool totals\n      const newUpPool = currentPool.totalUpPool || 0;\n      const newDownPool = currentPool.totalDownPool || 0;\n\n      // Calculate user's percentage in the pool they bet on\n      const userPool = bet.direction === 'UP' ? newUpPool : newDownPool;\n      const userPercentage = userPool > 0 ? bet.amount / userPool * 100 : 0;\n      set(state => ({\n        currentBets: [...state.currentBets, newBet],\n        balance: newBalance,\n        transactions: [newTransaction, ...state.transactions],\n        activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), {}, {\n          upPool: newUpPool,\n          downPool: newDownPool,\n          upBets: updatedUpBets,\n          downBets: updatedDownBets\n        })\n      }));\n      return {\n        success: true,\n        bet: newBet\n      };\n    } catch (error) {\n      console.error('Place bet error:', error);\n      throw error;\n    }\n  },\n  settleBets: result => set(state => {\n    const winningPool = result === 'UP' ? state.activeCycle.upPool : state.activeCycle.downPool;\n    const losingPool = result === 'UP' ? state.activeCycle.downPool : state.activeCycle.upPool;\n    const totalPool = winningPool + losingPool;\n\n    // Apply 5% house commission as per PRD\n    const houseCommission = totalPool * 0.05;\n    const winningsPool = totalPool - houseCommission;\n    const settledBets = state.currentBets.map(bet => {\n      if (bet.direction === result) {\n        // Calculate user's percentage of the winning pool\n        const userPool = result === 'UP' ? state.activeCycle.upPool : state.activeCycle.downPool;\n        const userPercentage = userPool > 0 ? bet.amount / userPool : 0;\n        const winnings = winningsPool * userPercentage;\n        return useStore_objectSpread(useStore_objectSpread({}, bet), {}, {\n          status: 'WON',\n          winnings: winnings,\n          userPercentage: userPercentage\n        });\n      } else {\n        return useStore_objectSpread(useStore_objectSpread({}, bet), {}, {\n          status: 'LOST',\n          winnings: 0,\n          userPercentage: 0\n        });\n      }\n    });\n    const totalWinnings = settledBets.filter(bet => bet.status === 'WON').reduce((sum, bet) => sum + bet.winnings, 0);\n    const newTransactions = settledBets.filter(bet => bet.status === 'WON').map(bet => ({\n      id: Date.now() + Math.random(),\n      type: 'WIN',\n      amount: bet.winnings,\n      description: \"Won \".concat(bet.winnings.toFixed(2), \" USDT (\").concat(bet.userPercentage.toFixed(2), \"% of pool)\"),\n      timestamp: new Date().toISOString()\n    }));\n    return {\n      currentBets: [],\n      balance: state.balance + totalWinnings,\n      transactions: [...newTransactions, ...state.transactions],\n      activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), {}, {\n        status: 'SETTLED',\n        result: result,\n        upBets: [],\n        downBets: [],\n        upPool: 0,\n        downPool: 0\n      })\n    };\n  }),\n  // Calculate payout multipliers\n  getPayoutMultipliers: () => {\n    const state = get();\n    const {\n      upPool,\n      downPool\n    } = state.activeCycle;\n    const totalPool = upPool + downPool;\n    if (totalPool === 0) {\n      return {\n        upMultiplier: 1.0,\n        downMultiplier: 1.0\n      };\n    }\n\n    // Apply 5% house commission\n    const winningsPool = totalPool * 0.95;\n\n    // Calculate multipliers (how much you get back for each $1 bet)\n    const upMultiplier = upPool > 0 ? winningsPool / upPool : 1.0;\n    const downMultiplier = downPool > 0 ? winningsPool / downPool : 1.0;\n    return {\n      upMultiplier: Math.max(upMultiplier, 0.1),\n      // Minimum 0.1x multiplier\n      downMultiplier: Math.max(downMultiplier, 0.1)\n    };\n  },\n  updateActiveCycle: updates => set(state => ({\n    activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), updates)\n  })),\n  // Load current pool from backend\n  loadCurrentPool: async () => {\n    try {\n      const poolData = await bettingAPI.getCurrentPool();\n\n      // Convert backend pool data to frontend format\n      const activeCycle = {\n        id: poolData.id,\n        market: poolData.assetPair || 'BTC/USDT',\n        status: poolData.status,\n        timeRemaining: calculateTimeRemaining(poolData),\n        totalCycleTime: 600,\n        // 10 minutes total\n        openTime: 300,\n        // First 5 minutes for betting\n        lockedTime: 300,\n        // Last 5 minutes for settlement\n        upPool: poolData.totalUpPool || 0,\n        downPool: poolData.totalDownPool || 0,\n        upBets: [],\n        // Individual bets not provided by backend\n        downBets: [],\n        // Individual bets not provided by backend\n        currentPrice: poolData.startPrice || 110699.58,\n        startPrice: poolData.startPrice || 110699.58,\n        endPrice: poolData.endPrice,\n        result: null,\n        // Will be set when pool closes\n        cyclePhase: poolData.status === 'OPEN' ? 'OPEN' : 'LOCKED'\n      };\n      set({\n        activeCycle\n      });\n      return activeCycle;\n    } catch (error) {\n      console.error('Load current pool error:', error);\n      throw error;\n    }\n  },\n  // Initialize WebSocket connection for real-time updates\n  initializeWebSocket: async () => {\n    try {\n      console.log('Attempting to initialize WebSocket connection...');\n      await webSocketService.connect();\n\n      // Subscribe to pool updates\n      const currentPool = await bettingAPI.getCurrentPool();\n      webSocketService.subscribeToPool(currentPool.id, update => {\n        set(state => ({\n          activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), {}, {\n            upPool: update.totalUpPool,\n            downPool: update.totalDownPool\n          })\n        }));\n      });\n      console.log('WebSocket connection established successfully');\n    } catch (error) {\n      console.error('WebSocket initialization error:', error);\n      console.log('Falling back to polling for real-time updates...');\n\n      // Fallback to polling when WebSocket fails\n      get().startPollingForUpdates();\n    }\n  },\n  // Fallback polling mechanism when WebSocket fails\n  startPollingForUpdates: () => {\n    console.log('Starting polling fallback for real-time updates...');\n\n    // Poll every 5 seconds for pool updates\n    const pollInterval = setInterval(async () => {\n      try {\n        const poolData = await bettingAPI.getCurrentPool();\n        set(state => ({\n          activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), {}, {\n            upPool: poolData.totalUpPool || 0,\n            downPool: poolData.totalDownPool || 0,\n            currentPrice: poolData.currentPrice || state.activeCycle.currentPrice\n          })\n        }));\n      } catch (error) {\n        console.error('Polling error:', error);\n        // If polling also fails, simulate some data changes for demo purposes\n        if (false) // removed by dead control flow\n{}\n      }\n    }, 5000);\n\n    // Store the interval ID so we can clear it later\n    set({\n      pollingInterval: pollInterval\n    });\n  },\n  // Stop polling when WebSocket becomes available\n  stopPolling: () => {\n    const state = get();\n    if (state.pollingInterval) {\n      clearInterval(state.pollingInterval);\n      set({\n        pollingInterval: null\n      });\n      console.log('Stopped polling fallback');\n    }\n  },\n  // Cleanup function to stop all connections\n  cleanup: () => {\n    // Stop WebSocket connection\n    if (webSocketService.isWebSocketAvailable()) {\n      webSocketService.disconnect();\n    }\n\n    // Stop polling\n    get().stopPolling();\n    console.log('Cleaned up all connections');\n  },\n  setCurrentPage: page => set({\n    currentPage: page\n  }),\n  setCurrencyPair: pair => set({\n    selectedCurrencyPair: pair\n  }),\n  showModal: function (type) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return set({\n      showModal: true,\n      modalType: type,\n      modalData: data\n    });\n  },\n  hideModal: () => set({\n    showModal: false,\n    modalType: null,\n    modalData: null\n  }),\n  // Timer functions\n  startTimer: () => {\n    const interval = setInterval(() => {\n      const state = get();\n      if (state.activeCycle.timeRemaining > 0) {\n        const newTimeRemaining = state.activeCycle.timeRemaining - 1;\n\n        // Determine phase based on time remaining\n        let newCyclePhase = 'OPEN';\n        let newStatus = 'OPEN';\n        if (newTimeRemaining > 300) {\n          // First 5 minutes - Open for betting\n          newCyclePhase = 'OPEN';\n          newStatus = 'OPEN';\n        } else if (newTimeRemaining > 0) {\n          // Last 5 minutes - Locked for settlement\n          newCyclePhase = 'LOCKED';\n          newStatus = 'LOCKED';\n        } else {\n          // Time's up - Settlement\n          newCyclePhase = 'SETTLING';\n          newStatus = 'SETTLED';\n        }\n        set({\n          activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), {}, {\n            timeRemaining: Math.max(0, newTimeRemaining),\n            status: newStatus,\n            cyclePhase: newCyclePhase\n          })\n        });\n\n        // Auto-settle when cycle completes\n        if (newTimeRemaining <= 0 && state.activeCycle.status !== 'SETTLED') {\n          const result = Math.random() > 0.5 ? 'UP' : 'DOWN';\n\n          // Set end price for settlement\n          set({\n            activeCycle: useStore_objectSpread(useStore_objectSpread({}, state.activeCycle), {}, {\n              endPrice: state.activeCycle.currentPrice,\n              result: result\n            })\n          });\n          get().settleBets(result);\n          get().showModal('RESULT', {\n            result,\n            winnings: 0\n          });\n\n          // Reset cycle after a brief delay\n          setTimeout(() => {\n            set({\n              activeCycle: {\n                id: state.activeCycle.id + 1,\n                market: 'BTC/USDT',\n                status: 'OPEN',\n                timeRemaining: 600,\n                // Reset to 10 minutes\n                totalCycleTime: 600,\n                openTime: 300,\n                lockedTime: 300,\n                upPool: 0,\n                downPool: 0,\n                upBets: [],\n                downBets: [],\n                currentPrice: state.activeCycle.currentPrice,\n                startPrice: state.activeCycle.currentPrice,\n                // New start price\n                endPrice: null,\n                result: null,\n                cyclePhase: 'OPEN'\n              }\n            });\n          }, 3000); // 3 second delay before new cycle\n        }\n      }\n    }, 1000);\n    return interval;\n  }\n}));\n/* harmony default export */ const store_useStore = (useStore_useStore);\n;// ./src/components/Navbar.js\n\n\n\n// import { Sun, Moon } from 'lucide-react'; // Removed as theme toggle is hidden\n\nconst Navbar = () => {\n  const location = dist_useLocation();\n  const navigate = dist_useNavigate();\n  const {\n    isAuthenticated,\n    logout\n  } = store_useStore();\n  // isDarkMode state removed as theme toggle is hidden\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = (0,react.useState)(false);\n  const [cryptoPrices, setCryptoPrices] = (0,react.useState)({\n    btc: 110699.58,\n    eth: 4285.21,\n    usdt: 1.00\n  });\n  const isActive = path => location.pathname === path;\n\n  // toggleTheme function removed as theme toggle is hidden\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  // Fetch real crypto prices with rate limiting and caching\n  (0,react.useEffect)(() => {\n    let lastFetchTime = 0;\n    const FETCH_INTERVAL = 60000; // 1 minute minimum between requests\n    const CACHE_DURATION = 300000; // 5 minutes cache\n    const CACHE_KEY = 'crypto_prices_cache';\n    const fetchCryptoPrices = async () => {\n      const now = Date.now();\n\n      // Check if we should skip this fetch due to rate limiting\n      if (now - lastFetchTime < FETCH_INTERVAL) {\n        console.log('Rate limited: Skipping CoinGecko fetch');\n        return;\n      }\n\n      // Check cache first\n      try {\n        const cached = localStorage.getItem(CACHE_KEY);\n        if (cached) {\n          const {\n            data,\n            timestamp\n          } = JSON.parse(cached);\n          if (now - timestamp < CACHE_DURATION) {\n            console.log('Using cached crypto prices');\n            setCryptoPrices(data);\n            return;\n          }\n        }\n      } catch (error) {\n        console.log('Cache read error:', error);\n      }\n      try {\n        var _data$bitcoin, _data$ethereum, _data$tether;\n        lastFetchTime = now;\n        const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,tether&vs_currencies=usd', {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          },\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          throw new Error(\"HTTP \".concat(response.status, \": \").concat(response.statusText));\n        }\n        const data = await response.json();\n        const newPrices = {\n          btc: ((_data$bitcoin = data.bitcoin) === null || _data$bitcoin === void 0 ? void 0 : _data$bitcoin.usd) || 110699.58,\n          eth: ((_data$ethereum = data.ethereum) === null || _data$ethereum === void 0 ? void 0 : _data$ethereum.usd) || 4285.21,\n          usdt: ((_data$tether = data.tether) === null || _data$tether === void 0 ? void 0 : _data$tether.usd) || 1.00\n        };\n        setCryptoPrices(newPrices);\n\n        // Cache the successful response\n        try {\n          localStorage.setItem(CACHE_KEY, JSON.stringify({\n            data: newPrices,\n            timestamp: now\n          }));\n        } catch (cacheError) {\n          console.log('Cache write error:', cacheError);\n        }\n        console.log('Crypto prices updated successfully');\n      } catch (error) {\n        console.log('CoinGecko API error:', error.message);\n        console.log('Using fallback prices');\n        // Keep the default prices if API fails\n      }\n    };\n\n    // Initial fetch\n    fetchCryptoPrices();\n\n    // Update prices every 2 minutes (reduced frequency)\n    const interval = setInterval(fetchCryptoPrices, 120000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Apply theme on mount - default to light mode\n  (0,react.useEffect)(() => {\n    document.documentElement.setAttribute('data-theme', 'light');\n  }, []);\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"price-ticker\",\n    style: {\n      background: 'var(--bg-secondary)',\n      color: 'var(--text-primary)',\n      padding: '0.5rem 0',\n      fontSize: 'clamp(0.5rem, 1.2vw, 1rem)',\n      fontWeight: '700',\n      textAlign: 'center',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      minHeight: '40px',\n      display: 'flex',\n      alignItems: 'center',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem',\n      width: '100%'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'clamp(0.75rem, 3vw, 1.5rem)',\n      flexWrap: 'nowrap',\n      width: '100%',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontWeight: '700',\n      fontSize: 'clamp(0.5rem, 1.2vw, 0.875rem)'\n    }\n  }, \"BTC:\"), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontWeight: '700',\n      fontSize: 'clamp(0.5rem, 1.2vw, 0.875rem)'\n    }\n  }, \"$\", cryptoPrices.btc.toLocaleString('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontWeight: '700',\n      fontSize: 'clamp(0.5rem, 1.2vw, 0.875rem)'\n    }\n  }, \"ETH:\"), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--accent-blue)',\n      fontWeight: '700',\n      fontSize: 'clamp(0.5rem, 1.2vw, 0.875rem)'\n    }\n  }, \"$\", cryptoPrices.eth.toLocaleString('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontWeight: '700',\n      fontSize: 'clamp(0.5rem, 1.2vw, 0.875rem)'\n    }\n  }, \"USDT:\"), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--accent-green)',\n      fontWeight: '700',\n      fontSize: 'clamp(0.5rem, 1.2vw, 0.875rem)'\n    }\n  }, \"$\", cryptoPrices.usdt.toLocaleString('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }))))), /*#__PURE__*/react.createElement(\"nav\", {\n    style: {\n      background: 'var(--bg-primary)',\n      padding: 'clamp(0.5rem, 1.5vw, 1rem) 0',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 clamp(0.5rem, 2vw, 1rem)',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      flexWrap: 'nowrap',\n      gap: 'clamp(0.5rem, 2vw, 1rem)',\n      width: '100%'\n    }\n  }, /*#__PURE__*/react.createElement(Link, {\n    to: \"/\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: 'clamp(0.25rem, 1vw, 0.5rem)',\n      textDecoration: 'none',\n      flexShrink: 0\n    }\n  }, /*#__PURE__*/react.createElement(\"img\", {\n    src: \"/logo.svg\",\n    alt: \"Cointoss\",\n    style: {\n      width: 'clamp(1.5rem, 3vw, 2rem)',\n      height: 'clamp(1.5rem, 3vw, 2rem)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '700',\n      fontStyle: 'normal',\n      fontSize: 'clamp(1rem, 2.5vw, 1.5rem)',\n      lineHeight: '100%',\n      letterSpacing: '0.25%',\n      color: 'var(--text-accent)',\n      whiteSpace: 'nowrap'\n    }\n  }, \"Cointoss\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"desktop-nav\",\n    style: {\n      display: 'none',\n      alignItems: 'center',\n      gap: 'clamp(0.5rem, 1.5vw, 1.5rem)',\n      flexWrap: 'nowrap',\n      flex: '1',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(Link, {\n    to: \"/betting\",\n    style: {\n      color: isActive('/betting') ? 'var(--accent-purple)' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      whiteSpace: 'nowrap',\n      background: isActive('/betting') ? 'var(--accent-purple)' : 'transparent',\n      color: isActive('/betting') ? 'white' : 'var(--text-primary)',\n      boxShadow: isActive('/betting') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : 'none',\n      transform: isActive('/betting') ? 'translateY(-1px)' : 'translateY(0)',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/betting')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/betting')) {\n        e.target.style.background = 'transparent';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/betting') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    }\n  }, \"Live Predictions\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/wallet\",\n    style: {\n      color: isActive('/wallet') ? 'var(--accent-purple)' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      whiteSpace: 'nowrap',\n      background: isActive('/wallet') ? 'var(--accent-purple)' : 'transparent',\n      color: isActive('/wallet') ? 'white' : 'var(--text-primary)',\n      boxShadow: isActive('/wallet') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : 'none',\n      transform: isActive('/wallet') ? 'translateY(-1px)' : 'translateY(0)',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/wallet')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/wallet')) {\n        e.target.style.background = 'transparent';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/wallet') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    }\n  }, \"Wallet\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/history\",\n    style: {\n      color: isActive('/history') ? 'var(--accent-purple)' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      whiteSpace: 'nowrap',\n      background: isActive('/history') ? 'var(--accent-purple)' : 'transparent',\n      color: isActive('/history') ? 'white' : 'var(--text-primary)',\n      boxShadow: isActive('/history') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : 'none',\n      transform: isActive('/history') ? 'translateY(-1px)' : 'translateY(0)',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/history')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/history')) {\n        e.target.style.background = 'transparent';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/history') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    }\n  }, \"History\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/faq\",\n    style: {\n      color: isActive('/faq') ? 'var(--accent-purple)' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      whiteSpace: 'nowrap',\n      background: isActive('/faq') ? 'var(--accent-purple)' : 'transparent',\n      color: isActive('/faq') ? 'white' : 'var(--text-primary)',\n      boxShadow: isActive('/faq') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : 'none',\n      transform: isActive('/faq') ? 'translateY(-1px)' : 'translateY(0)',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/faq')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/faq')) {\n        e.target.style.background = 'transparent';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/faq') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    }\n  }, \"FAQ\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/profile\",\n    style: {\n      color: isActive('/profile') ? 'var(--accent-purple)' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      whiteSpace: 'nowrap',\n      background: isActive('/profile') ? 'var(--accent-purple)' : 'transparent',\n      color: isActive('/profile') ? 'white' : 'var(--text-primary)',\n      boxShadow: isActive('/profile') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : 'none',\n      transform: isActive('/profile') ? 'translateY(-1px)' : 'translateY(0)',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/profile')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/profile')) {\n        e.target.style.background = 'transparent';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/profile') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    }\n  }, \"Profile\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '1rem'\n    }\n  }, isAuthenticated ? /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => {\n      logout();\n      navigate('/');\n    },\n    style: {\n      background: '#EF4444',\n      color: 'white',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      textDecoration: 'none',\n      fontWeight: '700',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      whiteSpace: 'nowrap',\n      flexShrink: 0,\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      border: 'none',\n      cursor: 'pointer',\n      position: 'relative',\n      overflow: 'hidden',\n      boxShadow: '0 4px 12px rgba(239, 68, 68, 0.3)',\n      transform: 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = '#DC2626';\n      e.target.style.transform = 'translateY(-3px)';\n      e.target.style.boxShadow = '0 12px 30px rgba(239, 68, 68, 0.4)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = '#EF4444';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = '0 4px 12px rgba(239, 68, 68, 0.3)';\n    }\n  }, \"Logout\") : /*#__PURE__*/react.createElement(Link, {\n    to: \"/login\",\n    style: {\n      color: 'var(--text-primary)',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      textDecoration: 'none',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      whiteSpace: 'nowrap',\n      flexShrink: 0,\n      background: 'transparent',\n      border: '2px solid var(--border-color)',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    onMouseEnter: e => {\n      e.target.style.color = 'var(--accent-purple)';\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.borderColor = 'var(--accent-purple)';\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n    },\n    onMouseLeave: e => {\n      e.target.style.color = 'var(--text-primary)';\n      e.target.style.background = 'transparent';\n      e.target.style.borderColor = 'var(--border-color)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = 'translateY(-2px) scale(1)';\n    }\n  }, \"Login\"), !isAuthenticated && /*#__PURE__*/react.createElement(Link, {\n    to: \"/signup\",\n    style: {\n      background: 'var(--text-accent)',\n      color: 'white',\n      padding: 'clamp(0.5rem, 1.2vw, 0.75rem) clamp(0.75rem, 2vw, 1rem)',\n      borderRadius: '0.75rem',\n      textDecoration: 'none',\n      fontWeight: '700',\n      fontSize: 'clamp(0.75rem, 1.5vw, 0.875rem)',\n      whiteSpace: 'nowrap',\n      flexShrink: 0,\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      border: 'none',\n      cursor: 'pointer',\n      position: 'relative',\n      overflow: 'hidden',\n      boxShadow: '0 4px 12px rgba(139, 92, 246, 0.3)',\n      transform: 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = '#9333EA';\n      e.target.style.transform = 'translateY(-3px)';\n      e.target.style.boxShadow = '0 12px 30px rgba(139, 92, 246, 0.4)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--text-accent)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(-1px) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = 'translateY(-3px) scale(1)';\n    }\n  }, \"Sign Up\"), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: toggleMobileMenu,\n    className: \"mobile-menu-btn\",\n    style: {\n      display: 'none',\n      background: 'none',\n      border: 'none',\n      color: 'var(--text-primary)',\n      fontSize: '1.5rem',\n      cursor: 'pointer',\n      padding: '0.5rem'\n    },\n    \"aria-label\": \"Toggle mobile menu\"\n  }, \"\\u2630\"))), isMobileMenuOpen && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'var(--bg-secondary)',\n      padding: '1rem 0',\n      borderTop: \"1px solid var(--border-color)\"\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.5rem',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(Link, {\n    to: \"/betting\",\n    className: \"mobile-menu-link\",\n    style: {\n      color: isActive('/betting') ? 'white' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      background: isActive('/betting') ? 'var(--accent-purple)' : 'var(--bg-secondary)',\n      border: isActive('/betting') ? 'none' : '2px solid var(--border-color)',\n      boxShadow: isActive('/betting') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : '0 2px 8px var(--shadow)',\n      transform: isActive('/betting') ? 'translateY(-1px)' : 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/betting')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.borderColor = 'var(--accent-purple)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/betting')) {\n        e.target.style.background = 'var(--bg-secondary)';\n        e.target.style.borderColor = 'var(--border-color)';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = '0 2px 8px var(--shadow)';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/betting') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"Live Predictions\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/wallet\",\n    className: \"mobile-menu-link\",\n    style: {\n      color: isActive('/wallet') ? 'white' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      background: isActive('/wallet') ? 'var(--accent-purple)' : 'var(--bg-secondary)',\n      border: isActive('/wallet') ? 'none' : '2px solid var(--border-color)',\n      boxShadow: isActive('/wallet') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : '0 2px 8px var(--shadow)',\n      transform: isActive('/wallet') ? 'translateY(-1px)' : 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/wallet')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.borderColor = 'var(--accent-purple)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/wallet')) {\n        e.target.style.background = 'var(--bg-secondary)';\n        e.target.style.borderColor = 'var(--border-color)';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = '0 2px 8px var(--shadow)';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/wallet') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"Wallet\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/history\",\n    className: \"mobile-menu-link\",\n    style: {\n      color: isActive('/history') ? 'white' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      background: isActive('/history') ? 'var(--accent-purple)' : 'var(--bg-secondary)',\n      border: isActive('/history') ? 'none' : '2px solid var(--border-color)',\n      boxShadow: isActive('/history') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : '0 2px 8px var(--shadow)',\n      transform: isActive('/history') ? 'translateY(-1px)' : 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/history')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.borderColor = 'var(--accent-purple)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/history')) {\n        e.target.style.background = 'var(--bg-secondary)';\n        e.target.style.borderColor = 'var(--border-color)';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = '0 2px 8px var(--shadow)';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/history') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"History\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/faq\",\n    className: \"mobile-menu-link\",\n    style: {\n      color: isActive('/faq') ? 'white' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      background: isActive('/faq') ? 'var(--accent-purple)' : 'var(--bg-secondary)',\n      border: isActive('/faq') ? 'none' : '2px solid var(--border-color)',\n      boxShadow: isActive('/faq') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : '0 2px 8px var(--shadow)',\n      transform: isActive('/faq') ? 'translateY(-1px)' : 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/faq')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.borderColor = 'var(--accent-purple)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/faq')) {\n        e.target.style.background = 'var(--bg-secondary)';\n        e.target.style.borderColor = 'var(--border-color)';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = '0 2px 8px var(--shadow)';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/faq') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"FAQ\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/profile\",\n    className: \"mobile-menu-link\",\n    style: {\n      color: isActive('/profile') ? 'white' : 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      background: isActive('/profile') ? 'var(--accent-purple)' : 'var(--bg-secondary)',\n      border: isActive('/profile') ? 'none' : '2px solid var(--border-color)',\n      boxShadow: isActive('/profile') ? '0 4px 12px rgba(139, 92, 246, 0.3)' : '0 2px 8px var(--shadow)',\n      transform: isActive('/profile') ? 'translateY(-1px)' : 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      if (!isActive('/profile')) {\n        e.target.style.background = 'var(--bg-tertiary)';\n        e.target.style.borderColor = 'var(--accent-purple)';\n        e.target.style.color = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isActive('/profile')) {\n        e.target.style.background = 'var(--bg-secondary)';\n        e.target.style.borderColor = 'var(--border-color)';\n        e.target.style.color = 'var(--text-primary)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = '0 2px 8px var(--shadow)';\n      }\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = isActive('/profile') ? 'translateY(-1px) scale(1)' : 'translateY(-2px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"Profile\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/login\",\n    className: \"mobile-menu-link\",\n    style: {\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '600',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      background: 'var(--bg-secondary)',\n      border: '2px solid var(--border-color)',\n      boxShadow: '0 2px 8px var(--shadow)',\n      transform: 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.borderColor = 'var(--accent-purple)';\n      e.target.style.color = 'var(--accent-purple)';\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 8px 25px var(--shadow)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--bg-secondary)';\n      e.target.style.borderColor = 'var(--border-color)';\n      e.target.style.color = 'var(--text-primary)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = '0 2px 8px var(--shadow)';\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(0) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = 'translateY(-2px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"Login\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/signup\",\n    className: \"mobile-menu-link\",\n    style: {\n      background: 'var(--text-accent)',\n      color: 'white',\n      textDecoration: 'none',\n      padding: '1rem 1.5rem',\n      borderRadius: '0.75rem',\n      transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n      fontSize: '1rem',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      fontWeight: '700',\n      textAlign: 'center',\n      width: '100%',\n      maxWidth: '300px',\n      boxShadow: '0 4px 12px rgba(139, 92, 246, 0.3)',\n      transform: 'translateY(0)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = '#9333EA';\n      e.target.style.transform = 'translateY(-3px)';\n      e.target.style.boxShadow = '0 12px 30px rgba(139, 92, 246, 0.4)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--text-accent)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';\n    },\n    onMouseDown: e => {\n      e.target.style.transform = 'translateY(-1px) scale(0.98)';\n    },\n    onMouseUp: e => {\n      e.target.style.transform = 'translateY(-3px) scale(1)';\n    },\n    onClick: () => setIsMobileMenuOpen(false)\n  }, \"Sign Up\")))));\n};\n/* harmony default export */ const components_Navbar = (Navbar);\n;// ./node_modules/lucide-react/dist/esm/shared/src/utils.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\n\n//# sourceMappingURL=utils.js.map\n\n;// ./node_modules/lucide-react/dist/esm/defaultAttributes.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\n\n//# sourceMappingURL=defaultAttributes.js.map\n\n;// ./node_modules/lucide-react/dist/esm/Icon.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nconst Icon = (0,react.forwardRef)(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => (0,react.createElement)(\n    \"svg\",\n    {\n      ref,\n      ...defaultAttributes,\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: mergeClasses(\"lucide\", className),\n      ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n      ...rest\n    },\n    [\n      ...iconNode.map(([tag, attrs]) => (0,react.createElement)(tag, attrs)),\n      ...Array.isArray(children) ? children : [children]\n    ]\n  )\n);\n\n\n//# sourceMappingURL=Icon.js.map\n\n;// ./node_modules/lucide-react/dist/esm/createLucideIcon.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = (0,react.forwardRef)(\n    ({ className, ...props }, ref) => (0,react.createElement)(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\n\n//# sourceMappingURL=createLucideIcon.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/facebook.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst __iconNode = [\n  [\n    \"path\",\n    { d: \"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\", key: \"1jg4f8\" }\n  ]\n];\nconst Facebook = createLucideIcon(\"facebook\", __iconNode);\n\n\n//# sourceMappingURL=facebook.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/instagram.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst instagram_iconNode = [\n  [\"rect\", { width: \"20\", height: \"20\", x: \"2\", y: \"2\", rx: \"5\", ry: \"5\", key: \"2e1cvw\" }],\n  [\"path\", { d: \"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\", key: \"9exkf1\" }],\n  [\"line\", { x1: \"17.5\", x2: \"17.51\", y1: \"6.5\", y2: \"6.5\", key: \"r4j83e\" }]\n];\nconst Instagram = createLucideIcon(\"instagram\", instagram_iconNode);\n\n\n//# sourceMappingURL=instagram.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/linkedin.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst linkedin_iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\",\n      key: \"c2jq9f\"\n    }\n  ],\n  [\"rect\", { width: \"4\", height: \"12\", x: \"2\", y: \"9\", key: \"mk3on5\" }],\n  [\"circle\", { cx: \"4\", cy: \"4\", r: \"2\", key: \"bt5ra8\" }]\n];\nconst Linkedin = createLucideIcon(\"linkedin\", linkedin_iconNode);\n\n\n//# sourceMappingURL=linkedin.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/wallet.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst wallet_iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1\",\n      key: \"18etb6\"\n    }\n  ],\n  [\"path\", { d: \"M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4\", key: \"xoc0q4\" }]\n];\nconst Wallet = createLucideIcon(\"wallet\", wallet_iconNode);\n\n\n//# sourceMappingURL=wallet.js.map\n\n;// ./src/components/Footer.js\n\n\nconst Footer = () => {\n  return /*#__PURE__*/react.createElement(\"footer\", {\n    style: {\n      background: 'var(--footer-bg)',\n      padding: 'clamp(2rem, 5vw, 3rem) 0',\n      marginTop: 'clamp(2rem, 5vw, 4rem)',\n      position: 'relative',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      height: '8px',\n      background: 'linear-gradient(90deg, transparent 0%, var(--accent-purple) 20%, var(--accent-blue) 50%, var(--accent-purple) 80%, transparent 100%)',\n      boxShadow: '0 0 20px var(--accent-purple), 0 0 40px rgba(139, 92, 246, 0.3), 0 0 60px rgba(139, 92, 246, 0.2)',\n      borderRadius: '0 0 100% 100%',\n      transform: 'translateY(-4px)',\n      clipPath: 'ellipse(100% 100% at 50% 0%)'\n    }\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '2px',\n      left: 0,\n      right: 0,\n      height: '6px',\n      background: 'linear-gradient(90deg, transparent 0%, rgba(139, 92, 246, 0.3) 20%, rgba(37, 99, 235, 0.3) 50%, rgba(139, 92, 246, 0.3) 80%, transparent 100%)',\n      borderRadius: '0 0 100% 100%',\n      transform: 'translateY(-2px)',\n      clipPath: 'ellipse(100% 100% at 50% 0%)'\n    }\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 clamp(1rem, 3vw, 2rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"footer-main-content\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexWrap: 'wrap',\n      gap: 'clamp(1rem, 3vw, 2rem)',\n      marginBottom: '2rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"footer-logo-section\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '48px',\n      height: '48px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '12px',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/react.createElement(\"img\", {\n    src: \"/logo.svg\",\n    alt: \"CoinToss Logo\",\n    style: {\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain'\n    },\n    onError: e => {\n      // Fallback if logo.svg doesn't exist\n      e.target.style.display = 'none';\n      e.target.nextSibling.style.display = 'flex';\n    }\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      background: 'linear-gradient(135deg, var(--accent-purple) 0%, var(--accent-blue) 100%)',\n      borderRadius: '12px',\n      display: 'none',\n      alignItems: 'center',\n      justifyContent: 'center',\n      boxShadow: '0 4px 12px rgba(139, 92, 246, 0.3)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '24px',\n      height: '24px',\n      background: 'white',\n      borderRadius: '6px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: '14px',\n      fontWeight: 'bold',\n      color: 'var(--accent-purple)'\n    }\n  }, \"C\"))), /*#__PURE__*/react.createElement(\"h2\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1.25rem, 3vw, 1.5rem)',\n      fontWeight: '700',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      margin: 0\n    }\n  }, \"CoinToss\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"footer-nav-links\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: 'clamp(1rem, 2vw, 2rem)',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"a\", {\n    href: \"/betting\",\n    style: {\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      fontWeight: '500',\n      transition: 'color 0.3s ease',\n      whiteSpace: 'nowrap'\n    },\n    onMouseEnter: e => e.target.style.color = 'var(--accent-purple)',\n    onMouseLeave: e => e.target.style.color = 'var(--text-primary)'\n  }, \"Live Predictions\"), /*#__PURE__*/react.createElement(\"a\", {\n    href: \"/wallet\",\n    style: {\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      fontWeight: '500',\n      transition: 'color 0.3s ease',\n      whiteSpace: 'nowrap'\n    },\n    onMouseEnter: e => e.target.style.color = 'var(--accent-purple)',\n    onMouseLeave: e => e.target.style.color = 'var(--text-primary)'\n  }, \"Wallet\"), /*#__PURE__*/react.createElement(\"a\", {\n    href: \"/history\",\n    style: {\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      fontWeight: '500',\n      transition: 'color 0.3s ease',\n      whiteSpace: 'nowrap'\n    },\n    onMouseEnter: e => e.target.style.color = 'var(--accent-purple)',\n    onMouseLeave: e => e.target.style.color = 'var(--text-primary)'\n  }, \"History\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"footer-social-section\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: 'clamp(1rem, 2vw, 1.5rem)',\n      flexWrap: 'wrap',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-secondary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '500',\n      whiteSpace: 'nowrap'\n    }\n  }, \"Follow us\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"footer-social-icons\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: 'clamp(0.5rem, 1.5vw, 0.75rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"a\", {\n    href: \"#\",\n    style: {\n      width: 'clamp(36px, 8vw, 40px)',\n      height: 'clamp(36px, 8vw, 40px)',\n      background: 'var(--bg-tertiary)',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      transition: 'all 0.3s ease',\n      border: '1px solid var(--border-color)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = 'var(--accent-purple)';\n      e.target.style.color = 'white';\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.color = 'var(--text-primary)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    }\n  }, /*#__PURE__*/react.createElement(Facebook, {\n    size: 18\n  })), /*#__PURE__*/react.createElement(\"a\", {\n    href: \"#\",\n    style: {\n      width: 'clamp(36px, 8vw, 40px)',\n      height: 'clamp(36px, 8vw, 40px)',\n      background: 'var(--bg-tertiary)',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      transition: 'all 0.3s ease',\n      border: '1px solid var(--border-color)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = 'var(--accent-purple)';\n      e.target.style.color = 'white';\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.color = 'var(--text-primary)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    }\n  }, /*#__PURE__*/react.createElement(Instagram, {\n    size: 18\n  })), /*#__PURE__*/react.createElement(\"a\", {\n    href: \"#\",\n    style: {\n      width: 'clamp(36px, 8vw, 40px)',\n      height: 'clamp(36px, 8vw, 40px)',\n      background: 'var(--bg-tertiary)',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: 'var(--text-primary)',\n      textDecoration: 'none',\n      transition: 'all 0.3s ease',\n      border: '1px solid var(--border-color)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = 'var(--accent-purple)';\n      e.target.style.color = 'white';\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.color = 'var(--text-primary)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    }\n  }, /*#__PURE__*/react.createElement(Linkedin, {\n    size: 18\n  })))), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"footer-wallet-button\",\n    style: {\n      background: 'linear-gradient(135deg, var(--accent-purple) 0%, var(--accent-blue) 100%)',\n      color: 'white',\n      border: 'none',\n      borderRadius: '12px',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem) clamp(1rem, 3vw, 1.5rem)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.5rem',\n      transition: 'all 0.3s ease',\n      boxShadow: '0 4px 12px rgba(139, 92, 246, 0.3)',\n      whiteSpace: 'nowrap'\n    },\n    onMouseEnter: e => {\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 8px 25px rgba(139, 92, 246, 0.4)';\n    },\n    onMouseLeave: e => {\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = '0 4px 12px rgba(139, 92, 246, 0.3)';\n    }\n  }, /*#__PURE__*/react.createElement(Wallet, {\n    size: 16\n  }), \"Connect Wallet\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      paddingTop: '2rem',\n      borderTop: '1px solid var(--border-color)'\n    }\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--footer-text)',\n      fontSize: '0.875rem',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      margin: 0,\n      fontWeight: '400'\n    }\n  }, \"\\xA9 2025 CoinToss. All Rights Reserved.\"))), /*#__PURE__*/react.createElement(\"style\", {\n    jsx: true\n  }, \"\\n        @media (max-width: 768px) {\\n          .footer-main-content {\\n            flex-direction: column !important;\\n            text-align: center !important;\\n            gap: 1.5rem !important;\\n          }\\n          \\n          .footer-logo-section {\\n            order: 1 !important;\\n          }\\n          \\n          .footer-nav-links {\\n            order: 2 !important;\\n            justify-content: center !important;\\n          }\\n          \\n          .footer-social-section {\\n            order: 3 !important;\\n            justify-content: center !important;\\n          }\\n          \\n          .footer-wallet-button {\\n            order: 4 !important;\\n            align-self: center !important;\\n          }\\n        }\\n        \\n        @media (max-width: 480px) {\\n          .footer-social-icons {\\n            gap: 0.5rem !important;\\n          }\\n          \\n          .footer-nav-links {\\n            gap: 1rem !important;\\n          }\\n        }\\n      \"));\n};\n/* harmony default export */ const components_Footer = (Footer);\n;// ./src/pages/Home.js\n\n\n\nconst Home = () => {\n  // Live predictions state\n  const [livePredictions, setLivePredictions] = (0,react.useState)({\n    btc: {\n      amount: '0.005',\n      change: '+3%',\n      direction: 'up',\n      timeAgo: '2 mins ago'\n    },\n    eth: {\n      amount: '0.02',\n      change: '-1.2%',\n      direction: 'down',\n      timeAgo: '4 mins ago'\n    }\n  });\n\n  // FAQ state\n  const [openFAQ, setOpenFAQ] = (0,react.useState)(null);\n  const toggleFAQ = index => {\n    setOpenFAQ(openFAQ === index ? null : index);\n  };\n\n  // Simulate live data updates\n  (0,react.useEffect)(() => {\n    const interval = setInterval(() => {\n      // Generate random predictions\n      const btcChange = (Math.random() - 0.5) * 10; // -5% to +5%\n      const ethChange = (Math.random() - 0.5) * 10; // -5% to +5%\n\n      setLivePredictions({\n        btc: {\n          amount: (Math.random() * 0.01).toFixed(3),\n          change: \"\".concat(btcChange > 0 ? '+' : '').concat(btcChange.toFixed(1), \"%\"),\n          direction: btcChange > 0 ? 'up' : 'down',\n          timeAgo: '2 mins ago'\n        },\n        eth: {\n          amount: (Math.random() * 0.05).toFixed(2),\n          change: \"\".concat(ethChange > 0 ? '+' : '').concat(ethChange.toFixed(1), \"%\"),\n          direction: ethChange > 0 ? 'up' : 'down',\n          timeAgo: '4 mins ago'\n        }\n      });\n    }, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Check for demo mode\n  const [isDemoMode, setIsDemoMode] = (0,react.useState)(false);\n  const [isTestingConnection, setIsTestingConnection] = (0,react.useState)(false);\n  (0,react.useEffect)(() => {\n    const demoMode = localStorage.getItem('isDemoMode') === 'true';\n    setIsDemoMode(demoMode);\n  }, []);\n  const handleTestConnection = async () => {\n    setIsTestingConnection(true);\n    const success = await testBackendConnection();\n    if (success) {\n      setIsDemoMode(false);\n      window.location.reload(); // Refresh to use real data\n    } else {\n      alert('Backend connection failed. Please check your server configuration.');\n    }\n    setIsTestingConnection(false);\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg-primary)'\n    }\n  }, isDemoMode && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'linear-gradient(135deg, #FF6B6B, #FF8E53)',\n      color: 'white',\n      padding: '0.75rem 1rem',\n      textAlign: 'center',\n      fontSize: '0.875rem',\n      fontWeight: '600',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1000,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '1rem',\n      flexWrap: 'wrap'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", null, \"\\uD83D\\uDE80 Demo Mode: Using mock data due to backend connection issues. Backend needs CORS configuration for \", getVercelUrl()), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: handleTestConnection,\n    disabled: isTestingConnection,\n    style: {\n      background: 'rgba(255,255,255,0.2)',\n      border: '1px solid rgba(255,255,255,0.3)',\n      color: 'white',\n      padding: '0.5rem 1rem',\n      borderRadius: '0.5rem',\n      fontSize: '0.75rem',\n      fontWeight: '600',\n      cursor: isTestingConnection ? 'not-allowed' : 'pointer',\n      opacity: isTestingConnection ? 0.7 : 1,\n      transition: 'all 0.3s ease'\n    },\n    onMouseOver: e => {\n      if (!isTestingConnection) {\n        e.target.style.background = 'rgba(255,255,255,0.3)';\n      }\n    },\n    onMouseOut: e => {\n      e.target.style.background = 'rgba(255,255,255,0.2)';\n    }\n  }, isTestingConnection ? 'Testing...' : 'Test Backend Connection')), /*#__PURE__*/react.createElement(\"section\", {\n    style: {\n      padding: 'clamp(1.5rem, 4vw, 3rem) 0',\n      minHeight: 'clamp(50vh, 70vh, 80vh)',\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem',\n      textAlign: 'center',\n      position: 'relative',\n      zIndex: 10\n    }\n  }, /*#__PURE__*/react.createElement(\"h1\", {\n    className: \"hero-title\",\n    style: {\n      fontSize: 'clamp(1.25rem, 5vw, 4rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(0.75rem, 2vw, 1.5rem)',\n      lineHeight: '1.2',\n      animation: 'floatUp 1s ease-out'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, \"Predict Crypto Trends - \"), /*#__PURE__*/react.createElement(\"span\", {\n    className: \"rise-word\",\n    style: {\n      color: '#10B981'\n    }\n  }, \"Rise\"), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, \" Or \"), /*#__PURE__*/react.createElement(\"span\", {\n    className: \"fall-word\",\n    style: {\n      color: '#EF4444'\n    }\n  }, \"Fall\")), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: 'clamp(0.75rem, 1.8vw, 1.25rem)',\n      color: 'var(--text-secondary)',\n      marginBottom: 'clamp(1rem, 3vw, 2rem)',\n      maxWidth: 'clamp(18rem, 85vw, 40rem)',\n      margin: '0 auto clamp(1rem, 3vw, 2rem)',\n      fontWeight: '500',\n      lineHeight: '1.5'\n    }\n  }, \"Stake Crypto on market direction, Simple. Fast. Transparent.\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"hero-buttons\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      gap: 'clamp(0.75rem, 2vw, 1.5rem)',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      width: '100%',\n      maxWidth: '600px',\n      margin: '0 auto'\n    }\n  }, /*#__PURE__*/react.createElement(Link, {\n    to: \"/betting\",\n    className: \"btn btn-primary\",\n    style: {\n      background: 'linear-gradient(135deg, #8B5CF6 0%, #3B82F6 100%)',\n      color: 'white',\n      padding: 'clamp(0.625rem, 1.5vw, 0.875rem) clamp(1rem, 3vw, 1.5rem)',\n      borderRadius: '9999px',\n      textDecoration: 'none',\n      fontWeight: '600',\n      fontSize: 'clamp(0.75rem, 1.8vw, 1rem)',\n      minWidth: 'clamp(140px, 35vw, 200px)',\n      textAlign: 'center',\n      transition: 'all 0.3s ease',\n      animation: 'slideInLeft 0.8s ease-out 0.5s both',\n      flex: '1'\n    }\n  }, \"Place my Prediction\"), /*#__PURE__*/react.createElement(Link, {\n    to: \"/faq\",\n    className: \"btn btn-secondary\",\n    style: {\n      background: 'transparent',\n      color: 'var(--text-primary)',\n      border: '2px solid var(--text-primary)',\n      padding: 'clamp(0.625rem, 1.5vw, 0.875rem) clamp(1rem, 3vw, 1.5rem)',\n      borderRadius: '9999px',\n      textDecoration: 'none',\n      fontWeight: '600',\n      fontSize: 'clamp(0.75rem, 1.8vw, 1rem)',\n      minWidth: 'clamp(140px, 35vw, 200px)',\n      textAlign: 'center',\n      transition: 'all 0.3s ease',\n      animation: 'slideInRight 0.8s ease-out 0.7s both',\n      flex: '1'\n    }\n  }, \"Learn How It Works\")))), /*#__PURE__*/react.createElement(\"section\", {\n    style: {\n      padding: 'clamp(1rem, 3vw, 2rem) 0',\n      background: 'var(--bg-primary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"process-cards-grid\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n      gap: 'clamp(0.5rem, 1.5vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"process-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: '0.75rem',\n      padding: 'clamp(1rem, 2.5vw, 1.5rem)',\n      textAlign: 'center',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      position: 'relative',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: 'clamp(0.75rem, 2vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: 'clamp(36px, 8vw, 48px)',\n      height: 'clamp(36px, 8vw, 48px)',\n      border: '2px solid var(--accent-purple)',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: 'clamp(16px, 4vw, 20px)',\n      height: 'clamp(18px, 4.5vw, 24px)',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '0',\n      left: '50%',\n      width: '0',\n      height: '0',\n      borderLeft: 'clamp(8px, 2vw, 10px) solid transparent',\n      borderRight: 'clamp(8px, 2vw, 10px) solid transparent',\n      borderBottom: 'clamp(10px, 2.5vw, 12px) solid var(--accent-purple)',\n      transform: 'translateX(-50%)'\n    }\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '0',\n      left: '50%',\n      width: 'clamp(4px, 1vw, 6px)',\n      height: 'clamp(8px, 2vw, 12px)',\n      background: 'var(--accent-purple)',\n      transform: 'translateX(-50%)'\n    }\n  })))), /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '600',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)'\n    }\n  }, \"Select BTC, ETH, or USDT\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-secondary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4'\n    }\n  }, \"Choose your preferred cryptocurrency to start predicting\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"process-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: '0.75rem',\n      padding: 'clamp(1rem, 2.5vw, 1.5rem)',\n      textAlign: 'center',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      position: 'relative',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: 'clamp(0.75rem, 2vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: 'clamp(36px, 8vw, 48px)',\n      height: 'clamp(36px, 8vw, 48px)',\n      border: '2px solid var(--accent-blue)',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: 'clamp(16px, 4vw, 20px)',\n      height: 'clamp(18px, 4.5vw, 24px)',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '0',\n      left: '50%',\n      width: '0',\n      height: '0',\n      borderLeft: 'clamp(8px, 2vw, 10px) solid transparent',\n      borderRight: 'clamp(8px, 2vw, 10px) solid transparent',\n      borderTop: 'clamp(10px, 2.5vw, 12px) solid var(--accent-blue)',\n      transform: 'translateX(-50%)'\n    }\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '0',\n      left: '50%',\n      width: 'clamp(4px, 1vw, 6px)',\n      height: 'clamp(8px, 2vw, 12px)',\n      background: 'var(--accent-blue)',\n      transform: 'translateX(-50%)'\n    }\n  })))), /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '600',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)'\n    }\n  }, \"Up or Down with one click\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-secondary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4'\n    }\n  }, \"Make your prediction with a single click\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"process-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: '0.75rem',\n      padding: 'clamp(1rem, 2.5vw, 1.5rem)',\n      textAlign: 'center',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      position: 'relative',\n      overflow: 'hidden'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginBottom: 'clamp(0.75rem, 2vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: 'clamp(36px, 8vw, 48px)',\n      height: 'clamp(36px, 8vw, 48px)',\n      border: '2px solid var(--accent-purple)',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: 'clamp(16px, 4vw, 20px)',\n      height: 'clamp(18px, 4.5vw, 24px)',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '0',\n      left: '50%',\n      width: '0',\n      height: '0',\n      borderLeft: 'clamp(8px, 2vw, 10px) solid transparent',\n      borderRight: 'clamp(8px, 2vw, 10px) solid transparent',\n      borderBottom: 'clamp(10px, 2.5vw, 12px) solid var(--accent-purple)',\n      transform: 'translateX(-50%)'\n    }\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '0',\n      left: '50%',\n      width: 'clamp(4px, 1vw, 6px)',\n      height: 'clamp(8px, 2vw, 12px)',\n      background: 'var(--accent-purple)',\n      transform: 'translateX(-50%)'\n    }\n  })))), /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '600',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)'\n    }\n  }, \"Enter Amount and confirm instantly\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-secondary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4'\n    }\n  }, \"Set your bet amount and confirm your prediction\"))))), /*#__PURE__*/react.createElement(\"section\", {\n    style: {\n      padding: 'clamp(2rem, 6vw, 4rem) 0',\n      background: 'var(--bg-primary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"h2\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1.25rem, 3.5vw, 2rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(1rem, 3vw, 2rem)',\n      textAlign: 'left'\n    }\n  }, \"Live Predictions\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"live-predictions-grid\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 'clamp(0.75rem, 2vw, 1.25rem)',\n      marginBottom: 'clamp(1.5rem, 4vw, 3rem)',\n      width: '100%',\n      padding: '0 clamp(0.5rem, 2vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"prediction-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: '1rem',\n      padding: 'clamp(1rem, 3vw, 1.5rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 4px 6px var(--shadow)',\n      transition: 'all 0.3s ease',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1rem, 2.5vw, 1.25rem)',\n      fontWeight: '700',\n      margin: 0\n    }\n  }, \"BTC\"), /*#__PURE__*/react.createElement(\"img\", {\n    src: livePredictions.btc.direction === 'up' ? '/up.svg' : '/down.svg',\n    alt: livePredictions.btc.direction === 'up' ? 'Up' : 'Down',\n    style: {\n      width: '20px',\n      height: '20px'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: livePredictions.btc.direction === 'up' ? '#7A46EC' : '#21C3FD',\n      fontSize: '1.125rem',\n      fontWeight: '600'\n    }\n  }, livePredictions.btc.amount, \". BTC\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: '1rem',\n      fontWeight: '600'\n    }\n  }, livePredictions.btc.change), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: '0.875rem'\n    }\n  }, livePredictions.btc.timeAgo))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"prediction-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: '1rem',\n      padding: 'clamp(1rem, 3vw, 1.5rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 4px 6px var(--shadow)',\n      transition: 'all 0.3s ease',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1rem, 2.5vw, 1.25rem)',\n      fontWeight: '700',\n      margin: 0\n    }\n  }, \"ETH\"), /*#__PURE__*/react.createElement(\"img\", {\n    src: livePredictions.eth.direction === 'up' ? '/up.svg' : '/down.svg',\n    alt: livePredictions.eth.direction === 'up' ? 'Up' : 'Down',\n    style: {\n      width: '20px',\n      height: '20px'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: livePredictions.eth.direction === 'up' ? '#7A46EC' : '#21C3FD',\n      fontSize: '1.125rem',\n      fontWeight: '600'\n    }\n  }, livePredictions.eth.amount, \". ETH\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: '1rem',\n      fontWeight: '600'\n    }\n  }, livePredictions.eth.change), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: '0.875rem'\n    }\n  }, livePredictions.eth.timeAgo)))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"feature-cards-grid\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 220px))',\n      gap: 'clamp(1rem, 2.5vw, 1.5rem)',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"feature-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: 'clamp(0.5rem, 2vw, 0.75rem)',\n      padding: 'clamp(1rem, 3vw, 1.5rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      textAlign: 'left',\n      width: 'clamp(200px, 20vw, 220px)',\n      height: 'clamp(200px, 20vw, 220px)',\n      opacity: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#7A46EC',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Fast Settlements\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Instant payout After results\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"feature-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: 'clamp(0.5rem, 2vw, 0.75rem)',\n      padding: 'clamp(1rem, 3vw, 1.5rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      textAlign: 'left',\n      width: 'clamp(200px, 20vw, 220px)',\n      height: 'clamp(200px, 20vw, 220px)',\n      opacity: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#7A46EC',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Multi- Asset Support\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"BTC, ETH, and Stablecoins\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"feature-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: 'clamp(0.5rem, 2vw, 0.75rem)',\n      padding: 'clamp(1rem, 3vw, 1.5rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      textAlign: 'left',\n      width: 'clamp(200px, 20vw, 220px)',\n      height: 'clamp(200px, 20vw, 220px)',\n      opacity: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#7A46EC',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Transparent Payouts\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"No hidden fees or tricks\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"feature-card\",\n    style: {\n      background: 'var(--card-bg)',\n      borderRadius: 'clamp(0.5rem, 2vw, 0.75rem)',\n      padding: 'clamp(1rem, 3vw, 1.5rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      textAlign: 'left',\n      width: 'clamp(200px, 20vw, 220px)',\n      height: 'clamp(200px, 20vw, 220px)',\n      opacity: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#7A46EC',\n      fontSize: 'clamp(0.875rem, 2vw, 1.125rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Low Volatility\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',\n      lineHeight: '1.4',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Predict with Stable\"))))), /*#__PURE__*/react.createElement(\"section\", {\n    style: {\n      padding: 'clamp(2rem, 6vw, 4rem) 0',\n      background: 'var(--bg-primary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"h2\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1.25rem, 3.5vw, 2rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(1.5rem, 4vw, 2.5rem)',\n      textAlign: 'center'\n    }\n  }, \"Frequently Asked Questions\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 'clamp(1rem, 2.5vw, 1.5rem)',\n      maxWidth: '800px',\n      margin: '0 auto'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'var(--faq-bg)',\n      borderRadius: 'clamp(0.75rem, 2vw, 1rem)',\n      padding: 'clamp(1.25rem, 3vw, 1.75rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      cursor: 'pointer'\n    },\n    onClick: () => toggleFAQ(0)\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#21C3FD',\n      fontSize: 'clamp(1rem, 2.5vw, 1.25rem)',\n      fontWeight: '700',\n      marginBottom: openFAQ === 0 ? 'clamp(0.5rem, 1.5vw, 0.75rem)' : 0,\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      transition: 'margin-bottom 0.3s ease'\n    }\n  }, \"What currencies can i use?\"), openFAQ === 0 && /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      lineHeight: '1.5',\n      margin: 0,\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      animation: 'fadeIn 0.3s ease-in'\n    }\n  }, \"We Currently support BTC, ETH, and USDT\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'var(--faq-bg)',\n      borderRadius: 'clamp(0.75rem, 2vw, 1rem)',\n      padding: 'clamp(1.25rem, 3vw, 1.75rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      cursor: 'pointer'\n    },\n    onClick: () => toggleFAQ(1)\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#21C3FD',\n      fontSize: 'clamp(1rem, 2.5vw, 1.25rem)',\n      fontWeight: '700',\n      marginBottom: openFAQ === 1 ? 'clamp(0.5rem, 1.5vw, 0.75rem)' : 0,\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      transition: 'margin-bottom 0.3s ease'\n    }\n  }, \"How are Payouts Calculated?\"), openFAQ === 1 && /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      lineHeight: '1.5',\n      margin: 0,\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      animation: 'fadeIn 0.3s ease-in'\n    }\n  }, \"Payouts are based on stake multiplied by odds at the time of your prediction\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'var(--faq-bg)',\n      borderRadius: 'clamp(0.75rem, 2vw, 1rem)',\n      padding: 'clamp(1.25rem, 3vw, 1.75rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      cursor: 'pointer'\n    },\n    onClick: () => toggleFAQ(2)\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#21C3FD',\n      fontSize: 'clamp(1rem, 2.5vw, 1.25rem)',\n      fontWeight: '700',\n      marginBottom: openFAQ === 2 ? 'clamp(0.5rem, 1.5vw, 0.75rem)' : 0,\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      transition: 'margin-bottom 0.3s ease'\n    }\n  }, \"Is this platform secure?\"), openFAQ === 2 && /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      lineHeight: '1.5',\n      margin: 0,\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      animation: 'fadeIn 0.3s ease-in'\n    }\n  }, \"Yes we use advanced encryption and follow best practices for wallet and transactions safely\"))))));\n};\n/* harmony default export */ const pages_Home = (Home);\n;// ./src/pages/Login.js\nfunction Login_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction Login_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? Login_ownKeys(Object(t), !0).forEach(function (r) { Login_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Login_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction Login_defineProperty(e, r, t) { return (r = Login_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction Login_toPropertyKey(t) { var i = Login_toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction Login_toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\nconst Login = () => {\n  const {\n    login\n  } = store_useStore();\n  const [formData, setFormData] = (0,react.useState)({\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = (0,react.useState)(false);\n  const [isLoading, setIsLoading] = (0,react.useState)(false);\n  const [error, setError] = (0,react.useState)('');\n  const navigate = dist_useNavigate();\n\n  // Initialize Google Sign-In\n  (0,react.useEffect)(() => {\n    const initializeGoogleSignIn = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: 'YOUR_GOOGLE_CLIENT_ID',\n          // Replace with your actual client ID\n          callback: handleGoogleSignIn,\n          auto_select: false,\n          cancel_on_tap_outside: true\n        });\n      }\n    };\n\n    // Wait for Google script to load\n    const checkGoogle = setInterval(() => {\n      if (window.google) {\n        clearInterval(checkGoogle);\n        initializeGoogleSignIn();\n      }\n    }, 100);\n    return () => clearInterval(checkGoogle);\n  }, []);\n  const handleGoogleSignIn = response => {\n    try {\n      // Decode the JWT token (in a real app, you'd verify this on your backend)\n      const payload = JSON.parse(atob(response.credential.split('.')[1]));\n      console.log('Google Sign-In successful:', payload);\n\n      // Store user info (in a real app, you'd send this to your backend)\n      localStorage.setItem('user', JSON.stringify({\n        name: payload.name,\n        email: payload.email,\n        picture: payload.picture,\n        provider: 'google'\n      }));\n\n      // Navigate to home page\n      navigate('/');\n    } catch (error) {\n      console.error('Google Sign-In error:', error);\n      alert('Google Sign-In failed. Please try again.');\n    }\n  };\n  const handleGoogleSignInClick = () => {\n    if (window.google) {\n      window.google.accounts.id.prompt();\n    } else {\n      alert('Google Sign-In is not available. Please refresh the page and try again.');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => Login_objectSpread(Login_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // Basic validation\n      if (!formData.email || !formData.password) {\n        setError('Please fill in all fields!');\n        return;\n      }\n\n      // Login with backend\n      await login(formData.email.trim(), formData.password);\n\n      // Login successful, redirect to home\n      navigate('/');\n    } catch (error) {\n      console.error('Login error:', error);\n      setError(error.message || 'Login failed. Please check your credentials.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg-primary)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 'clamp(1rem, 3vw, 2rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'var(--auth-container-bg)',\n      borderRadius: 'clamp(1rem, 3vw, 1.5rem)',\n      padding: 'clamp(2rem, 4vw, 3rem)',\n      width: '100%',\n      maxWidth: '400px',\n      boxShadow: '0 10px 25px var(--shadow)',\n      border: '1px solid var(--border-color)'\n    }\n  }, /*#__PURE__*/react.createElement(\"h1\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1.25rem, 3.5vw, 1.75rem)',\n      fontWeight: '700',\n      textAlign: 'center',\n      marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Welcome Back\"), error && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: '#FEF2F2',\n      border: '1px solid #FECACA',\n      color: '#DC2626',\n      padding: '0.75rem',\n      borderRadius: '0.5rem',\n      marginBottom: '1rem',\n      fontSize: '0.875rem',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, error), /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 'clamp(0.75rem, 2.5vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Email\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: formData.email,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"Enter your email\",\n    required: true\n  })), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Password\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: showPassword ? 'text' : 'password',\n    name: \"password\",\n    value: formData.password,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      paddingRight: 'clamp(2rem, 4vw, 2.5rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"Enter your password\",\n    required: true\n  }), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setShowPassword(!showPassword),\n    style: {\n      position: 'absolute',\n      right: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      background: 'none',\n      border: 'none',\n      color: 'var(--text-secondary)',\n      cursor: 'pointer',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      transition: 'color 0.3s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onMouseEnter: e => e.target.style.color = 'var(--text-primary)',\n    onMouseLeave: e => e.target.style.color = 'var(--text-secondary)'\n  }, showPassword ? /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"\n  }), /*#__PURE__*/react.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  })) : /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n  }), /*#__PURE__*/react.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  }))))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      marginTop: '-0.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(Link, {\n    to: \"/forgot-password\",\n    style: {\n      color: 'var(--accent-blue)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      textDecoration: 'none',\n      transition: 'color 0.3s ease',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    },\n    onMouseEnter: e => e.target.style.color = '#60A5FA',\n    onMouseLeave: e => e.target.style.color = 'var(--accent-blue)'\n  }, \"Forgot password?\")), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    style: {\n      background: isLoading ? '#9CA3AF' : 'var(--accent-purple)',\n      color: '#FFFFFF',\n      border: 'none',\n      borderRadius: 'clamp(0.75rem, 2.5vw, 1rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      cursor: isLoading ? 'not-allowed' : 'pointer',\n      transition: 'all 0.3s ease',\n      width: '100%',\n      marginTop: 'clamp(0.25rem, 1vw, 0.5rem)',\n      opacity: isLoading ? 0.7 : 1\n    },\n    onMouseEnter: e => {\n      if (!isLoading) {\n        e.target.style.background = '#9333EA';\n        e.target.style.transform = 'translateY(-1px)';\n        e.target.style.boxShadow = '0 8px 20px rgba(122, 70, 236, 0.3)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isLoading) {\n        e.target.style.background = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    }\n  }, isLoading ? 'Logging In...' : 'Log In')), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      marginTop: 'clamp(1rem, 3vw, 1.25rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      marginBottom: 'clamp(0.75rem, 2vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      inset: 0,\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '1px',\n      background: 'var(--border-color)'\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      padding: '0 clamp(0.375rem, 1.5vw, 0.75rem)',\n      background: 'var(--auth-container-bg)',\n      color: 'var(--text-secondary)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Or continue with\"))), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleGoogleSignInClick,\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      background: 'var(--bg-secondary)',\n      color: 'var(--text-primary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.75rem, 2.5vw, 1rem)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontWeight: '500',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      cursor: 'pointer',\n      transition: 'all 0.3s ease',\n      gap: 'clamp(0.375rem, 1vw, 0.5rem)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.transform = 'translateY(-1px)';\n      e.target.style.boxShadow = '0 5px 15px var(--shadow)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--bg-secondary)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    }\n  }, /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    style: {\n      flexShrink: 0\n    }\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#4285F4\",\n    d: \"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#34A853\",\n    d: \"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#FBBC05\",\n    d: \"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#EA4335\",\n    d: \"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n  })), \"Continue with Google\")), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      marginTop: 'clamp(1rem, 3vw, 1.25rem)',\n      textAlign: 'center',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Don't have an account?\", ' ', /*#__PURE__*/react.createElement(Link, {\n    to: \"/signup\",\n    style: {\n      color: 'var(--accent-blue)',\n      textDecoration: 'none',\n      transition: 'color 0.3s ease'\n    },\n    onMouseEnter: e => e.target.style.color = '#60A5FA',\n    onMouseLeave: e => e.target.style.color = 'var(--accent-blue)'\n  }, \"Sign up\"))));\n};\n/* harmony default export */ const pages_Login = (Login);\n;// ./src/pages/SignUp.js\nfunction SignUp_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction SignUp_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? SignUp_ownKeys(Object(t), !0).forEach(function (r) { SignUp_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : SignUp_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction SignUp_defineProperty(e, r, t) { return (r = SignUp_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction SignUp_toPropertyKey(t) { var i = SignUp_toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction SignUp_toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\nconst SignUp = () => {\n  const {\n    register\n  } = store_useStore();\n  const [formData, setFormData] = (0,react.useState)({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [showPassword, setShowPassword] = (0,react.useState)(false);\n  const [showConfirmPassword, setShowConfirmPassword] = (0,react.useState)(false);\n  const [passwordStrength, setPasswordStrength] = (0,react.useState)({\n    hasUpper: false,\n    hasLower: false,\n    hasNumber: false,\n    hasSpecial: false,\n    minLength: false\n  });\n  const [isLoading, setIsLoading] = (0,react.useState)(false);\n  const [error, setError] = (0,react.useState)('');\n  const navigate = dist_useNavigate();\n\n  // Initialize Google Sign-In\n  (0,react.useEffect)(() => {\n    const initializeGoogleSignIn = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: 'YOUR_GOOGLE_CLIENT_ID',\n          // Replace with your actual client ID\n          callback: handleGoogleSignIn,\n          auto_select: false,\n          cancel_on_tap_outside: true\n        });\n      }\n    };\n\n    // Wait for Google script to load\n    const checkGoogle = setInterval(() => {\n      if (window.google) {\n        clearInterval(checkGoogle);\n        initializeGoogleSignIn();\n      }\n    }, 100);\n    return () => clearInterval(checkGoogle);\n  }, []);\n  const handleGoogleSignIn = response => {\n    try {\n      // Decode the JWT token (in a real app, you'd verify this on your backend)\n      const payload = JSON.parse(atob(response.credential.split('.')[1]));\n      console.log('Google Sign-Up successful:', payload);\n\n      // Split full name into first and last name\n      const nameParts = payload.name.split(' ');\n      const firstName = nameParts[0] || '';\n      const lastName = nameParts.slice(1).join(' ') || '';\n\n      // Store user info (in a real app, you'd send this to your backend)\n      localStorage.setItem('user', JSON.stringify({\n        firstName: firstName,\n        lastName: lastName,\n        fullName: payload.name,\n        email: payload.email,\n        picture: payload.picture,\n        provider: 'google'\n      }));\n\n      // Navigate to home page\n      navigate('/');\n    } catch (error) {\n      console.error('Google Sign-Up error:', error);\n      alert('Google Sign-Up failed. Please try again.');\n    }\n  };\n  const handleGoogleSignInClick = () => {\n    if (window.google) {\n      window.google.accounts.id.prompt();\n    } else {\n      alert('Google Sign-In is not available. Please refresh the page and try again.');\n    }\n  };\n  const checkPasswordStrength = password => {\n    setPasswordStrength({\n      hasUpper: /[A-Z]/.test(password),\n      hasLower: /[a-z]/.test(password),\n      hasNumber: /\\d/.test(password),\n      hasSpecial: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\n      minLength: password.length >= 8\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => SignUp_objectSpread(SignUp_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n    if (name === 'password') {\n      checkPasswordStrength(value);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    try {\n      // Basic validation\n      if (!formData.firstName.trim() || !formData.lastName.trim()) {\n        setError('Please enter both first and last name!');\n        return;\n      }\n      if (formData.password !== formData.confirmPassword) {\n        setError('Passwords do not match!');\n        return;\n      }\n\n      // Check password strength\n      const isStrongPassword = Object.values(passwordStrength).every(Boolean);\n      if (!isStrongPassword) {\n        setError('Password must meet all requirements!');\n        return;\n      }\n\n      // Register with backend\n      const userData = {\n        firstName: formData.firstName.trim(),\n        lastName: formData.lastName.trim(),\n        email: formData.email.trim(),\n        password: formData.password\n      };\n      await register(userData);\n\n      // Registration successful, redirect to home\n      navigate('/');\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError(error.message || 'Registration failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getPasswordStrengthColor = () => {\n    const strengthCount = Object.values(passwordStrength).filter(Boolean).length;\n    if (strengthCount <= 2) return '#EF4444'; // Red\n    if (strengthCount <= 3) return '#F59E0B'; // Orange\n    if (strengthCount <= 4) return '#10B981'; // Green\n    return '#059669'; // Dark Green\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg-primary)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 'clamp(1rem, 3vw, 2rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: 'var(--auth-container-bg)',\n      borderRadius: 'clamp(1rem, 3vw, 1.5rem)',\n      padding: 'clamp(2rem, 4vw, 3rem)',\n      width: '100%',\n      maxWidth: '400px',\n      boxShadow: '0 10px 25px var(--shadow)',\n      border: '1px solid var(--border-color)'\n    }\n  }, /*#__PURE__*/react.createElement(\"h1\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1.25rem, 3.5vw, 1.75rem)',\n      fontWeight: '700',\n      textAlign: 'center',\n      marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Create an Account\"), error && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: '#FEF2F2',\n      border: '1px solid #FECACA',\n      color: '#DC2626',\n      padding: '0.75rem',\n      borderRadius: '0.5rem',\n      marginBottom: '1rem',\n      fontSize: '0.875rem',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, error), /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 'clamp(0.75rem, 2.5vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: 'clamp(0.5rem, 1.5vw, 0.75rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      flex: 1\n    }\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"First Name\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    value: formData.firstName,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"First name\",\n    required: true\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      flex: 1\n    }\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Last Name\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    value: formData.lastName,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"Last name\",\n    required: true\n  }))), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Email\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: formData.email,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"Enter your email\",\n    required: true\n  })), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Password\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: showPassword ? 'text' : 'password',\n    name: \"password\",\n    value: formData.password,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      paddingRight: 'clamp(2rem, 4vw, 2.5rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"Enter your password\",\n    required: true\n  }), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setShowPassword(!showPassword),\n    style: {\n      position: 'absolute',\n      right: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      background: 'none',\n      border: 'none',\n      color: 'var(--text-secondary)',\n      cursor: 'pointer',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      transition: 'color 0.3s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onMouseEnter: e => e.target.style.color = 'var(--text-primary)',\n    onMouseLeave: e => e.target.style.color = 'var(--text-secondary)'\n  }, showPassword ? /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"\n  }), /*#__PURE__*/react.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  })) : /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n  }), /*#__PURE__*/react.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  })))), formData.password && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      marginTop: '0.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.25rem',\n      marginBottom: '0.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      height: '4px',\n      background: getPasswordStrengthColor(),\n      borderRadius: '2px',\n      transition: 'all 0.3s ease',\n      flex: '1'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: getPasswordStrengthColor(),\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontWeight: '600',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, Object.values(passwordStrength).filter(Boolean).length, \"/5\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr',\n      gap: '0.25rem',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.minLength ? '#10B981' : '#6B7280'\n    }\n  }, passwordStrength.minLength ? '✓' : '○'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.minLength ? '#10B981' : '#6B7280'\n    }\n  }, \"8+ characters\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasUpper ? '#10B981' : '#6B7280'\n    }\n  }, passwordStrength.hasUpper ? '✓' : '○'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasUpper ? '#10B981' : '#6B7280'\n    }\n  }, \"Uppercase\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasLower ? '#10B981' : '#6B7280'\n    }\n  }, passwordStrength.hasLower ? '✓' : '○'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasLower ? '#10B981' : '#6B7280'\n    }\n  }, \"Lowercase\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasNumber ? '#10B981' : '#6B7280'\n    }\n  }, passwordStrength.hasNumber ? '✓' : '○'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasNumber ? '#10B981' : '#6B7280'\n    }\n  }, \"Number\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.25rem',\n      gridColumn: '1 / -1'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasSpecial ? '#10B981' : '#6B7280'\n    }\n  }, passwordStrength.hasSpecial ? '✓' : '○'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: passwordStrength.hasSpecial ? '#10B981' : '#6B7280'\n    }\n  }, \"Special character\"))))), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      color: 'var(--accent-purple)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      marginBottom: '0.375rem',\n      display: 'block',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: showConfirmPassword ? 'text' : 'password',\n    name: \"confirmPassword\",\n    value: formData.confirmPassword,\n    onChange: handleChange,\n    style: {\n      width: '100%',\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.375rem, 1.5vw, 0.5rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      paddingRight: 'clamp(2rem, 4vw, 2.5rem)',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      outline: 'none',\n      transition: 'all 0.3s ease'\n    },\n    onFocus: e => e.target.style.borderColor = 'var(--accent-purple)',\n    onBlur: e => e.target.style.borderColor = 'var(--border-color)',\n    placeholder: \"Confirm your password\",\n    required: true\n  }), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setShowConfirmPassword(!showConfirmPassword),\n    style: {\n      position: 'absolute',\n      right: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      background: 'none',\n      border: 'none',\n      color: 'var(--text-secondary)',\n      cursor: 'pointer',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      transition: 'color 0.3s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onMouseEnter: e => e.target.style.color = 'var(--text-primary)',\n    onMouseLeave: e => e.target.style.color = 'var(--text-secondary)'\n  }, showConfirmPassword ? /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"\n  }), /*#__PURE__*/react.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  })) : /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n  }), /*#__PURE__*/react.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  }))))), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    style: {\n      background: isLoading ? '#9CA3AF' : 'var(--accent-purple)',\n      color: '#FFFFFF',\n      border: 'none',\n      borderRadius: 'clamp(0.75rem, 2.5vw, 1rem)',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',\n      fontWeight: '600',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      cursor: isLoading ? 'not-allowed' : 'pointer',\n      transition: 'all 0.3s ease',\n      width: '100%',\n      marginTop: 'clamp(0.25rem, 1vw, 0.5rem)',\n      opacity: isLoading ? 0.7 : 1\n    },\n    onMouseEnter: e => {\n      if (!isLoading) {\n        e.target.style.background = '#9333EA';\n        e.target.style.transform = 'translateY(-1px)';\n        e.target.style.boxShadow = '0 8px 20px rgba(122, 70, 236, 0.3)';\n      }\n    },\n    onMouseLeave: e => {\n      if (!isLoading) {\n        e.target.style.background = 'var(--accent-purple)';\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    }\n  }, isLoading ? 'Creating Account...' : 'Create Account')), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      marginTop: 'clamp(1rem, 3vw, 1.25rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      marginBottom: 'clamp(0.75rem, 2vw, 1rem)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      inset: 0,\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '1px',\n      background: 'var(--border-color)'\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      padding: '0 clamp(0.375rem, 1.5vw, 0.75rem)',\n      background: 'var(--auth-container-bg)',\n      color: 'var(--text-secondary)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Or continue with\"))), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleGoogleSignInClick,\n    style: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 'clamp(0.625rem, 2vw, 0.75rem)',\n      background: 'var(--bg-secondary)',\n      color: 'var(--text-primary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: 'clamp(0.75rem, 2.5vw, 1rem)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontWeight: '500',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      cursor: 'pointer',\n      transition: 'all 0.3s ease',\n      gap: 'clamp(0.375rem, 1vw, 0.5rem)'\n    },\n    onMouseEnter: e => {\n      e.target.style.background = 'var(--bg-tertiary)';\n      e.target.style.transform = 'translateY(-1px)';\n      e.target.style.boxShadow = '0 5px 15px var(--shadow)';\n    },\n    onMouseLeave: e => {\n      e.target.style.background = 'var(--bg-secondary)';\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    }\n  }, /*#__PURE__*/react.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 24 24\",\n    style: {\n      flexShrink: 0\n    }\n  }, /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#4285F4\",\n    d: \"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#34A853\",\n    d: \"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#FBBC05\",\n    d: \"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    fill: \"#EA4335\",\n    d: \"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n  })), \"Continue with Google\")), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      marginTop: 'clamp(1rem, 3vw, 1.25rem)',\n      textAlign: 'center',\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.625rem, 1.5vw, 0.75rem)',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, \"Already have an account?\", ' ', /*#__PURE__*/react.createElement(Link, {\n    to: \"/login\",\n    style: {\n      color: 'var(--accent-blue)',\n      textDecoration: 'none',\n      transition: 'color 0.3s ease'\n    },\n    onMouseEnter: e => e.target.style.color = '#60A5FA',\n    onMouseLeave: e => e.target.style.color = 'var(--accent-blue)'\n  }, \"Log in\"))));\n};\n/* harmony default export */ const pages_SignUp = (SignUp);\n;// ./node_modules/lucide-react/dist/esm/icons/trending-up.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst trending_up_iconNode = [\n  [\"path\", { d: \"M16 7h6v6\", key: \"box55l\" }],\n  [\"path\", { d: \"m22 7-8.5 8.5-5-5L2 17\", key: \"1t1m79\" }]\n];\nconst TrendingUp = createLucideIcon(\"trending-up\", trending_up_iconNode);\n\n\n//# sourceMappingURL=trending-up.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/arrow-up.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst arrow_up_iconNode = [\n  [\"path\", { d: \"m5 12 7-7 7 7\", key: \"hav0vg\" }],\n  [\"path\", { d: \"M12 19V5\", key: \"x0mq9r\" }]\n];\nconst ArrowUp = createLucideIcon(\"arrow-up\", arrow_up_iconNode);\n\n\n//# sourceMappingURL=arrow-up.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/arrow-down.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst arrow_down_iconNode = [\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }],\n  [\"path\", { d: \"m19 12-7 7-7-7\", key: \"1idqje\" }]\n];\nconst ArrowDown = createLucideIcon(\"arrow-down\", arrow_down_iconNode);\n\n\n//# sourceMappingURL=arrow-down.js.map\n\n;// ./src/pages/Wallet.js\n\n\n\nconst WalletComponent = () => {\n  const {\n    isAuthenticated,\n    user,\n    balance,\n    transactions\n  } = store_useStore();\n  const [currency, setCurrency] = (0,react.useState)('USDT');\n  const [displayBalance, setDisplayBalance] = (0,react.useState)(balance);\n\n  // Exchange rates (simulated for demonstration)\n  const exchangeRates = {\n    'USDT': 1,\n    'USD': 1,\n    'EUR': 0.92,\n    'NGN': 1500\n  };\n\n  // Apply light theme on mount (theme toggle hidden)\n  (0,react.useEffect)(() => {\n    document.documentElement.setAttribute('data-theme', 'light');\n  }, []);\n\n  // Redirect to login if not authenticated\n  (0,react.useEffect)(() => {\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n    }\n  }, [isAuthenticated]);\n  (0,react.useEffect)(() => {\n    // Update balance when currency changes\n    const baseBalanceUSDT = balance;\n    const newBalance = baseBalanceUSDT * exchangeRates[currency];\n    setDisplayBalance(newBalance);\n  }, [currency, balance]);\n\n  // Convert store transactions to display format\n  const displayTransactions = react.useMemo(() => {\n    return transactions.map(t => ({\n      type: t.type === 'BET' ? 'Bet' : t.type === 'WIN' ? 'Winning' : t.type,\n      time: new Date(t.timestamp).toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: true\n      }),\n      amount: t.amount,\n      status: t.status || 'Completed'\n    }));\n  }, [transactions]);\n  const getCurrencySymbol = code => {\n    switch (code) {\n      case 'USDT':\n        return '₮';\n      case 'EUR':\n        return '€';\n      case 'NGN':\n        return '₦';\n      default:\n        return '$';\n    }\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"wallet-container\"\n  }, /*#__PURE__*/react.createElement(\"style\", null, \"\\n        /* Default Dark Theme Variables */\\n        :root {\\n          --bg-primary: linear-gradient(135deg, #0F0F23 0%, #1E1E38 100%);\\n          --bg-secondary: #1A1B2E;\\n          --bg-tertiary: #252640;\\n          --text-primary: #F8FAFC;\\n          --text-secondary: #94A3B8;\\n          --border-color: rgba(248, 250, 252, 0.08);\\n          --accent-purple: #8B5CF6;\\n          --accent-green: #22C55E;\\n          --accent-blue: #3B82F6;\\n          --accent-red: #EF4444;\\n          --accent-gold: #F59E0B;\\n          --card-bg: rgba(26, 27, 46, 0.95);\\n          --shadow: rgba(0, 0, 0, 0.3);\\n          --glass-bg: rgba(26, 27, 46, 0.8);\\n          --glass-border: rgba(248, 250, 252, 0.1);\\n          --hover-bg: rgba(37, 38, 64, 0.7);\\n        }\\n        \\n        /* Light Theme Override */\\n        [data-theme=\\\"light\\\"] {\\n          --bg-primary: linear-gradient(135deg, #FAFBFC 0%, #F4F6F8 100%);\\n          --bg-secondary: #FFFFFF;\\n          --bg-tertiary: #F8FAFC;\\n          --text-primary: #0F172A;\\n          --text-secondary: #475569;\\n          --border-color: rgba(15, 23, 42, 0.08);\\n          --card-bg: rgba(255, 255, 255, 0.95);\\n          --shadow: rgba(15, 23, 42, 0.1);\\n          --glass-bg: rgba(255, 255, 255, 0.8);\\n          --glass-border: rgba(15, 23, 42, 0.1);\\n          --hover-bg: rgba(248, 250, 252, 0.7);\\n        }\\n\\n        body {\\n          margin: 0;\\n          font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\\n          -webkit-font-smoothing: antialiased;\\n          -moz-osx-font-smoothing: grayscale;\\n          transition: all 0.3s ease;\\n          background: var(--bg-primary);\\n          color: var(--text-primary);\\n        }\\n\\n        .wallet-container {\\n          min-height: 100vh;\\n          background: var(--bg-primary);\\n          transition: background 0.3s ease-in-out;\\n        }\\n\\n        .wallet-content {\\n          max-width: 960px;\\n          margin: 0 auto;\\n          padding: 3rem 1.5rem;\\n        }\\n\\n        .wallet-header {\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n          margin-bottom: 2.5rem;\\n        }\\n\\n        .wallet-title {\\n          font-size: 1.875rem;\\n          line-height: 2.25rem;\\n          font-weight: bold;\\n          color: var(--text-primary);\\n          margin: 0;\\n        }\\n\\n        .balance-card {\\n          border-radius: 1.5rem;\\n          padding: 2.5rem;\\n          box-shadow: 0 8px 32px var(--shadow);\\n          margin-bottom: 2rem;\\n          background: linear-gradient(135deg, var(--accent-blue), var(--accent-purple));\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n        }\\n\\n        .balance-header {\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: flex-start;\\n          margin-bottom: 1rem;\\n        }\\n\\n        .balance-label {\\n          display: flex;\\n          align-items: center;\\n          gap: 0.5rem;\\n          color: white;\\n        }\\n\\n        .balance-label span {\\n          font-weight: 500;\\n          font-size: 1.125rem;\\n          opacity: 0.8;\\n        }\\n\\n        .currency-select {\\n          font-size: 0.875rem;\\n          background-color: transparent;\\n          border: none;\\n          color: white;\\n          cursor: pointer;\\n          outline: none;\\n          opacity: 0.8;\\n          border-radius: 0.5rem;\\n          padding: 0.25rem 0.5rem;\\n        }\\n\\n        .currency-select option {\\n          color: var(--text-primary);\\n          background: var(--card-bg);\\n        }\\n\\n        .balance-amount {\\n          display: flex;\\n          align-items: center;\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        .balance-amount span {\\n          font-size: 3rem;\\n          font-weight: 800;\\n          color: white;\\n        }\\n\\n        .balance-growth {\\n          display: flex;\\n          align-items: center;\\n          gap: 0.5rem;\\n        }\\n\\n        .balance-growth span {\\n          font-size: 0.875rem;\\n          color: #86EFAC;\\n          font-weight: 600;\\n        }\\n\\n        .quick-actions {\\n          display: grid;\\n          grid-template-columns: repeat(2, minmax(0, 1fr));\\n          gap: 1rem;\\n          margin-bottom: 2rem;\\n        }\\n\\n        .action-button {\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          gap: 0.75rem;\\n          padding: 1rem;\\n          background: var(--card-bg);\\n          border-radius: 0.75rem;\\n          border: 1px solid var(--glass-border);\\n          box-shadow: 0 8px 32px var(--shadow);\\n          transition: all 0.3s ease-in-out;\\n          cursor: pointer;\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n        }\\n\\n        .action-button:hover {\\n          transform: scale(1.05);\\n          box-shadow: 0 12px 48px var(--shadow);\\n          background: var(--hover-bg);\\n        }\\n\\n        .action-button span {\\n          font-weight: 600;\\n          font-size: 1rem;\\n          color: var(--text-primary);\\n        }\\n\\n        .transactions-card {\\n          border-radius: 0.75rem;\\n          background: var(--card-bg);\\n          box-shadow: 0 8px 32px var(--shadow);\\n          border: 1px solid var(--glass-border);\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n        }\\n\\n        .transactions-header {\\n          padding: 1.25rem;\\n          display: flex;\\n          justify-content: space-between;\\n          align-items: center;\\n          border-bottom: 1px solid var(--border-color);\\n        }\\n\\n        .transactions-title {\\n          font-weight: 600;\\n          font-size: 1.25rem;\\n          color: var(--text-primary);\\n          margin: 0;\\n        }\\n\\n        .filter-buttons {\\n          display: flex;\\n          gap: 0.5rem;\\n        }\\n\\n        .filter-button {\\n          font-size: 0.875rem;\\n          padding: 0.25rem 0.75rem;\\n          border-radius: 9999px;\\n          color: var(--text-secondary);\\n          font-weight: 400;\\n          border: none;\\n          outline: none;\\n          cursor: pointer;\\n          background-color: transparent;\\n          transition: all 0.2s ease;\\n        }\\n\\n        .filter-button.active {\\n          font-weight: 600;\\n          border: 2px solid var(--border-color);\\n          color: var(--text-primary);\\n          background: var(--bg-tertiary);\\n        }\\n\\n        .filter-button:hover {\\n          background: var(--hover-bg);\\n          color: var(--text-primary);\\n        }\\n\\n        .transaction-item {\\n          padding: 1rem;\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          border-bottom: 1px solid var(--border-color);\\n          transition: background-color 0.2s ease-in-out;\\n        }\\n\\n        .transaction-item:last-child {\\n          border-bottom: none;\\n        }\\n\\n        .transaction-item:hover {\\n          background: var(--hover-bg);\\n        }\\n\\n        .transaction-left {\\n          display: flex;\\n          align-items: center;\\n          gap: 1rem;\\n        }\\n\\n        .transaction-icon {\\n          width: 2.5rem;\\n          height: 2.5rem;\\n          border-radius: 50%;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n        }\\n\\n        .transaction-icon.withdrawal {\\n          background: rgba(239, 68, 68, 0.1);\\n          color: var(--accent-red);\\n        }\\n\\n        .transaction-icon.deposit {\\n          background: rgba(34, 197, 94, 0.1);\\n          color: var(--accent-green);\\n        }\\n\\n        .transaction-details h4 {\\n          font-weight: 600;\\n          color: var(--text-primary);\\n          margin: 0;\\n        }\\n\\n        .transaction-details p {\\n          font-size: 0.875rem;\\n          color: var(--text-secondary);\\n          margin: 0;\\n        }\\n\\n        .transaction-right {\\n          text-align: right;\\n        }\\n\\n        .transaction-amount {\\n          font-weight: 600;\\n          font-size: 1.25rem;\\n          margin: 0;\\n        }\\n\\n        .transaction-amount.positive {\\n          color: var(--accent-green);\\n        }\\n\\n        .transaction-amount.negative {\\n          color: var(--accent-red);\\n        }\\n\\n        .transaction-status {\\n          font-size: 0.75rem;\\n          font-weight: 500;\\n          margin: 0;\\n        }\\n\\n        .transaction-status.completed {\\n          color: var(--accent-green);\\n        }\\n\\n        .transaction-status.pending {\\n          color: var(--accent-gold);\\n        }\\n\\n        .transaction-status.canceled {\\n          color: var(--accent-red);\\n        }\\n        \"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"wallet-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"wallet-header\"\n  }, /*#__PURE__*/react.createElement(\"h1\", {\n    className: \"wallet-title\"\n  }, \"Wallet\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"balance-card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"balance-header\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"balance-label\"\n  }, /*#__PURE__*/react.createElement(Wallet, {\n    size: 24,\n    style: {\n      color: 'rgba(255, 255, 255, 0.8)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", null, \"Total Balance\")), /*#__PURE__*/react.createElement(\"select\", {\n    value: currency,\n    onChange: e => setCurrency(e.target.value),\n    className: \"currency-select\"\n  }, /*#__PURE__*/react.createElement(\"option\", {\n    value: \"USDT\"\n  }, \"USDT\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"USD\"\n  }, \"USD\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"EUR\"\n  }, \"EUR\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"NGN\"\n  }, \"NGN\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"balance-amount\"\n  }, /*#__PURE__*/react.createElement(\"span\", null, getCurrencySymbol(currency), displayBalance.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"balance-growth\"\n  }, /*#__PURE__*/react.createElement(TrendingUp, {\n    size: 18,\n    style: {\n      color: '#86EFAC'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", null, \"Real-time balance\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"quick-actions\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"action-button\"\n  }, /*#__PURE__*/react.createElement(ArrowUp, {\n    style: {\n      width: '1.5rem',\n      height: '1.5rem',\n      color: 'var(--accent-green)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", null, \"Deposit\")), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"action-button\"\n  }, /*#__PURE__*/react.createElement(ArrowDown, {\n    style: {\n      width: '1.5rem',\n      height: '1.5rem',\n      color: 'var(--accent-red)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", null, \"Withdrawal\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"transactions-card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"transactions-header\"\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    className: \"transactions-title\"\n  }, \"Recent Transactions\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"filter-buttons\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"filter-button active\"\n  }, \"Today\"), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"filter-button\"\n  }, \"This Week\"), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"filter-button\"\n  }, \"This Month\"))), /*#__PURE__*/react.createElement(\"div\", null, displayTransactions.map((transaction, index) => /*#__PURE__*/react.createElement(\"div\", {\n    key: index,\n    className: \"transaction-item\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"transaction-left\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"transaction-icon \".concat(transaction.amount < 0 ? 'withdrawal' : 'deposit')\n  }, transaction.amount < 0 ? /*#__PURE__*/react.createElement(ArrowDown, {\n    size: 20\n  }) : /*#__PURE__*/react.createElement(ArrowUp, {\n    size: 20\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"transaction-details\"\n  }, /*#__PURE__*/react.createElement(\"h4\", null, transaction.type), /*#__PURE__*/react.createElement(\"p\", null, transaction.time))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"transaction-right\"\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    className: \"transaction-amount \".concat(transaction.amount > 0 ? 'positive' : 'negative')\n  }, transaction.amount > 0 ? '+' : '', getCurrencySymbol(currency), Math.abs(transaction.amount * exchangeRates[currency]).toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })), /*#__PURE__*/react.createElement(\"p\", {\n    className: \"transaction-status \".concat(transaction.status.toLowerCase())\n  }, transaction.status))))))));\n};\n/* harmony default export */ const pages_Wallet = (WalletComponent);\n;// ./node_modules/lucide-react/dist/esm/icons/trending-down.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst trending_down_iconNode = [\n  [\"path\", { d: \"M16 17h6v-6\", key: \"t6n2it\" }],\n  [\"path\", { d: \"m22 17-8.5-8.5-5 5L2 7\", key: \"x473p\" }]\n];\nconst TrendingDown = createLucideIcon(\"trending-down\", trending_down_iconNode);\n\n\n//# sourceMappingURL=trending-down.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/clock.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst clock_iconNode = [\n  [\"path\", { d: \"M12 6v6l4 2\", key: \"mmk7yg\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]\n];\nconst Clock = createLucideIcon(\"clock\", clock_iconNode);\n\n\n//# sourceMappingURL=clock.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/activity.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst activity_iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2\",\n      key: \"169zse\"\n    }\n  ]\n];\nconst Activity = createLucideIcon(\"activity\", activity_iconNode);\n\n\n//# sourceMappingURL=activity.js.map\n\n;// ./src/components/LineChart.js\n\n\n// Responsive, smoother line chart with gradient fill & external data + tooltip support\n// Props:\n//  data: [{ t: number (ms), price: number }]\n//  height: px\n//  loading: boolean\n//  source: 'live' | 'mock'\n//  interval: string (for future formatting)\nconst LineChart = _ref => {\n  let {\n    data = [],\n    height = 340,\n    loading = false,\n    source = 'live',\n    interval\n  } = _ref;\n  const [hover, setHover] = (0,react.useState)(null); // {x,y, price, t, idx}\n\n  const {\n    min,\n    max\n  } = (0,react.useMemo)(() => {\n    if (!data.length) return {\n      min: 0,\n      max: 0\n    };\n    let min = data[0].price,\n      max = data[0].price;\n    data.forEach(d => {\n      if (d.price < min) min = d.price;\n      if (d.price > max) max = d.price;\n    });\n    if (min === max) {\n      max = min + 1;\n    }\n    return {\n      min,\n      max\n    };\n  }, [data]);\n  const path = (0,react.useMemo)(() => {\n    if (data.length < 2) return '';\n    const w = 1000; // viewBox width logical units\n    const h = 300; // viewBox height logical units\n    const pad = 20;\n    const range = max - min;\n    const normY = price => pad + (1 - (price - min) / range) * (h - 2 * pad);\n    const normX = idx => pad + idx / (data.length - 1) * (w - 2 * pad);\n    let d = '';\n    data.forEach((pt, i) => {\n      const x = normX(i);\n      const y = normY(pt.price);\n      if (i === 0) d += \"M \".concat(x, \" \").concat(y);else d += \" L \".concat(x, \" \").concat(y);\n    });\n\n    // Smooth using simple quadratic commands\n    const smooth = () => {\n      if (data.length < 3) return d;\n      let s = '';\n      for (let i = 0; i < data.length; i++) {\n        const x = normX(i);\n        const y = normY(data[i].price);\n        if (i === 0) s += \"M \".concat(x, \" \").concat(y);else if (i < data.length - 1) {\n          const nx = normX(i + 1);\n          const ny = normY(data[i + 1].price);\n          const cx = (x + nx) / 2;\n          const cy = (y + ny) / 2;\n          s += \" Q \".concat(x, \" \").concat(y, \" \").concat(cx, \" \").concat(cy);\n        }\n      }\n      // Ensure last point\n      const lx = normX(data.length - 1);\n      const ly = normY(data[data.length - 1].price);\n      s += \" L \".concat(lx, \" \").concat(ly);\n      return s;\n    };\n    return smooth();\n  }, [data, min, max]);\n  const handleMove = (0,react.useCallback)(e => {\n    if (!data.length) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const relX = e.clientX - rect.left;\n    const w = rect.width;\n    // map to index\n    const idx = Math.min(data.length - 1, Math.max(0, Math.round(relX / w * (data.length - 1))));\n    const item = data[idx];\n    setHover({\n      idx,\n      price: item.price,\n      t: item.t\n    });\n  }, [data]);\n  const handleLeave = () => setHover(null);\n  const priceToY = price => {\n    const h = 300;\n    const pad = 20;\n    const range = max - min;\n    return pad + (1 - (price - min) / range) * (h - 2 * pad);\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: height,\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"svg\", {\n    viewBox: \"0 0 1000 300\",\n    preserveAspectRatio: \"none\",\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, /*#__PURE__*/react.createElement(\"defs\", null, /*#__PURE__*/react.createElement(\"linearGradient\", {\n    id: \"lineGradient\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\"\n  }, /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"#10B981\",\n    stopOpacity: \"0.6\"\n  }), /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#10B981\",\n    stopOpacity: \"0\"\n  })), /*#__PURE__*/react.createElement(\"linearGradient\", {\n    id: \"strokeGradient\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"1\",\n    y2: \"0\"\n  }, /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"#10B981\"\n  }), /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#3B82F6\"\n  }))), /*#__PURE__*/react.createElement(\"g\", {\n    opacity: \"0.25\"\n  }, [...Array(10)].map((_, i) => /*#__PURE__*/react.createElement(\"line\", {\n    key: \"v\".concat(i),\n    x1: i * 1000 / 10,\n    y1: 0,\n    x2: i * 1000 / 10,\n    y2: 300,\n    stroke: \"var(--border-color)\",\n    strokeWidth: \"1\"\n  })), [...Array(6)].map((_, i) => /*#__PURE__*/react.createElement(\"line\", {\n    key: \"h\".concat(i),\n    x1: 0,\n    y1: i * 300 / 6,\n    x2: 1000,\n    y2: i * 300 / 6,\n    stroke: \"var(--border-color)\",\n    strokeWidth: \"1\"\n  }))), path && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"path\", {\n    d: path + ' L 980 300 L 20 300 Z',\n    fill: \"url(#lineGradient)\",\n    opacity: \"0.4\"\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    d: path,\n    fill: \"none\",\n    stroke: \"url(#strokeGradient)\",\n    strokeWidth: \"6\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\"\n  })), hover && data[hover.idx] && /*#__PURE__*/react.createElement(\"g\", null, /*#__PURE__*/react.createElement(\"line\", {\n    x1: hover.idx / (data.length - 1) * 960 + 20,\n    x2: hover.idx / (data.length - 1) * 960 + 20,\n    y1: 0,\n    y2: 300,\n    stroke: \"var(--accent-purple)\",\n    strokeDasharray: \"4 4\",\n    strokeWidth: \"2\",\n    opacity: \"0.6\"\n  }), /*#__PURE__*/react.createElement(\"circle\", {\n    cx: hover.idx / (data.length - 1) * 960 + 20,\n    cy: priceToY(data[hover.idx].price),\n    r: 8,\n    fill: \"var(--accent-purple)\",\n    opacity: \"0.25\"\n  }), /*#__PURE__*/react.createElement(\"circle\", {\n    cx: hover.idx / (data.length - 1) * 960 + 20,\n    cy: priceToY(data[hover.idx].price),\n    r: 4,\n    fill: \"var(--accent-purple)\"\n  })), /*#__PURE__*/react.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 1000,\n    height: 300,\n    fill: \"transparent\",\n    style: {\n      cursor: 'crosshair'\n    },\n    onMouseMove: handleMove,\n    onMouseLeave: handleLeave\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 4,\n      left: 8,\n      fontSize: 12,\n      color: 'var(--text-secondary)'\n    }\n  }, max.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: 4,\n      left: 8,\n      fontSize: 12,\n      color: 'var(--text-secondary)'\n    }\n  }, min.toFixed(2)), loading && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 8,\n      right: 12,\n      fontSize: 11,\n      color: 'var(--text-secondary)'\n    }\n  }, \"Loading\\u2026\"), source === 'mock' && !loading && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 8,\n      right: 12,\n      fontSize: 11,\n      color: 'var(--accent-gold)'\n    }\n  }, \"Simulated\"), hover && data[hover.idx] && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      left: \"calc(\".concat(hover.idx / (data.length - 1) * 100, \"% + 12px)\"),\n      top: 16,\n      background: 'var(--card-bg)',\n      border: '1px solid var(--glass-border)',\n      padding: '0.5rem 0.65rem',\n      borderRadius: '.5rem',\n      fontSize: '.65rem',\n      color: 'var(--text-primary)',\n      boxShadow: '0 4px 16px rgba(0,0,0,0.4)',\n      backdropFilter: 'blur(10px)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontWeight: 600\n    }\n  }, data[hover.idx].price.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, new Date(data[hover.idx].t).toLocaleTimeString())));\n};\n/* harmony default export */ const components_LineChart = (LineChart);\n;// ./src/components/CandlestickChart.js\nfunction CandlestickChart_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction CandlestickChart_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? CandlestickChart_ownKeys(Object(t), !0).forEach(function (r) { CandlestickChart_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : CandlestickChart_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction CandlestickChart_defineProperty(e, r, t) { return (r = CandlestickChart_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction CandlestickChart_toPropertyKey(t) { var i = CandlestickChart_toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction CandlestickChart_toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n// Candlestick chart with external candle data + volume bars + hover tooltip\n// Props:\n//  candles: [{ time, open, high, low, close, volume }]\n//  height\n//  loading, source\n//  interval\nconst CandlestickChart = _ref => {\n  let {\n    candles = [],\n    height = 340,\n    loading = false,\n    source = 'live',\n    interval\n  } = _ref;\n  const [hover, setHover] = (0,react.useState)(null); // { idx }\n\n  const data = candles.map(c => CandlestickChart_objectSpread(CandlestickChart_objectSpread({}, c), {}, {\n    bullish: c.close >= c.open\n  }));\n  const {\n    min,\n    max\n  } = (0,react.useMemo)(() => {\n    if (!data.length) return {\n      min: 0,\n      max: 0\n    };\n    let min = data[0].low,\n      max = data[0].high;\n    data.forEach(d => {\n      if (d.low < min) min = d.low;\n      if (d.high > max) max = d.high;\n    });\n    if (min === max) max = min + 1;\n    return {\n      min,\n      max\n    };\n  }, [data]);\n  const w = 1000;\n  const h = 300;\n  const padX = 20;\n  const padY = 10;\n  const range = max - min || 1;\n  const y = val => padY + (1 - (val - min) / range) * (h - 2 * padY);\n  const len = data.length;\n  const candleWidth = len > 0 ? (w - 2 * padX) / Math.max(1, len) * 0.6 : 0;\n  const maxVolume = (0,react.useMemo)(() => data.reduce((m, c) => c.volume && c.volume > m ? c.volume : m, 0) || 1, [data]);\n  const handleMove = (0,react.useCallback)(e => {\n    if (!data.length) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const relX = e.clientX - rect.left;\n    const idx = Math.min(data.length - 1, Math.max(0, Math.round(relX / rect.width * (data.length - 1))));\n    setHover({\n      idx\n    });\n  }, [data]);\n  const handleLeave = () => setHover(null);\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height,\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"svg\", {\n    viewBox: \"0 0 1000 300\",\n    preserveAspectRatio: \"none\",\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, /*#__PURE__*/react.createElement(\"defs\", null, /*#__PURE__*/react.createElement(\"linearGradient\", {\n    id: \"bullGradient\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\"\n  }, /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"#16A34A\"\n  }), /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#10B981\"\n  })), /*#__PURE__*/react.createElement(\"linearGradient\", {\n    id: \"bearGradient\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\"\n  }, /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"#DC2626\"\n  }), /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"#EF4444\"\n  })), /*#__PURE__*/react.createElement(\"linearGradient\", {\n    id: \"volGradient\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\"\n  }, /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"rgba(139,92,246,0.6)\"\n  }), /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"rgba(139,92,246,0.05)\"\n  }))), /*#__PURE__*/react.createElement(\"g\", {\n    opacity: \"0.25\"\n  }, [...Array(10)].map((_, i) => /*#__PURE__*/react.createElement(\"line\", {\n    key: \"v\".concat(i),\n    x1: i * w / 10,\n    y1: 0,\n    x2: i * w / 10,\n    y2: h,\n    stroke: \"var(--border-color)\",\n    strokeWidth: \"1\"\n  })), [...Array(6)].map((_, i) => /*#__PURE__*/react.createElement(\"line\", {\n    key: \"h\".concat(i),\n    x1: 0,\n    y1: i * h / 6,\n    x2: w,\n    y2: i * h / 6,\n    stroke: \"var(--border-color)\",\n    strokeWidth: \"1\"\n  }))), len === 0 && /*#__PURE__*/react.createElement(\"g\", null, /*#__PURE__*/react.createElement(\"text\", {\n    x: \"500\",\n    y: \"150\",\n    textAnchor: \"middle\",\n    fill: \"var(--text-secondary)\",\n    fontSize: \"32\",\n    fontWeight: \"600\"\n  }, \"No Data\")), len > 0 && /*#__PURE__*/react.createElement(react.Fragment, null, data.map((c, i) => {\n    const positionRatio = len === 1 ? 0.5 : i / (len - 1);\n    const volHeight = c.volume / maxVolume * 60; // 60px tall area\n    const x = padX + positionRatio * (w - 2 * padX) - candleWidth / 2;\n    return /*#__PURE__*/react.createElement(\"rect\", {\n      key: \"vol-\".concat(i),\n      x: x,\n      y: 300 - volHeight,\n      width: candleWidth,\n      height: volHeight,\n      fill: \"url(#volGradient)\",\n      opacity: 0.5\n    });\n  }), data.map((c, i) => {\n    const positionRatio = len === 1 ? 0.5 : i / (len - 1);\n    const cx = padX + positionRatio * (w - 2 * padX);\n    const color = c.bullish ? 'url(#bullGradient)' : 'url(#bearGradient)';\n    const wickColor = c.bullish ? '#16A34A' : '#EF4444';\n    const openY = y(c.open);\n    const closeY = y(c.close);\n    const highY = y(c.high);\n    const lowY = y(c.low);\n    const bodyTop = Math.min(openY, closeY);\n    const bodyHeight = Math.max(2, Math.abs(openY - closeY));\n    return /*#__PURE__*/react.createElement(\"g\", {\n      key: i\n    }, /*#__PURE__*/react.createElement(\"line\", {\n      x1: cx,\n      x2: cx,\n      y1: highY,\n      y2: lowY,\n      stroke: wickColor,\n      strokeWidth: 2\n    }), /*#__PURE__*/react.createElement(\"rect\", {\n      x: cx - candleWidth / 2,\n      y: bodyTop,\n      width: candleWidth,\n      height: bodyHeight,\n      fill: color,\n      rx: 2\n    }));\n  }), hover && data[hover.idx] && /*#__PURE__*/react.createElement(\"g\", null, /*#__PURE__*/react.createElement(\"line\", {\n    x1: padX + (len === 1 ? 0.5 : hover.idx / (len - 1)) * (w - 2 * padX),\n    x2: padX + (len === 1 ? 0.5 : hover.idx / (len - 1)) * (w - 2 * padX),\n    y1: 0,\n    y2: 300,\n    stroke: \"var(--accent-purple)\",\n    strokeDasharray: \"4 4\",\n    strokeWidth: 2,\n    opacity: 0.6\n  })), /*#__PURE__*/react.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 1000,\n    height: 300,\n    fill: \"transparent\",\n    style: {\n      cursor: 'crosshair'\n    },\n    onMouseMove: handleMove,\n    onMouseLeave: handleLeave\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 4,\n      left: 8,\n      fontSize: 12,\n      color: 'var(--text-secondary)'\n    }\n  }, max.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: 4,\n      left: 8,\n      fontSize: 12,\n      color: 'var(--text-secondary)'\n    }\n  }, min.toFixed(2)), loading && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 8,\n      right: 12,\n      fontSize: 11,\n      color: 'var(--text-secondary)'\n    }\n  }, \"Loading\\u2026\"), source === 'mock' && !loading && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 8,\n      right: 12,\n      fontSize: 11,\n      color: 'var(--accent-gold)'\n    }\n  }, \"Simulated\"), hover && data[hover.idx] && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      left: \"calc(\".concat(hover.idx / (data.length - 1) * 100, \"% + 12px)\"),\n      top: 16,\n      background: 'var(--card-bg)',\n      border: '1px solid var(--glass-border)',\n      padding: '0.55rem 0.7rem',\n      borderRadius: '.55rem',\n      fontSize: '.65rem',\n      color: 'var(--text-primary)',\n      boxShadow: '0 4px 16px rgba(0,0,0,0.4)',\n      backdropFilter: 'blur(10px)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontWeight: 600\n    }\n  }, \"O\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontWeight: 600\n    }\n  }, \"H\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontWeight: 600\n    }\n  }, \"L\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontWeight: 600\n    }\n  }, \"C\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontWeight: 600\n    }\n  }, \"Vol\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", null, data[hover.idx].open.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", null, data[hover.idx].high.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", null, data[hover.idx].low.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", null, data[hover.idx].close.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", null, (data[hover.idx].volume || 0).toFixed(2)))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      marginTop: '.35rem',\n      color: 'var(--text-secondary)'\n    }\n  }, new Date(data[hover.idx].time).toLocaleString())));\n};\n/* harmony default export */ const components_CandlestickChart = (CandlestickChart);\n;// ./src/hooks/useMarketData.js\n\n\n/*\r\n Hook: useMarketData\r\n Fetches Binance klines for BTCUSDT based on interval.\r\n Provides:\r\n  - candles: [{ open, high, low, close, volume, time }]\r\n  - line: [{ t, price }]\r\n  - loading, error, source ('live' | 'mock')\r\n  - refresh() manual trigger\r\n Fallback: If network fails or CORS blocked, generates mock walk data.\r\n*/\n\nconst BINANCE_ENDPOINT = 'https://api.binance.com/api/v3/klines';\nconst intervalToLimit = interval => {\n  switch (interval) {\n    case '1m':\n      return 120;\n    // last 2 hours\n    case '5m':\n      return 144;\n    // last 12 hours\n    case '15m':\n      return 96;\n    // last 24 hours\n    case '1h':\n      return 168;\n    // last 7 days\n    default:\n      return 120;\n  }\n};\nconst useMarketData = function () {\n  let interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '1m';\n  let symbol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'BTCUSDT';\n  const [candles, setCandles] = (0,react.useState)([]);\n  const [line, setLine] = (0,react.useState)([]);\n  const [loading, setLoading] = (0,react.useState)(true);\n  const [error, setError] = (0,react.useState)(null);\n  const [source, setSource] = (0,react.useState)('live');\n  const [wsConnected, setWsConnected] = (0,react.useState)(false);\n  const abortRef = (0,react.useRef)(null);\n  const wsRef = (0,react.useRef)(null);\n  const buildMock = () => {\n    const limit = intervalToLimit(interval);\n    let price = 50000 + Math.random() * 500 - 250;\n    const mock = [];\n    for (let i = limit - 1; i >= 0; i--) {\n      const open = price;\n      const jitter = price * 0.002 * (Math.random() - 0.5);\n      const close = Math.max(100, open + jitter);\n      const high = Math.max(open, close) + Math.random() * price * 0.001;\n      const low = Math.min(open, close) - Math.random() * price * 0.001;\n      const vol = (Math.random() * 15 + 5).toFixed(3);\n      price = close;\n      mock.push({\n        time: Date.now() - i * intervalMs(interval),\n        open,\n        high,\n        low,\n        close,\n        volume: parseFloat(vol)\n      });\n    }\n    setCandles(mock);\n    setLine(mock.map(c => ({\n      t: c.time,\n      price: c.close\n    })));\n    setSource('mock');\n  };\n  const intervalMs = intv => {\n    if (intv.endsWith('m')) return parseInt(intv) * 60 * 1000;\n    if (intv.endsWith('h')) return parseInt(intv) * 60 * 60 * 1000;\n    return 60 * 1000;\n  };\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    if (abortRef.current) abortRef.current.abort();\n    const controller = new AbortController();\n    abortRef.current = controller;\n    const limit = intervalToLimit(interval);\n    const params = new URLSearchParams({\n      symbol,\n      interval,\n      limit: String(limit)\n    });\n    try {\n      const resp = await fetch(\"\".concat(BINANCE_ENDPOINT, \"?\").concat(params.toString()), {\n        signal: controller.signal\n      });\n      if (!resp.ok) throw new Error(\"HTTP \".concat(resp.status));\n      const raw = await resp.json();\n      // raw format: [ openTime, open, high, low, close, volume, closeTime, ... ]\n      const parsed = raw.map(r => ({\n        time: r[0],\n        open: parseFloat(r[1]),\n        high: parseFloat(r[2]),\n        low: parseFloat(r[3]),\n        close: parseFloat(r[4]),\n        volume: parseFloat(r[5])\n      }));\n      setCandles(parsed);\n      setLine(parsed.map(c => ({\n        t: c.time,\n        price: c.close\n      })));\n      setSource('live');\n    } catch (e) {\n      console.warn('Market data fetch failed, using mock:', e.message);\n      setError(e.message);\n      buildMock();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // WebSocket setup for near real-time updates.\n  // Strategy:\n  // 1. Perform a full REST fetch on interval / symbol change to seed historical candles.\n  // 2. Open a kline stream and update (replace) the last candle while it's forming.\n  // 3. When the exchange rolls over to a new kline (kline start time differs), append it and trim to limit.\n  // 4. Poll occasionally as a reconciliation layer in case of missed WS frames.\n  // Source semantics:\n  //   source === 'live' => Data came from REST/WS.\n  //   source === 'mock' => Fallback synthetic series due to fetch failure (network / CORS / rate limit).\n  (0,react.useEffect)(() => {\n    // Refresh base data whenever interval or symbol changes\n    fetchData();\n\n    // Clear old websocket if any\n    if (wsRef.current) {\n      try {\n        wsRef.current.close();\n      } catch (_) {}\n    }\n\n    // Binance kline stream format: wss://stream.binance.com:9443/ws/{symbolLower}@kline_{interval}\n    const streamSymbol = symbol.toLowerCase();\n    const wsUrl = \"wss://stream.binance.com:9443/ws/\".concat(streamSymbol, \"@kline_\").concat(interval);\n    const ws = new WebSocket(wsUrl);\n    wsRef.current = ws;\n    ws.onopen = () => setWsConnected(true);\n    ws.onmessage = evt => {\n      try {\n        const msg = JSON.parse(evt.data);\n        if (!msg.k) return; // ensure kline payload\n        const k = msg.k; // kline data\n        const kline = {\n          time: k.t,\n          open: parseFloat(k.o),\n          high: parseFloat(k.h),\n          low: parseFloat(k.l),\n          close: parseFloat(k.c),\n          volume: parseFloat(k.v)\n        };\n        setCandles(prev => {\n          if (!prev.length) return [kline];\n          const last = prev[prev.length - 1];\n          // If same open time, replace (updating forming candle)\n          if (last.time === kline.time) {\n            const updated = [...prev.slice(0, -1), kline];\n            setLine(updated.map(c => ({\n              t: c.time,\n              price: c.close\n            })));\n            return updated;\n          }\n          // Append only if new and keep size bounded similar to initial limit\n          const limit = intervalToLimit(interval);\n          const next = [...prev, kline].slice(-limit);\n          setLine(next.map(c => ({\n            t: c.time,\n            price: c.close\n          })));\n          return next;\n        });\n      } catch (e) {\n        // Silently ignore malformed messages\n      }\n    };\n    ws.onerror = () => {\n      // On error, fallback to timed polling only\n      console.warn('WebSocket error; falling back to polling');\n      try {\n        ws.close();\n      } catch (_) {}\n    };\n    ws.onclose = () => setWsConnected(false);\n\n    // Polling still used as periodic reconciliation in case of missed frames\n    const pollId = setInterval(fetchData, interval === '1m' ? 120000 : 180000);\n    return () => {\n      clearInterval(pollId);\n      if (abortRef.current) abortRef.current.abort();\n      if (wsRef.current) {\n        try {\n          wsRef.current.close();\n        } catch (_) {}\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [interval, symbol]);\n  return {\n    candles,\n    line,\n    loading,\n    error,\n    source,\n    wsConnected,\n    refresh: fetchData\n  };\n};\n/* harmony default export */ const hooks_useMarketData = (useMarketData);\n;// ./node_modules/lucide-react/dist/esm/icons/x.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst x_iconNode = [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n];\nconst X = createLucideIcon(\"x\", x_iconNode);\n\n\n//# sourceMappingURL=x.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/trophy.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst trophy_iconNode = [\n  [\"path\", { d: \"M10 14.66v1.626a2 2 0 0 1-.976 1.696A5 5 0 0 0 7 21.978\", key: \"1n3hpd\" }],\n  [\"path\", { d: \"M14 14.66v1.626a2 2 0 0 0 .976 1.696A5 5 0 0 1 17 21.978\", key: \"rfe1zi\" }],\n  [\"path\", { d: \"M18 9h1.5a1 1 0 0 0 0-5H18\", key: \"7xy6bh\" }],\n  [\"path\", { d: \"M4 22h16\", key: \"57wxv0\" }],\n  [\"path\", { d: \"M6 9a6 6 0 0 0 12 0V3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1z\", key: \"1mhfuq\" }],\n  [\"path\", { d: \"M6 9H4.5a1 1 0 0 1 0-5H6\", key: \"tex48p\" }]\n];\nconst Trophy = createLucideIcon(\"trophy\", trophy_iconNode);\n\n\n//# sourceMappingURL=trophy.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/circle-alert.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst circle_alert_iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n];\nconst CircleAlert = createLucideIcon(\"circle-alert\", circle_alert_iconNode);\n\n\n//# sourceMappingURL=circle-alert.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/dollar-sign.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst dollar_sign_iconNode = [\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"2\", y2: \"22\", key: \"7eqyqh\" }],\n  [\"path\", { d: \"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\", key: \"1b0p4s\" }]\n];\nconst DollarSign = createLucideIcon(\"dollar-sign\", dollar_sign_iconNode);\n\n\n//# sourceMappingURL=dollar-sign.js.map\n\n;// ./src/components/ResultModal.js\n\n\nconst ResultModal = _ref => {\n  let {\n    isOpen,\n    onClose,\n    result,\n    winnings,\n    betAmount,\n    direction\n  } = _ref;\n  const [isAnimating, setIsAnimating] = (0,react.useState)(false);\n  (0,react.useEffect)(() => {\n    if (isOpen) {\n      setIsAnimating(true);\n      // Auto close after 5 seconds\n      const timer = setTimeout(() => {\n        onClose();\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [isOpen, onClose]);\n  if (!isOpen) return null;\n  const isWin = result === direction;\n  const isLoss = !isWin && result !== null;\n  return /*#__PURE__*/react.createElement(react.Fragment, null, \"\\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"style\", null, \"\\xA0 \\xA0 \\xA0 \\xA0 \", \"\\n          /* === Theme Variables === */\\n          :root {\\n            /* Light theme colors */\\n            --bg-primary: #f3f4f6;\\n            --bg-secondary: #ffffff;\\n            --bg-tertiary: #f9fafb;\\n            --text-primary: #1f2937;\\n            --text-secondary: #6b7280;\\n            --border-color: #e5e7eb;\\n            --accent-purple: #8b5cf6;\\n            --accent-green: #22c55e;\\n            --accent-red: #ef4444;\\n            --accent-blue: #3b82f6;\\n            --shadow: rgba(0, 0, 0, 0.05);\\n          }\\n          \\n          body[data-theme=\\\"dark\\\"] {\\n            /* Dark theme colors */\\n            --bg-primary: #0f172a;\\n            --bg-secondary: #1e293b;\\n            --bg-tertiary: #334155;\\n            --text-primary: #f8fafc;\\n            --text-secondary: #94a3b8;\\n            --border-color: #334155;\\n            --shadow: rgba(0, 0, 0, 0.3);\\n          }\\n\\n          /* === Modal Styles === */\\n          .modal-overlay {\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            right: 0;\\n            bottom: 0;\\n            background-color: rgba(0, 0, 0, 0.6);\\n            backdrop-filter: blur(4px);\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            z-index: 50;\\n            padding: 1rem;\\n            opacity: 0;\\n            transform: scale(0.95);\\n            transition: opacity 0.3s ease, transform 0.3s ease;\\n          }\\n\\n          .modal-overlay.show {\\n            opacity: 1;\\n            transform: scale(1);\\n          }\\n\\n          .modal-card {\\n            background-color: var(--bg-secondary);\\n            border-radius: 1.5rem;\\n            border: 1px solid var(--border-color);\\n            box-shadow: 0 8px 32px var(--shadow);\\n            max-width: 28rem;\\n            width: 100%;\\n            position: relative;\\n            transform: translateY(-20px);\\n            transition: transform 0.3s ease, opacity 0.3s ease;\\n          }\\n\\n          .modal-overlay.show .modal-card {\\n            transform: translateY(0);\\n          }\\n          \\n          .modal-close-btn {\\n            position: absolute;\\n            top: 1rem;\\n            right: 1rem;\\n            color: var(--text-secondary);\\n            transition: color 0.2s ease;\\n            padding: 0.25rem;\\n            cursor: pointer;\\n          }\\n          \\n          .modal-close-btn:hover {\\n            color: var(--text-primary);\\n          }\\n          \\n          .modal-header {\\n            padding: 1.5rem;\\n            border-bottom: 1px solid var(--border-color);\\n            text-align: center;\\n          }\\n\\n          .icon-container {\\n            width: 4rem;\\n            height: 4rem;\\n            margin: 0 auto 1rem;\\n            border-radius: 9999px;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n          }\\n          \\n          .icon-container.win { background-color: rgba(34, 197, 94, 0.1); }\\n          .icon-container.loss { background-color: rgba(239, 68, 68, 0.1); }\\n          .icon-container.neutral { background-color: rgba(255, 193, 7, 0.1); }\\n\\n          .icon-container.win svg { color: var(--accent-green); }\\n          .icon-container.loss svg { color: var(--accent-red); }\\n          .icon-container.neutral svg { color: #FFC107; }\\n\\n          .modal-title {\\n            font-size: 1.5rem;\\n            font-weight: bold;\\n            margin-bottom: 0.5rem;\\n          }\\n          \\n          .modal-title.win { color: var(--accent-green); }\\n          .modal-title.loss { color: var(--accent-red); }\\n          .modal-title.neutral { color: #FFC107; }\\n\\n          .modal-subtitle {\\n            color: var(--text-secondary);\\n          }\\n\\n          .modal-details {\\n            padding: 1.5rem;\\n            display: flex;\\n            flex-direction: column;\\n            gap: 1rem;\\n          }\\n\\n          .details-card {\\n            background-color: rgba(107, 114, 128, 0.1);\\n            border-radius: 0.75rem;\\n            padding: 1rem;\\n          }\\n\\n          .details-item {\\n            display: flex;\\n            justify-content: space-between;\\n            align-items: center;\\n            font-size: 0.875rem;\\n          }\\n\\n          .details-item:not(:last-child) {\\n            margin-bottom: 0.75rem;\\n          }\\n          \\n          .details-label {\\n            color: var(--text-secondary);\\n          }\\n          \\n          .details-value {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.5rem;\\n            font-weight: bold;\\n          }\\n\\n          .details-value svg {\\n            width: 1rem;\\n            height: 1rem;\\n          }\\n\\n          .details-value.up svg { color: var(--accent-green); }\\n          .details-value.down svg { color: var(--accent-red); }\\n          .details-value.up span { color: var(--accent-green); }\\n          .details-value.down span { color: var(--accent-red); }\\n          \\n          .details-card .details-item.bordered {\\n            border-top: 1px solid var(--border-color);\\n            padding-top: 0.5rem;\\n            margin-top: 0.5rem;\\n          }\\n          \\n          .result-card {\\n            border-radius: 0.75rem;\\n            padding: 1rem;\\n            text-align: center;\\n            border: 1px solid;\\n          }\\n\\n          .result-card.win { background-color: rgba(34, 197, 94, 0.1); border-color: rgba(34, 197, 94, 0.2); }\\n          .result-card.loss { background-color: rgba(239, 68, 68, 0.1); border-color: rgba(239, 68, 68, 0.2); }\\n          .result-card.neutral { background-color: rgba(255, 193, 7, 0.1); border-color: rgba(255, 193, 7, 0.2); }\\n\\n          .result-label {\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            gap: 0.5rem;\\n            margin-bottom: 0.5rem;\\n            color: var(--text-secondary);\\n            font-weight: 500;\\n          }\\n\\n          .result-value {\\n            font-size: 1.875rem;\\n            font-weight: bold;\\n          }\\n\\n          .result-value.win { color: var(--accent-green); }\\n          .result-value.loss { color: var(--accent-red); }\\n          .result-value.neutral { color: #FFC107; }\\n\\n          .result-message {\\n            font-size: 0.875rem;\\n            margin-top: 0.5rem;\\n          }\\n\\n          .result-message.win { color: var(--accent-green); }\\n          .result-message.loss { color: var(--accent-red); }\\n          .result-message.neutral { color: #FFC107; }\\n\\n          .modal-actions {\\n            padding: 1.5rem;\\n            display: flex;\\n            gap: 0.75rem;\\n          }\\n\\n          .modal-btn {\\n            flex: 1;\\n            padding: 0.75rem;\\n            border-radius: 0.5rem;\\n            font-weight: 500;\\n            transition: background-color 0.2s ease, transform 0.2s ease;\\n            cursor: pointer;\\n            text-align: center;\\n          }\\n\\n          .btn-secondary {\\n            background-color: var(--bg-tertiary);\\n            color: var(--text-primary);\\n            border: 1px solid var(--border-color);\\n          }\\n          .btn-secondary:hover {\\n            background-color: var(--border-color);\\n            transform: translateY(-2px);\\n          }\\n\\n          .btn-primary {\\n            background-color: var(--accent-blue);\\n            color: white;\\n            border: none;\\n          }\\n          .btn-primary:hover {\\n            background-color: #2563eb;\\n            transform: translateY(-2px);\\n          }\\n\\n          .modal-footer {\\n            padding: 0 1.5rem 1rem;\\n            text-align: center;\\n            font-size: 0.75rem;\\n            color: var(--text-secondary);\\n          }\\n\\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-overlay \".concat(isAnimating ? 'show' : '')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-card\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"button\", {\n    onClick: onClose,\n    className: \"modal-close-btn\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(X, {\n    className: \"w-5 h-5\"\n  }), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"icon-container \".concat(isWin ? 'win' : isLoss ? 'loss' : 'neutral')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isWin ? /*#__PURE__*/react.createElement(Trophy, {\n    className: \"w-8 h-8\"\n  }) : isLoss ? /*#__PURE__*/react.createElement(CircleAlert, {\n    className: \"w-8 h-8\"\n  }) : /*#__PURE__*/react.createElement(DollarSign, {\n    className: \"w-8 h-8\"\n  }), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"h2\", {\n    className: \"modal-title \".concat(isWin ? 'win' : isLoss ? 'loss' : 'neutral')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isWin ? 'Congratulations!' : isLoss ? 'Better Luck Next Time!' : 'Round Complete!', \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"p\", {\n    className: \"modal-subtitle\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isWin ? 'You won this round!' : isLoss ? 'You lost this round.' : 'Round has ended.', \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-details\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"details-card\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"space-y-3 text-sm\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"details-item\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", {\n    className: \"details-label\"\n  }, \"Your Prediction:\"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"details-value \".concat(direction === 'UP' ? 'up' : 'down')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", direction === 'UP' ? /*#__PURE__*/react.createElement(TrendingUp, null) : /*#__PURE__*/react.createElement(TrendingDown, null), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", null, direction), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"details-item\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", {\n    className: \"details-label\"\n  }, \"Actual Result:\"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"details-value \".concat(result === 'UP' ? 'up' : 'down')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", result === 'UP' ? /*#__PURE__*/react.createElement(TrendingUp, null) : /*#__PURE__*/react.createElement(TrendingDown, null), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", null, result), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"details-item bordered\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", {\n    className: \"details-label\"\n  }, \"Bet Amount:\"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontWeight: 'bold'\n    }\n  }, \"$\", (betAmount === null || betAmount === void 0 ? void 0 : betAmount.toFixed(2)) || '0.00'), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"result-card \".concat(isWin ? 'win' : isLoss ? 'loss' : 'neutral')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"result-label\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(DollarSign, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem'\n    }\n  }), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"span\", null, \"Result:\"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"result-value \".concat(isWin ? 'win' : isLoss ? 'loss' : 'neutral')\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isWin ? \"+$\".concat((winnings === null || winnings === void 0 ? void 0 : winnings.toFixed(2)) || '0.00') : isLoss ? \"-$\".concat((betAmount === null || betAmount === void 0 ? void 0 : betAmount.toFixed(2)) || '0.00') : 'No Change', \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isWin && /*#__PURE__*/react.createElement(\"p\", {\n    className: \"result-message win\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Added to your wallet! \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", isLoss && /*#__PURE__*/react.createElement(\"p\", {\n    className: \"result-message loss\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Deducted from your wallet \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-actions\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"button\", {\n    onClick: onClose,\n    className: \"modal-btn btn-secondary\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Close \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => {\n      onClose();\n      // Navigate to betting page\n      window.location.href = '/betting';\n    },\n    className: \"modal-btn btn-primary\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Try Again \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-footer\"\n  }, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/react.createElement(\"div\", null, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 This modal will auto-close in 5 seconds \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \\xA0 \"), \"\\xA0 \\xA0 \");\n};\n/* harmony default export */ const components_ResultModal = (ResultModal);\n;// ./node_modules/lucide-react/dist/esm/icons/calculator.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst calculator_iconNode = [\n  [\"rect\", { width: \"16\", height: \"20\", x: \"4\", y: \"2\", rx: \"2\", key: \"1nb95v\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"6\", y2: \"6\", key: \"x4nwl0\" }],\n  [\"line\", { x1: \"16\", x2: \"16\", y1: \"14\", y2: \"18\", key: \"wjye3r\" }],\n  [\"path\", { d: \"M16 10h.01\", key: \"1m94wz\" }],\n  [\"path\", { d: \"M12 10h.01\", key: \"1nrarc\" }],\n  [\"path\", { d: \"M8 10h.01\", key: \"19clt8\" }],\n  [\"path\", { d: \"M12 14h.01\", key: \"1etili\" }],\n  [\"path\", { d: \"M8 14h.01\", key: \"6423bh\" }],\n  [\"path\", { d: \"M12 18h.01\", key: \"mhygvu\" }],\n  [\"path\", { d: \"M8 18h.01\", key: \"lrp35t\" }]\n];\nconst Calculator = createLucideIcon(\"calculator\", calculator_iconNode);\n\n\n//# sourceMappingURL=calculator.js.map\n\n;// ./src/components/BettingModal.js\n\n\n\n// The main component with the refactored CSS\nconst BettingModal = _ref => {\n  let {\n    isOpen,\n    onClose,\n    onConfirm,\n    direction,\n    currentPrice,\n    upPool,\n    downPool,\n    balance\n  } = _ref;\n  const [betAmount, setBetAmount] = (0,react.useState)('');\n  const [isConfirming, setIsConfirming] = (0,react.useState)(false);\n  if (!isOpen) return null;\n  const quickAmounts = [5, 10, 25, 50, 100];\n  const totalPool = upPool + downPool;\n  const userPool = direction === 'UP' ? upPool : downPool;\n  const newUserPool = userPool + parseFloat(betAmount || 0);\n  const userPercentage = newUserPool > 0 ? parseFloat(betAmount || 0) / newUserPool * 100 : 0;\n  const potentialWin = totalPool > 0 ? totalPool * userPercentage / 100 : 0;\n  const handleConfirm = async () => {\n    if (!betAmount || parseFloat(betAmount) <= 0) {\n      // Replaced alert with a simple console log for a better UX\n      console.error('Please enter a valid bet amount');\n      return;\n    }\n    if (parseFloat(betAmount) > balance) {\n      console.error('Insufficient balance');\n      return;\n    }\n    setIsConfirming(true);\n    try {\n      await onConfirm(parseFloat(betAmount));\n      setBetAmount('');\n      onClose();\n    } catch (error) {\n      console.error('Error placing bet. Please try again.');\n    } finally {\n      setIsConfirming(false);\n    }\n  };\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"style\", null, \"\\n          /* === Theme Variables === */\\n          :root {\\n            --bg-secondary: #f0f4f8;\\n            --bg-tertiary: #ffffff;\\n            --border-color: #e2e8f0;\\n            --text-primary: #1a202c;\\n            --text-secondary: #4a5568;\\n            --accent-purple: #7f5af0;\\n          }\\n          [data-theme='dark'] {\\n            --bg-secondary: #110320; /* Updated dark mode background color */\\n            --bg-tertiary: #1e0636;\\n            --border-color: #2d134b;\\n            --text-primary: #f0f4f8;\\n            --text-secondary: #a0aec0;\\n            --accent-purple: #9c89e8;\\n          }\\n\\n          /* === Core Modal Styles === */\\n          .modal-overlay {\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            right: 0;\\n            bottom: 0;\\n            background: rgba(0, 0, 0, 0.7);\\n            backdrop-filter: blur(12px);\\n            display: flex;\\n            align-items: center; /* Center the card horizontally */\\n            justify-content: center;\\n            z-index: 50;\\n            padding: 1rem;\\n            overflow-y: auto; /* Allows the entire overlay to scroll if content is too tall */\\n          }\\n          \\n          .modal-card {\\n            border-radius: 1rem;\\n            border: 1px solid;\\n            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\\n            max-width: 32rem; /* Matches max-w-lg */\\n            width: 100%;\\n            position: relative;\\n            overflow: hidden;\\n            margin: 2rem 0; /* Add vertical margin to give space on small screens */\\n          }\\n\\n          /* Header Styles */\\n          .header {\\n            padding: 1.5rem;\\n            border-bottom: 1px solid;\\n            display: flex;\\n            align-items: center;\\n            justify-content: space-between;\\n          }\\n          \\n          .header-up-bg {\\n            background-image: linear-gradient(to right, rgba(22, 163, 74, 0.1), rgba(5, 150, 105, 0.05));\\n          }\\n          \\n          .header-down-bg {\\n            background-image: linear-gradient(to right, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.05));\\n          }\\n\\n          .header-content {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.75rem;\\n          }\\n          \\n          .icon-container {\\n            width: 2.5rem;\\n            height: 2.5rem;\\n            border-radius: 9999px; /* rounded-full */\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n          }\\n          \\n          .icon-up-bg {\\n            background-color: rgba(22, 163, 74, 0.2);\\n          }\\n          \\n          .icon-down-bg {\\n            background-color: rgba(239, 68, 68, 0.2);\\n          }\\n\\n          .header-title {\\n            font-size: 1.125rem;\\n            font-weight: 700;\\n          }\\n          \\n          .header-price {\\n            font-size: 0.875rem;\\n          }\\n\\n          .close-button {\\n            color: #9ca3af; /* gray-400 */\\n            transition-property: color, background-color;\\n            transition-duration: 150ms;\\n            padding: 0.5rem;\\n            border-radius: 0.5rem;\\n            cursor: pointer;\\n          }\\n          .close-button:hover {\\n            color: white;\\n            background-color: rgba(255, 255, 255, 0.1);\\n          }\\n\\n          /* Main Content Styles */\\n          .modal-content {\\n            padding: 1.5rem;\\n          }\\n          \\n          .grid-2-cols {\\n            display: grid;\\n            grid-template-columns: repeat(2, minmax(0, 1fr));\\n            gap: 1rem;\\n          }\\n          \\n          .pool-card {\\n            border-radius: 0.75rem;\\n            padding: 1rem;\\n            text-align: center;\\n            border: 1px solid;\\n          }\\n\\n          .up-pool-bg {\\n            background-color: rgba(22, 163, 74, 0.1);\\n            border-color: rgba(22, 163, 74, 0.2);\\n          }\\n\\n          .down-pool-bg {\\n            background-color: rgba(239, 68, 68, 0.1);\\n            border-color: rgba(239, 68, 68, 0.2);\\n          }\\n\\n          .gray-pool-bg {\\n            background-color: rgba(107, 114, 128, 0.1);\\n            border-color: rgba(107, 114, 128, 0.2);\\n          }\\n\\n          .up-text {\\n            color: #4ade80; /* green-400 */\\n            font-weight: bold;\\n          }\\n\\n          .down-text {\\n            color: #f87171; /* red-400 */\\n            font-weight: bold;\\n          }\\n\\n          /* Input and Button Styles */\\n          .input-group {\\n            margin-bottom: 1.5rem;\\n          }\\n          \\n          .label {\\n            display: block;\\n            font-size: 0.875rem;\\n            font-weight: 500;\\n            margin-bottom: 0.5rem;\\n          }\\n\\n          .input-container {\\n            position: relative;\\n          }\\n          \\n          .input-icon {\\n            position: absolute;\\n            left: 0.75rem;\\n            top: 50%;\\n            transform: translateY(-50%);\\n            width: 1.25rem;\\n            height: 1.25rem;\\n          }\\n\\n          .bet-input {\\n            width: 100%;\\n            padding: 0.75rem 1rem 0.75rem 2.5rem;\\n            border-radius: 0.75rem;\\n            border: 1px solid;\\n            outline: none;\\n            transition: all 150ms;\\n          }\\n          \\n          .bet-input:focus {\\n            ring-color: transparent;\\n            box-shadow: 0 0 0 2px var(--accent-purple);\\n          }\\n          \\n          .input-footer {\\n            display: flex;\\n            justify-content: space-between;\\n            align-items: center;\\n            margin-top: 0.5rem;\\n          }\\n\\n          .max-button {\\n            font-size: 0.875rem;\\n            font-weight: 500;\\n            transition: opacity 150ms;\\n          }\\n          \\n          .max-button:hover {\\n            opacity: 0.8;\\n          }\\n          \\n          .quick-select-container {\\n            margin-bottom: 1.5rem;\\n          }\\n\\n          .quick-select-grid {\\n            display: grid;\\n            grid-template-columns: repeat(auto-fill, minmax(5rem, 1fr));\\n            gap: 0.5rem;\\n          }\\n\\n          .quick-select-button {\\n            padding: 0.5rem 0.75rem;\\n            border-radius: 0.5rem;\\n            font-size: 0.875rem;\\n            font-weight: 500;\\n            transition: all 150ms;\\n            border: 1px solid;\\n            cursor: pointer;\\n          }\\n\\n          .quick-select-button:hover {\\n            opacity: 0.8;\\n          }\\n\\n          .up-active {\\n            background-color: rgba(22, 163, 74, 0.2);\\n            color: #4ade80;\\n            border-color: rgba(22, 163, 74, 0.3);\\n          }\\n\\n          .down-active {\\n            background-color: rgba(239, 68, 68, 0.2);\\n            color: #f87171;\\n            border-color: rgba(239, 68, 68, 0.3);\\n          }\\n          \\n          /* Payout Calculator */\\n          .payout-card {\\n            border-radius: 0.75rem;\\n            padding: 1rem;\\n            margin-bottom: 1.5rem;\\n            border: 1px solid;\\n          }\\n          \\n          .payout-header {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.5rem;\\n            margin-bottom: 0.75rem;\\n          }\\n\\n          .payout-grid {\\n            display: grid;\\n            grid-template-columns: repeat(2, minmax(0, 1fr));\\n            gap: 1rem;\\n            font-size: 0.875rem;\\n          }\\n\\n          /* Action Buttons */\\n          .action-buttons {\\n            display: grid;\\n            grid-template-columns: repeat(2, minmax(0, 1fr));\\n            gap: 0.75rem;\\n          }\\n\\n          .cancel-button {\\n            padding: 0.75rem 1rem;\\n            border-radius: 0.75rem;\\n            font-weight: 500;\\n            border: 1px solid;\\n            background-color: transparent;\\n            transition: opacity 150ms;\\n            cursor: pointer;\\n          }\\n\\n          .confirm-button {\\n            padding: 0.75rem 1rem;\\n            border-radius: 0.75rem;\\n            font-weight: 700;\\n            color: white;\\n            transition: opacity 150ms;\\n            cursor: pointer;\\n            border: none;\\n          }\\n\\n          .confirm-up-bg {\\n            background: linear-gradient(135deg, #10b981 0%, #059669 100%);\\n            box-shadow: 0 10px 15px -3px rgba(16, 185, 129, 0.25), 0 4px 6px -2px rgba(16, 185, 129, 0.25);\\n          }\\n\\n          .confirm-down-bg {\\n            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\\n            box-shadow: 0 10px 15px -3px rgba(239, 68, 68, 0.25), 0 4px 6px -2px rgba(239, 68, 68, 0.25);\\n          }\\n\\n          .confirm-button:hover {\\n            opacity: 0.9;\\n          }\\n\\n          .confirm-button:disabled {\\n            opacity: 0.5;\\n            cursor: not-allowed;\\n          }\\n        \"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-overlay\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-card\",\n    style: {\n      background: 'var(--bg-secondary)',\n      borderColor: 'var(--border-color)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header \".concat(direction === 'UP' ? 'header-up-bg' : 'header-down-bg'),\n    style: {\n      borderColor: 'var(--border-color)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"icon-container \".concat(direction === 'UP' ? 'icon-up-bg' : 'icon-down-bg')\n  }, direction === 'UP' ? /*#__PURE__*/react.createElement(TrendingUp, {\n    className: \"w-5 h-5 text-green-400\"\n  }) : /*#__PURE__*/react.createElement(TrendingDown, {\n    className: \"w-5 h-5 text-red-400\"\n  })), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"h2\", {\n    className: \"header-title\",\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, \"Place \", direction, \" Bet\"), /*#__PURE__*/react.createElement(\"p\", {\n    className: \"header-price\",\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, \"Current Price: $\", (currentPrice === null || currentPrice === void 0 ? void 0 : currentPrice.toLocaleString()) || '0'))), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: onClose,\n    className: \"close-button\"\n  }, /*#__PURE__*/react.createElement(X, {\n    className: \"w-5 h-5\"\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"grid-2-cols mb-6\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pool-card text-center \".concat(direction === 'UP' ? 'up-pool-bg' : 'gray-pool-bg')\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-lg font-bold \".concat(direction === 'UP' ? 'up-text' : 'text-gray-400')\n  }, \"$\", upPool.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-sm\",\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, \"UP Pool\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pool-card text-center \".concat(direction === 'DOWN' ? 'down-pool-bg' : 'gray-pool-bg')\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-lg font-bold \".concat(direction === 'DOWN' ? 'down-text' : 'text-gray-400')\n  }, \"$\", downPool.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-sm\",\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, \"DOWN Pool\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"input-group\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\",\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, \"Bet Amount\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"input-container\"\n  }, /*#__PURE__*/react.createElement(DollarSign, {\n    className: \"input-icon\",\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"number\",\n    value: betAmount,\n    onChange: e => setBetAmount(e.target.value),\n    className: \"bet-input\",\n    style: {\n      background: 'var(--bg-tertiary)',\n      borderColor: 'var(--border-color)',\n      color: 'var(--text-primary)'\n    },\n    placeholder: \"Enter amount...\"\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"input-footer\"\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    className: \"text-sm\",\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, \"Available: $\", balance.toFixed(2)), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => setBetAmount(balance.toString()),\n    className: \"max-button\",\n    style: {\n      color: 'var(--accent-purple)'\n    }\n  }, \"Max\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"quick-select-container\"\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    className: \"text-sm font-medium mb-3\",\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, \"Quick Select\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"quick-select-grid\"\n  }, quickAmounts.map(amount => /*#__PURE__*/react.createElement(\"button\", {\n    key: amount,\n    onClick: () => setBetAmount(amount.toString()),\n    className: \"quick-select-button \".concat(betAmount === amount.toString() ? direction === 'UP' ? 'up-active' : 'down-active' : ''),\n    style: {\n      background: betAmount === amount.toString() ? undefined : 'var(--bg-tertiary)',\n      borderColor: betAmount === amount.toString() ? undefined : 'var(--border-color)',\n      color: betAmount === amount.toString() ? undefined : 'var(--text-secondary)'\n    }\n  }, \"$\", amount)))), betAmount && parseFloat(betAmount) > 0 && /*#__PURE__*/react.createElement(\"div\", {\n    className: \"payout-card\",\n    style: {\n      background: 'var(--bg-tertiary)',\n      borderColor: 'var(--border-color)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"payout-header\"\n  }, /*#__PURE__*/react.createElement(Calculator, {\n    className: \"w-5 h-5\",\n    style: {\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"h3\", {\n    className: \"font-semibold\",\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, \"Potential Payout\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"payout-grid\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, \"Your Share\"), /*#__PURE__*/react.createElement(\"p\", {\n    className: \"font-bold\",\n    style: {\n      color: 'var(--text-primary)'\n    }\n  }, userPercentage.toFixed(1), \"%\")), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-secondary)'\n    }\n  }, \"Potential Win\"), /*#__PURE__*/react.createElement(\"p\", {\n    className: \"font-bold \".concat(direction === 'UP' ? 'up-text' : 'down-text')\n  }, \"$\", potentialWin.toFixed(2))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"action-buttons\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    onClick: onClose,\n    className: \"cancel-button\",\n    style: {\n      color: 'var(--text-secondary)',\n      borderColor: 'var(--border-color)'\n    }\n  }, \"Cancel\"), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: handleConfirm,\n    disabled: isConfirming || !betAmount || parseFloat(betAmount) <= 0,\n    className: \"confirm-button \".concat(direction === 'UP' ? 'confirm-up-bg' : 'confirm-down-bg')\n  }, isConfirming ? 'Confirming...' : \"Confirm \".concat(direction, \" Bet\")))))));\n};\n/* harmony default export */ const components_BettingModal = (BettingModal);\n;// ./src/pages/Betting.js\n\n\n\n\n\n\n\n\nconst Betting = () => {\n  var _currentBets$, _currentBets$2;\n  const {\n    activeCycle,\n    balance,\n    currentBets,\n    placeBet,\n    startTimer,\n    modalType,\n    modalData,\n    hideModal,\n    getPayoutMultipliers,\n    theme,\n    chartInterval,\n    setChartInterval,\n    chartSymbol,\n    setChartSymbol,\n    isAuthenticated\n  } = store_useStore();\n  const [chartType, setChartType] = (0,react.useState)('line');\n  const [showBettingModal, setShowBettingModal] = (0,react.useState)(false);\n  const [selectedDirection, setSelectedDirection] = (0,react.useState)(null);\n\n  // Apply theme to document element when component mounts or theme changes\n  (0,react.useEffect)(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return \"\".concat(mins.toString().padStart(2, '0'), \":\").concat(secs.toString().padStart(2, '0'));\n  };\n  (0,react.useEffect)(() => {\n    const interval = startTimer();\n    return () => clearInterval(interval);\n  }, [startTimer]);\n  const handleBetClick = direction => {\n    // Check if user is authenticated first\n    if (!isAuthenticated) {\n      alert('Please login to place bets');\n      window.location.href = '/login';\n      return;\n    }\n    if (activeCycle.status !== 'OPEN') {\n      alert('Betting is currently closed');\n      return;\n    }\n    setSelectedDirection(direction);\n    setShowBettingModal(true);\n  };\n  const handleConfirmBet = async amount => {\n    try {\n      await placeBet({\n        direction: selectedDirection,\n        amount: amount,\n        cycleId: activeCycle.id\n      });\n      alert(\"Bet placed successfully! \".concat(selectedDirection, \" $\").concat(amount));\n    } catch (error) {\n      console.error('Bet placement error:', error);\n      alert(\"Failed to place bet: \".concat(error.message));\n      throw error;\n    }\n  };\n  const payoutMultipliers = getPayoutMultipliers();\n\n  // Market data hook\n  const {\n    candles,\n    line,\n    loading: marketLoading,\n    error: marketError,\n    source: marketSource,\n    wsConnected,\n    refresh\n  } = hooks_useMarketData(chartInterval, chartSymbol);\n  const lastCandle = candles[candles.length - 1];\n  const prevCandle = candles[candles.length - 2];\n  const lastPrice = lastCandle ? lastCandle.close : null;\n  const prevClose = prevCandle ? prevCandle.close : lastPrice;\n  const pctChange = lastPrice && prevClose ? (lastPrice - prevClose) / prevClose * 100 : 0;\n  const priceColor = pctChange > 0 ? 'var(--accent-green)' : pctChange < 0 ? 'var(--accent-red)' : 'var(--text-secondary)';\n  const symbolOptions = (0,react.useMemo)(() => ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'ETHBTC', 'SOLUSDT', 'XRPUSDT', 'ADAUSDT', 'DOGEUSDT', 'AVAXUSDT', 'MATICUSDT', 'BTCNGN'], []);\n  const formatSymbol = sym => {\n    if (sym.endsWith('USDT')) return sym.replace('USDT', '/USDT');\n    if (sym.endsWith('USDC')) return sym.replace('USDC', '/USDC');\n    if (sym.endsWith('NGN')) return sym.replace('NGN', '/NGN');\n    if (sym.length === 6) return sym.slice(0, 3) + '/' + sym.slice(3);\n    return sym;\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"betting-container\"\n  }, /*#__PURE__*/react.createElement(\"style\", null, \"\\n        /* Theme Variables */\\n        :root {\\n          --bg-primary: linear-gradient(135deg, #0F0F23 0%, #1E1E38 100%);\\n          --bg-secondary: #1A1B2E;\\n          --bg-tertiary: #252640;\\n          --text-primary: #F8FAFC;\\n          --text-secondary: #94A3B8;\\n          --border-color: rgba(248, 250, 252, 0.08);\\n          --accent-purple: #8B5CF6;\\n          --accent-green: #22C55E;\\n          --accent-blue: #3B82F6;\\n          --accent-red: #EF4444;\\n          --accent-gold: #F59E0B;\\n          --card-bg: rgba(26, 27, 46, 0.95);\\n          --shadow: rgba(0, 0, 0, 0.3);\\n          --glass-bg: rgba(26, 27, 46, 0.8);\\n          --glass-border: rgba(248, 250, 252, 0.1);\\n          --hover-bg: rgba(37, 38, 64, 0.7);\\n        }\\n        \\n        [data-theme=\\\"light\\\"] {\\n          --bg-primary: linear-gradient(135deg, #FAFBFC 0%, #F4F6F8 100%);\\n          --bg-secondary: #FFFFFF;\\n          --bg-tertiary: #F8FAFC;\\n          --text-primary: #0F172A;\\n          --text-secondary: #475569;\\n          --border-color: rgba(15, 23, 42, 0.08);\\n          --card-bg: rgba(255, 255, 255, 0.95);\\n          --shadow: rgba(15, 23, 42, 0.1);\\n          --glass-bg: rgba(255, 255, 255, 0.8);\\n          --glass-border: rgba(15, 23, 42, 0.1);\\n          --hover-bg: rgba(248, 250, 252, 0.7);\\n        }\\n\\n        body {\\n          margin: 0;\\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n          background: var(--bg-primary);\\n          color: var(--text-primary);\\n          transition: all 0.3s ease;\\n        }\\n\\n        @keyframes fadeIn {\\n          from { opacity:0; transform:translateY(6px); }\\n          to { opacity:1; transform:translateY(0); }\\n        }\\n\\n        .symbol-btn:hover:not(.active) { background: var(--hover-bg); color: var(--text-primary) !important; }\\n        .symbol-btn.active { box-shadow:0 4px 14px rgba(139,92,246,0.35); }\\n\\n        .betting-container {\\n          min-height: 100vh;\\n          background: var(--bg-primary);\\n        }\\n\\n        /* Header Styles */\\n        .header {\\n          background: var(--glass-bg);\\n          border-bottom: 1px solid var(--border-color);\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n          position: sticky;\\n          top: 0;\\n          z-index: 10;\\n        }\\n\\n        .header-content {\\n          max-width: 1400px;\\n          margin: 0 auto;\\n          padding: 1.5rem 2rem;\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          flex-wrap: wrap;\\n          gap: 2rem;\\n        }\\n\\n        .header-left h1 {\\n          font-size: 2rem;\\n          font-weight: 800;\\n          margin: 0 0 0.5rem 0;\\n          color: var(--text-primary);\\n        }\\n\\n        .header-left p {\\n          font-size: 1rem;\\n          color: var(--text-secondary);\\n          margin: 0;\\n        }\\n\\n        /* Chart Toggle Buttons */\\n        .chart-toggle {\\n          display: flex;\\n          background: var(--card-bg);\\n          border: 1px solid var(--glass-border);\\n          border-radius: 1rem;\\n          padding: 0.5rem;\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n          box-shadow: 0 8px 32px var(--shadow);\\n        }\\n\\n        .interval-toggle {\\n          display: flex;\\n          background: var(--card-bg);\\n          border: 1px solid var(--glass-border);\\n          border-radius: 1rem;\\n          padding: 0.4rem;\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n          box-shadow: 0 8px 32px var(--shadow);\\n          gap: 0.25rem;\\n        }\\n\\n        .interval-button {\\n          padding: 0.5rem 0.9rem;\\n          border: none;\\n          border-radius: 0.65rem;\\n          font-weight: 600;\\n          font-size: 0.75rem;\\n          cursor: pointer;\\n          transition: all 0.25s ease;\\n          background: transparent;\\n          color: var(--text-secondary);\\n          letter-spacing: .03em;\\n        }\\n        .interval-button.active {\\n          background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));\\n          color: white;\\n          box-shadow: 0 4px 14px rgba(139,92,246,0.35);\\n        }\\n        .interval-button:hover:not(.active) { background: var(--hover-bg); color: var(--text-primary); }\\n\\n        .chart-button {\\n          padding: 0.75rem 1.5rem;\\n          border: none;\\n          border-radius: 0.75rem;\\n          font-weight: 600;\\n          font-size: 0.875rem;\\n          cursor: pointer;\\n          transition: all 0.3s ease;\\n          background: transparent;\\n          color: var(--text-secondary);\\n        }\\n\\n        .chart-button.active {\\n          background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));\\n          color: white;\\n          box-shadow: 0 4px 20px rgba(139, 92, 246, 0.3);\\n          transform: translateY(-1px);\\n        }\\n\\n        .chart-button:hover:not(.active) {\\n          background: var(--hover-bg);\\n          color: var(--text-primary);\\n        }\\n\\n        /* Main Content */\\n        .main-content {\\n          max-width: 1400px;\\n          margin: 0 auto;\\n          padding: 2rem;\\n          display: grid;\\n          gap: 2rem;\\n        }\\n\\n        /* Trading Card */\\n        .trading-card {\\n          background: var(--card-bg);\\n          border: 1px solid var(--glass-border);\\n          border-radius: 1.5rem;\\n          overflow: hidden;\\n          box-shadow: 0 8px 32px var(--shadow);\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n        }\\n\\n        .card-header {\\n          padding: 2rem 2rem 1rem 2rem;\\n          border-bottom: 1px solid var(--border-color);\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          flex-wrap: wrap;\\n          gap: 1rem;\\n        }\\n\\n        .pair-info h2 {\\n          font-size: 1.75rem;\\n          font-weight: 800;\\n          margin: 0 0 0.25rem 0;\\n          color: var(--text-primary);\\n        }\\n\\n        .pair-info p {\\n          color: var(--text-secondary);\\n          margin: 0;\\n          font-size: 0.875rem;\\n        }\\n\\n        .price-display {\\n          text-align: right;\\n        }\\n\\n        .current-price {\\n          font-size: 2.5rem;\\n          font-weight: 800;\\n          margin: 0;\\n          color: var(--accent-green);\\n        }\\n\\n        .price-change {\\n          display: flex;\\n          align-items: center;\\n          gap: 0.5rem;\\n          color: var(--accent-green);\\n          font-weight: 600;\\n          font-size: 1rem;\\n        }\\n\\n        /* Chart Section */\\n        .chart-section {\\n          padding: 0 2rem 2rem 2rem;\\n        }\\n\\n        .chart-container {\\n          background: var(--bg-primary);\\n          border: 1px solid var(--border-color);\\n          border-radius: 1rem;\\n          padding: 2rem;\\n          margin-bottom: 2rem;\\n          position: relative;\\n          min-height: 400px;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n        }\\n\\n        .chart-placeholder {\\n          text-align: center;\\n          color: var(--text-secondary);\\n        }\\n\\n        .chart-placeholder h3 {\\n          font-size: 1.25rem;\\n          margin-bottom: 0.5rem;\\n          color: var(--text-primary);\\n        }\\n\\n        /* Info Grid */\\n        .info-grid {\\n          display: grid;\\n          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n          gap: 1.5rem;\\n          margin-bottom: 2rem;\\n        }\\n\\n        .info-card {\\n          background: var(--bg-tertiary);\\n          border: 1px solid var(--border-color);\\n          border-radius: 1rem;\\n          padding: 1.5rem;\\n          text-align: center;\\n          transition: all 0.3s ease;\\n        }\\n\\n        .info-card:hover {\\n          transform: translateY(-4px);\\n          box-shadow: 0 12px 48px var(--shadow);\\n        }\\n\\n        .info-card.timer {\\n          background: linear-gradient(135deg, rgba(34, 197, 94, 0.1), rgba(16, 185, 129, 0.05));\\n          border-color: rgba(34, 197, 94, 0.2);\\n        }\\n\\n        .info-card.timer.locked {\\n          background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.05));\\n          border-color: rgba(239, 68, 68, 0.2);\\n        }\\n\\n        .info-card.up-pool {\\n          background: linear-gradient(135deg, rgba(34, 197, 94, 0.1), rgba(16, 185, 129, 0.05));\\n          border-color: rgba(34, 197, 94, 0.2);\\n        }\\n\\n        .info-card.down-pool {\\n          background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.05));\\n          border-color: rgba(239, 68, 68, 0.2);\\n        }\\n\\n        .timer-display {\\n          font-size: 3rem;\\n          font-weight: 800;\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        .timer-display.open {\\n          color: var(--accent-green);\\n        }\\n\\n        .timer-display.locked {\\n          color: var(--accent-red);\\n        }\\n\\n        .info-card h3 {\\n          font-size: 1.125rem;\\n          font-weight: 700;\\n          margin: 0 0 0.25rem 0;\\n          color: var(--text-primary);\\n        }\\n\\n        .info-card p {\\n          font-size: 0.875rem;\\n          color: var(--text-secondary);\\n          margin: 0;\\n        }\\n\\n        .pool-amount {\\n          font-size: 1.75rem;\\n          font-weight: 800;\\n          margin-bottom: 0.5rem;\\n        }\\n\\n        .pool-amount.up {\\n          color: var(--accent-green);\\n        }\\n\\n        .pool-amount.down {\\n          color: var(--accent-red);\\n        }\\n\\n        .multiplier-badge {\\n          display: inline-block;\\n          padding: 0.5rem 1rem;\\n          border-radius: 2rem;\\n          font-weight: 700;\\n          font-size: 0.875rem;\\n        }\\n\\n        .multiplier-badge.up {\\n          background: rgba(34, 197, 94, 0.2);\\n          color: var(--accent-green);\\n        }\\n\\n        .multiplier-badge.down {\\n          background: rgba(239, 68, 68, 0.2);\\n          color: var(--accent-red);\\n        }\\n\\n        /* Betting Buttons */\\n        .betting-buttons {\\n          display: grid;\\n          grid-template-columns: 1fr 1fr;\\n          gap: 1.5rem;\\n        }\\n\\n        .bet-button {\\n          padding: 2rem;\\n          border: none;\\n          border-radius: 1rem;\\n          font-weight: 800;\\n          font-size: 1.25rem;\\n          cursor: pointer;\\n          transition: all 0.3s ease;\\n          position: relative;\\n          overflow: hidden;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          gap: 0.75rem;\\n        }\\n\\n        .bet-button:disabled {\\n          opacity: 0.5;\\n          cursor: not-allowed;\\n          background: var(--bg-tertiary) !important;\\n          color: var(--text-secondary) !important;\\n          box-shadow: none !important;\\n        }\\n\\n        .bet-button.up {\\n          background: linear-gradient(135deg, var(--accent-green), #16a34a);\\n          color: white;\\n          box-shadow: 0 8px 32px rgba(34, 197, 94, 0.3);\\n        }\\n\\n        .bet-button.down {\\n          background: linear-gradient(135deg, var(--accent-red), #dc2626);\\n          color: white;\\n          box-shadow: 0 8px 32px rgba(239, 68, 68, 0.3);\\n        }\\n\\n        .bet-button:hover:not(:disabled) {\\n          transform: translateY(-2px);\\n          box-shadow: 0 12px 48px rgba(34, 197, 94, 0.4);\\n        }\\n\\n        .bet-button.down:hover:not(:disabled) {\\n          box-shadow: 0 12px 48px rgba(239, 68, 68, 0.4);\\n        }\\n\\n        /* Locked State */\\n        .locked-state {\\n          background: var(--card-bg);\\n          border: 1px solid var(--glass-border);\\n          border-radius: 1.5rem;\\n          padding: 3rem 2rem;\\n          text-align: center;\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n          box-shadow: 0 8px 32px var(--shadow);\\n        }\\n\\n        .locked-icon {\\n          width: 5rem;\\n          height: 5rem;\\n          background: linear-gradient(135deg, rgba(239, 68, 68, 0.2), rgba(220, 38, 38, 0.1));\\n          border-radius: 50%;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          margin: 0 auto 2rem auto;\\n        }\\n\\n        .locked-state h3 {\\n          font-size: 2rem;\\n          font-weight: 800;\\n          margin-bottom: 1rem;\\n          color: var(--text-primary);\\n        }\\n\\n        .locked-state p {\\n          font-size: 1.125rem;\\n          color: var(--text-secondary);\\n          margin-bottom: 2rem;\\n        }\\n\\n        .locked-timer {\\n          color: var(--accent-red);\\n          font-weight: 800;\\n          font-size: 1.5rem;\\n        }\\n\\n        .active-bets {\\n          background: var(--bg-tertiary);\\n          border: 1px solid var(--border-color);\\n          border-radius: 1rem;\\n          padding: 2rem;\\n          max-width: 500px;\\n          margin: 0 auto;\\n        }\\n\\n        .active-bets h4 {\\n          font-size: 1.25rem;\\n          font-weight: 700;\\n          margin-bottom: 1.5rem;\\n          color: var(--text-primary);\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          gap: 0.5rem;\\n        }\\n\\n        .bet-item {\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          padding: 1rem;\\n          background: var(--hover-bg);\\n          border: 1px solid var(--border-color);\\n          border-radius: 0.75rem;\\n          margin-bottom: 1rem;\\n        }\\n\\n        .bet-item:last-child {\\n          margin-bottom: 0;\\n        }\\n\\n        .bet-info {\\n          display: flex;\\n          align-items: center;\\n          gap: 1rem;\\n        }\\n\\n        .bet-indicator {\\n          width: 0.75rem;\\n          height: 0.75rem;\\n          border-radius: 50%;\\n        }\\n\\n        .bet-indicator.up {\\n          background: var(--accent-green);\\n        }\\n\\n        .bet-indicator.down {\\n          background: var(--accent-red);\\n        }\\n\\n        .bet-amount {\\n          font-weight: 600;\\n          color: var(--text-primary);\\n        }\\n\\n        .bet-direction {\\n          font-weight: 800;\\n          font-size: 0.875rem;\\n          padding: 0.5rem 1rem;\\n          border-radius: 2rem;\\n        }\\n\\n        .bet-direction.up {\\n          background: rgba(34, 197, 94, 0.2);\\n          color: var(--accent-green);\\n        }\\n\\n        .bet-direction.down {\\n          background: rgba(239, 68, 68, 0.2);\\n          color: var(--accent-red);\\n        }\\n\\n        /* Responsive Design */\\n        @media (max-width: 768px) {\\n          .header-content {\\n            padding: 1rem;\\n            flex-direction: column;\\n            align-items: stretch;\\n          }\\n\\n          .header-left {\\n            text-align: center;\\n          }\\n\\n          .chart-toggle {\\n            justify-content: center;\\n          }\\n\\n          .main-content {\\n            padding: 1rem;\\n          }\\n\\n          .card-header {\\n            padding: 1.5rem 1rem 1rem 1rem;\\n            flex-direction: column;\\n            align-items: stretch;\\n            text-align: center;\\n          }\\n\\n          .price-display {\\n            text-align: center;\\n          }\\n\\n          .current-price {\\n            font-size: 2rem;\\n          }\\n\\n          .chart-section {\\n            padding: 0 1rem 1.5rem 1rem;\\n          }\\n\\n          .chart-container {\\n            padding: 1.5rem;\\n            min-height: 300px;\\n          }\\n\\n          .info-grid {\\n            grid-template-columns: 1fr;\\n          }\\n\\n          .betting-buttons {\\n            grid-template-columns: 1fr;\\n          }\\n\\n          .bet-button {\\n            padding: 1.5rem;\\n          }\\n\\n          .locked-state {\\n            padding: 2rem 1rem;\\n          }\\n        }\\n\\n        @media (max-width: 480px) {\\n          .header-left h1 {\\n            font-size: 1.5rem;\\n          }\\n\\n          .timer-display {\\n            font-size: 2.5rem;\\n          }\\n\\n          .pool-amount {\\n            font-size: 1.5rem;\\n          }\\n\\n          .current-price {\\n            font-size: 1.75rem;\\n          }\\n        }\\n        \"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header-left\"\n  }, /*#__PURE__*/react.createElement(\"h1\", null, \"Live Predictions\"), /*#__PURE__*/react.createElement(\"p\", null, \"Real-time crypto price predictions with professional trading interface\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '.35rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      fontSize: '.6rem',\n      letterSpacing: '.07em',\n      fontWeight: 600,\n      color: 'var(--text-secondary)'\n    }\n  }, \"PAIR\"), /*#__PURE__*/react.createElement(\"select\", {\n    value: chartSymbol,\n    onChange: e => setChartSymbol(e.target.value),\n    style: {\n      background: 'var(--card-bg)',\n      color: 'var(--text-primary)',\n      border: '1px solid var(--glass-border)',\n      borderRadius: '.75rem',\n      padding: '.65rem .9rem',\n      fontWeight: 600,\n      fontSize: '.75rem',\n      letterSpacing: '.05em',\n      cursor: 'pointer',\n      boxShadow: '0 6px 24px var(--shadow)',\n      minWidth: '10rem'\n    }\n  }, symbolOptions.map(sym => /*#__PURE__*/react.createElement(\"option\", {\n    key: sym,\n    value: sym\n  }, formatSymbol(sym))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chart-toggle\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"chart-button \".concat(chartType === 'line' ? 'active' : ''),\n    onClick: () => setChartType('line')\n  }, \"Line Chart\"), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"chart-button \".concat(chartType === 'candle' ? 'active' : ''),\n    onClick: () => setChartType('candle')\n  }, \"Candlestick\"))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-header\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"trading-card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-header\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pair-info\"\n  }, /*#__PURE__*/react.createElement(\"h2\", null, formatSymbol(chartSymbol)), /*#__PURE__*/react.createElement(\"p\", null, chartSymbol.startsWith('BTC') ? 'Bitcoin' : 'Market', \" \\u2022 Live Market\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"price-display\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"current-price\",\n    style: {\n      color: priceColor\n    }\n  }, lastPrice ? \"$\".concat(lastPrice.toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  })) : '—'), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"price-change\",\n    style: {\n      color: priceColor\n    }\n  }, pctChange >= 0 ? /*#__PURE__*/react.createElement(TrendingUp, {\n    className: \"w-5 h-5\"\n  }) : /*#__PURE__*/react.createElement(TrendingDown, {\n    className: \"w-5 h-5\"\n  }), /*#__PURE__*/react.createElement(\"span\", null, pctChange >= 0 ? '+' : '', pctChange.toFixed(2), \"% \", lastPrice && prevClose ? \"(\".concat((lastPrice - prevClose > 0 ? '+' : '') + (lastPrice - prevClose).toFixed(2), \")\") : '')), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '.4rem',\n      flexWrap: 'wrap',\n      marginTop: '.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.55rem',\n      letterSpacing: '.05em',\n      padding: '.3rem .5rem',\n      borderRadius: '.4rem',\n      background: 'var(--bg-tertiary)',\n      border: '1px solid var(--glass-border)',\n      color: 'var(--text-secondary)',\n      cursor: 'help'\n    }\n  }, marketSource === 'mock' ? 'SIMULATED' : 'LIVE'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      position: 'absolute',\n      top: '115%',\n      left: 0,\n      zIndex: 20,\n      whiteSpace: 'nowrap',\n      background: 'var(--card-bg)',\n      border: '1px solid var(--glass-border)',\n      padding: '.45rem .65rem',\n      fontSize: '.55rem',\n      borderRadius: '.4rem',\n      opacity: 0,\n      transform: 'translateY(4px)',\n      pointerEvents: 'none',\n      transition: 'all .2s ease'\n    },\n    className: \"badge-tip\"\n  }, marketSource === 'mock' ? 'Fallback synthetic data (network/API issue)' : 'Data from Binance REST/WS feed')), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      position: 'relative'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.55rem',\n      letterSpacing: '.05em',\n      padding: '.3rem .5rem',\n      borderRadius: '.4rem',\n      background: wsConnected ? 'rgba(34,197,94,0.15)' : 'rgba(239,68,68,0.15)',\n      border: '1px solid var(--glass-border)',\n      color: wsConnected ? 'var(--accent-green)' : 'var(--accent-red)',\n      cursor: 'help'\n    }\n  }, wsConnected ? 'WS CONNECTED' : 'WS OFFLINE'), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      position: 'absolute',\n      top: '115%',\n      left: 0,\n      zIndex: 20,\n      whiteSpace: 'nowrap',\n      background: 'var(--card-bg)',\n      border: '1px solid var(--glass-border)',\n      padding: '.45rem .65rem',\n      fontSize: '.55rem',\n      borderRadius: '.4rem',\n      opacity: 0,\n      transform: 'translateY(4px)',\n      pointerEvents: 'none',\n      transition: 'all .2s ease'\n    },\n    className: \"badge-tip\"\n  }, wsConnected ? 'Realtime stream active' : 'Falling back to periodic polling')), /*#__PURE__*/react.createElement(\"style\", null, \"\\n                  .price-display span[position], .price-display span.badge-tip {}\\n                  .price-display span[position]:hover {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  .price-display span[position] {}\\n                  /* Hover effect for small tooltip badges */\\n                  .price-display span:hover + .badge-tip, .price-display span.badge-tip:hover { opacity:1 !important; transform:translateY(0) !important; }\\n                  /* Better selector for our positioned wrappers */\\n                  .price-display > span[position], .price-display > span { position:relative; }\\n                  .price-display > span:hover .badge-tip { opacity:1; transform:translateY(0); }\\n                \")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chart-section\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"interval-toggle\"\n  }, ['1m', '5m', '15m', '1h'].map(int => /*#__PURE__*/react.createElement(\"button\", {\n    key: int,\n    className: \"interval-button \".concat(chartInterval === int ? 'active' : ''),\n    onClick: () => setChartInterval(int)\n  }, int))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chart-container\",\n    style: {\n      background: 'var(--card-bg)',\n      minHeight: '420px',\n      padding: '1.5rem',\n      position: 'relative'\n    }\n  }, marketError && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 8,\n      left: 8,\n      fontSize: 11,\n      color: 'var(--accent-gold)',\n      background: 'rgba(0,0,0,0.35)',\n      padding: '.4rem .6rem',\n      borderRadius: '.5rem',\n      backdropFilter: 'blur(6px)',\n      border: '1px solid var(--glass-border)'\n    }\n  }, \"Data error \\u2013 using simulated feed\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"chart-fade-wrapper\",\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    key: chartType,\n    className: \"chart-fade\",\n    style: {\n      animation: 'fadeIn .5s ease'\n    }\n  }, chartType === 'line' && /*#__PURE__*/react.createElement(components_LineChart, {\n    data: line,\n    loading: marketLoading,\n    source: marketSource,\n    interval: chartInterval\n  }), chartType === 'candle' && /*#__PURE__*/react.createElement(components_CandlestickChart, {\n    candles: candles,\n    loading: marketLoading,\n    source: marketSource,\n    interval: chartInterval\n  }))), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: refresh,\n    style: {\n      position: 'absolute',\n      top: 8,\n      right: 8,\n      fontSize: '.6rem',\n      padding: '.4rem .6rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--bg-tertiary)',\n      color: 'var(--text-secondary)',\n      borderRadius: '.4rem',\n      cursor: 'pointer'\n    }\n  }, \"Refresh\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"info-grid\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"info-card timer \".concat(activeCycle.cyclePhase === 'LOCKED' ? 'locked' : '')\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"timer-display \".concat(activeCycle.cyclePhase === 'OPEN' ? 'open' : 'locked')\n  }, formatTime(activeCycle.timeRemaining)), /*#__PURE__*/react.createElement(\"h3\", null, activeCycle.cyclePhase === 'OPEN' ? 'Betting Open' : 'Round Locked'), /*#__PURE__*/react.createElement(\"p\", null, \"Round #\", activeCycle.id)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"info-card up-pool\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pool-amount up\"\n  }, \"$\", activeCycle.upPool.toFixed(2)), /*#__PURE__*/react.createElement(\"h3\", null, \"UP Pool\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"multiplier-badge up\"\n  }, payoutMultipliers.upMultiplier.toFixed(2), \"x\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"info-card down-pool\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pool-amount down\"\n  }, \"$\", activeCycle.downPool.toFixed(2)), /*#__PURE__*/react.createElement(\"h3\", null, \"DOWN Pool\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"multiplier-badge down\"\n  }, payoutMultipliers.downMultiplier.toFixed(2), \"x\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"betting-buttons\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"bet-button up\",\n    onClick: () => handleBetClick('UP'),\n    disabled: activeCycle.status !== 'OPEN'\n  }, /*#__PURE__*/react.createElement(TrendingUp, {\n    className: \"w-8 h-8\"\n  }), /*#__PURE__*/react.createElement(\"span\", null, \"BET UP\")), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"bet-button down\",\n    onClick: () => handleBetClick('DOWN'),\n    disabled: activeCycle.status !== 'OPEN'\n  }, /*#__PURE__*/react.createElement(TrendingDown, {\n    className: \"w-8 h-8\"\n  }), /*#__PURE__*/react.createElement(\"span\", null, \"BET DOWN\"))))), activeCycle.status === 'LOCKED' && /*#__PURE__*/react.createElement(\"div\", {\n    className: \"locked-state\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"locked-icon\"\n  }, /*#__PURE__*/react.createElement(Clock, {\n    className: \"w-8 h-8 text-red-400\"\n  })), /*#__PURE__*/react.createElement(\"h3\", null, \"Round Locked\"), /*#__PURE__*/react.createElement(\"p\", null, \"Betting is closed. Settlement in\", ' ', /*#__PURE__*/react.createElement(\"span\", {\n    className: \"locked-timer\"\n  }, formatTime(activeCycle.timeRemaining))), currentBets.length > 0 && /*#__PURE__*/react.createElement(\"div\", {\n    className: \"active-bets\"\n  }, /*#__PURE__*/react.createElement(\"h4\", null, /*#__PURE__*/react.createElement(Activity, {\n    className: \"w-5 h-5\"\n  }), \"Your Active Bets\"), /*#__PURE__*/react.createElement(\"div\", null, currentBets.map(bet => /*#__PURE__*/react.createElement(\"div\", {\n    key: bet.id,\n    className: \"bet-item\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"bet-info\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"bet-indicator \".concat(bet.direction.toLowerCase())\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    className: \"bet-amount\"\n  }, \"$\", bet.amount)), /*#__PURE__*/react.createElement(\"span\", {\n    className: \"bet-direction \".concat(bet.direction.toLowerCase())\n  }, bet.direction)))))), /*#__PURE__*/react.createElement(components_BettingModal, {\n    isOpen: showBettingModal,\n    onClose: () => {\n      setShowBettingModal(false);\n      setSelectedDirection(null);\n    },\n    onConfirm: handleConfirmBet,\n    direction: selectedDirection,\n    currentPrice: activeCycle.currentPrice,\n    upPool: activeCycle.upPool,\n    downPool: activeCycle.downPool,\n    balance: balance\n  }), /*#__PURE__*/react.createElement(components_ResultModal, {\n    isOpen: modalType === 'RESULT',\n    onClose: hideModal,\n    result: modalData === null || modalData === void 0 ? void 0 : modalData.result,\n    winnings: modalData === null || modalData === void 0 ? void 0 : modalData.winnings,\n    betAmount: (_currentBets$ = currentBets[0]) === null || _currentBets$ === void 0 ? void 0 : _currentBets$.amount,\n    direction: (_currentBets$2 = currentBets[0]) === null || _currentBets$2 === void 0 ? void 0 : _currentBets$2.direction\n  })));\n};\n/* harmony default export */ const pages_Betting = (Betting);\n;// ./src/pages/Overview.js\n\n\nconst Overview = () => {\n  const markets = [{\n    id: 1,\n    symbol: 'BTC/USDT',\n    name: 'Bitcoin',\n    price: 110699.58,\n    change: 2.34,\n    icon: '₿',\n    color: 'text-orange-400'\n  }, {\n    id: 2,\n    symbol: 'ETH/USDT',\n    name: 'Ethereum',\n    price: 4285.21,\n    change: -51.23,\n    icon: 'Ξ',\n    color: 'text-blue-400'\n  }, {\n    id: 3,\n    symbol: 'SOL/USDT',\n    name: 'Solana',\n    price: 98.45,\n    change: 3.21,\n    icon: '◎',\n    color: 'text-purple-400'\n  }];\n  const features = [{\n    title: 'Fast Settlements',\n    description: 'Instant payout After results',\n    icon: '⚡'\n  }, {\n    title: 'Multi-Asset Support',\n    description: 'BTC, ETH, and Stablecoins',\n    icon: '🪙'\n  }, {\n    title: 'Transparent Payouts',\n    description: 'No hidden fees or tricks',\n    icon: '🔍'\n  }, {\n    title: 'Low Volatility',\n    description: 'Predict with Stable',\n    icon: '📊'\n  }];\n  const getChangeColor = change => {\n    return change >= 0 ? 'text-green' : 'text-red';\n  };\n  const getChangeIcon = change => {\n    return change >= 0 ? '↗' : '↘';\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"min-h-screen py-8 px-4\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"container max-w-6xl\"\n  }, /*#__PURE__*/react.createElement(\"h1\", {\n    className: \"text-4xl font-bold text-white mb-8 text-center\"\n  }, \"Available Markets\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16\"\n  }, markets.map(market => /*#__PURE__*/react.createElement(Link, {\n    key: market.id,\n    to: \"/betting\",\n    className: \"card hover:transform hover:scale-105 transition-all duration-300 cursor-pointer\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex items-center justify-between mb-4\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex items-center gap-3\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-3xl \".concat(market.color)\n  }, market.icon), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"h3\", {\n    className: \"text-xl font-bold text-white\"\n  }, market.symbol), /*#__PURE__*/react.createElement(\"p\", {\n    className: \"text-gray-400 text-sm\"\n  }, market.name))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-right\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-lg font-bold text-white\"\n  }, \"$\", market.price.toLocaleString()), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-sm font-semibold \".concat(getChangeColor(market.change))\n  }, getChangeIcon(market.change), \" \", Math.abs(market.change).toFixed(2))))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"mb-16\"\n  }, /*#__PURE__*/react.createElement(\"h2\", {\n    className: \"text-3xl font-bold text-white text-center mb-12\"\n  }, \"Why Choose Cointoss?\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"grid md:grid-cols-2 lg:grid-cols-4 gap-6\"\n  }, features.map((feature, index) => /*#__PURE__*/react.createElement(\"div\", {\n    key: index,\n    className: \"card text-center\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"text-4xl mb-4\"\n  }, feature.icon), /*#__PURE__*/react.createElement(\"h3\", {\n    className: \"text-lg font-semibold text-blue mb-2\"\n  }, feature.title), /*#__PURE__*/react.createElement(\"p\", {\n    className: \"text-gray-400 text-sm\"\n  }, feature.description)))))));\n};\n/* harmony default export */ const pages_Overview = (Overview);\n;// ./node_modules/lucide-react/dist/esm/icons/chart-column.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst chart_column_iconNode = [\n  [\"path\", { d: \"M3 3v16a2 2 0 0 0 2 2h16\", key: \"c24i48\" }],\n  [\"path\", { d: \"M18 17V9\", key: \"2bz60n\" }],\n  [\"path\", { d: \"M13 17V5\", key: \"1frdt8\" }],\n  [\"path\", { d: \"M8 17v-3\", key: \"17ska0\" }]\n];\nconst ChartColumn = createLucideIcon(\"chart-column\", chart_column_iconNode);\n\n\n//# sourceMappingURL=chart-column.js.map\n\n;// ./src/components/PerformanceHistory.js\n\n\n\n/**\r\n * PerformanceHistory Component\r\n * Props:\r\n *  - data: array of { date, bets, wins, amount, profit }\r\n *  - emptyMessage: optional message when no data\r\n */\nconst PerformanceHistory = _ref => {\n  let {\n    data = [],\n    emptyMessage = 'No performance history yet'\n  } = _ref;\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card\",\n    style: {\n      borderRadius: '1.5rem',\n      padding: '2rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)',\n      backdropFilter: 'blur(20px)',\n      WebkitBackdropFilter: 'blur(20px)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem',\n      marginBottom: '1.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(ChartColumn, {\n    style: {\n      width: '1.5rem',\n      height: '1.5rem',\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      fontSize: '1.25rem',\n      fontWeight: '600',\n      color: 'var(--text-primary)'\n    }\n  }, \"Performance History\")), data.length === 0 ? /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2rem',\n      color: 'var(--text-secondary)',\n      fontSize: '0.875rem'\n    }\n  }, emptyMessage) : /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.75rem'\n    }\n  }, data.map((day, index) => /*#__PURE__*/react.createElement(\"div\", {\n    key: index,\n    className: \"list-item\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      padding: '1rem',\n      borderRadius: '0.75rem',\n      background: 'var(--bg-tertiary)',\n      border: '1px solid var(--border-color)',\n      transition: 'all 0.2s ease-in-out'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontWeight: '500',\n      color: 'var(--text-primary)',\n      margin: 0\n    }\n  }, new Date(day.date).toLocaleDateString()), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)',\n      margin: 0\n    }\n  }, day.bets, \" bets \\u2022 \", day.wins, \" wins\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontWeight: '600',\n      color: 'var(--text-primary)',\n      margin: 0\n    }\n  }, \"$\", day.amount.toFixed(2)), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500',\n      margin: 0,\n      color: day.profit >= 0 ? 'var(--accent-green)' : 'var(--accent-red)'\n    }\n  }, day.profit >= 0 ? '+' : '', \"$\", day.profit.toFixed(2)))))));\n};\n/* harmony default export */ const components_PerformanceHistory = (PerformanceHistory);\n;// ./node_modules/lucide-react/dist/esm/icons/target.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst target_iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\n];\nconst Target = createLucideIcon(\"target\", target_iconNode);\n\n\n//# sourceMappingURL=target.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/award.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst award_iconNode = [\n  [\n    \"path\",\n    {\n      d: \"m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526\",\n      key: \"1yiouv\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"8\", r: \"6\", key: \"1vp47v\" }]\n];\nconst Award = createLucideIcon(\"award\", award_iconNode);\n\n\n//# sourceMappingURL=award.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/file-text.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst file_text_iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"M10 9H8\", key: \"b1mrlr\" }],\n  [\"path\", { d: \"M16 13H8\", key: \"t4e002\" }],\n  [\"path\", { d: \"M16 17H8\", key: \"z1uh3a\" }]\n];\nconst FileText = createLucideIcon(\"file-text\", file_text_iconNode);\n\n\n//# sourceMappingURL=file-text.js.map\n\n;// ./src/components/Sparkline.js\n\n\n// Simple sparkline component for small profit over time visualization\n// Props: data (array of numbers), width, height, stroke, fill, smooth\nconst Sparkline = _ref => {\n  let {\n    data = [],\n    width = 160,\n    height = 50,\n    stroke = 'var(--accent-green)',\n    fill = 'rgba(34,197,94,0.15)',\n    smooth = true\n  } = _ref;\n  const {\n    path,\n    min,\n    max,\n    last\n  } = (0,react.useMemo)(() => {\n    if (!data.length) return {\n      path: '',\n      min: 0,\n      max: 0,\n      last: 0\n    };\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    const range = max - min || 1;\n    const points = data.map((v, i) => {\n      const x = i / (data.length - 1) * (width - 2) + 1;\n      const y = height - (v - min) / range * (height - 2) - 1;\n      return {\n        x,\n        y\n      };\n    });\n    let d = '';\n    if (smooth && points.length > 1) {\n      d = \"M \".concat(points[0].x, \" \").concat(points[0].y);\n      for (let i = 1; i < points.length; i++) {\n        const p0 = points[i - 1];\n        const p1 = points[i];\n        const cx = (p0.x + p1.x) / 2;\n        d += \" Q \".concat(p0.x, \" \").concat(p0.y, \" \").concat(cx, \" \").concat((p0.y + p1.y) / 2);\n      }\n      d += \" T \".concat(points[points.length - 1].x, \" \").concat(points[points.length - 1].y);\n    } else {\n      d = points.map((p, i) => \"\".concat(i === 0 ? 'M' : 'L', \" \").concat(p.x, \" \").concat(p.y)).join(' ');\n    }\n    return {\n      path: d,\n      min,\n      max,\n      last: data[data.length - 1]\n    };\n  }, [data, width, height, smooth]);\n  if (!data.length) {\n    return /*#__PURE__*/react.createElement(\"div\", {\n      style: {\n        fontSize: '.65rem',\n        color: 'var(--text-secondary)'\n      }\n    }, \"No Data\");\n  }\n  const positive = data[data.length - 1] >= data[0];\n  return /*#__PURE__*/react.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 \".concat(width, \" \").concat(height),\n    style: {\n      display: 'block'\n    }\n  }, /*#__PURE__*/react.createElement(\"defs\", null, /*#__PURE__*/react.createElement(\"linearGradient\", {\n    id: \"sparkline-fill\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\"\n  }, /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: positive ? 'rgba(34,197,94,0.5)' : 'rgba(239,68,68,0.5)'\n  }), /*#__PURE__*/react.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"rgba(0,0,0,0)\"\n  }))), /*#__PURE__*/react.createElement(\"path\", {\n    d: \"\".concat(path, \" L \").concat(width, \" \").concat(height, \" L 0 \").concat(height, \" Z\"),\n    fill: \"url(#sparkline-fill)\",\n    opacity: 0.6\n  }), /*#__PURE__*/react.createElement(\"path\", {\n    d: path,\n    fill: \"none\",\n    stroke: positive ? 'var(--accent-green)' : 'var(--accent-red)',\n    strokeWidth: 2,\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/react.createElement(\"circle\", {\n    cx: width - 3,\n    cy: height - (last - min) / (max - min || 1) * (height - 2) - 1,\n    r: 3,\n    fill: positive ? 'var(--accent-green)' : 'var(--accent-red)'\n  }));\n};\n/* harmony default export */ const components_Sparkline = (Sparkline);\n;// ./src/pages/History.js\n\n\n\n\n\nconst History = () => {\n  const {\n    currentBets,\n    transactions,\n    theme,\n    isAuthenticated,\n    user,\n    balance\n  } = store_useStore();\n\n  // Redirect to login if not authenticated\n  (0,react.useEffect)(() => {\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n    }\n  }, [isAuthenticated]);\n\n  // Derive performance-style daily aggregates from transactions (BET + WIN) as fallback\n  const performanceData = (0,react.useMemo)(() => {\n    const grouped = {};\n    transactions.forEach(t => {\n      if (t.type === 'BET' || t.type === 'WIN') {\n        const day = new Date(t.timestamp).toISOString().slice(0, 10);\n        if (!grouped[day]) grouped[day] = {\n          date: day,\n          bets: 0,\n          wins: 0,\n          amount: 0,\n          profit: 0\n        };\n        if (t.type === 'BET') {\n          grouped[day].bets += 1;\n          grouped[day].amount += Math.abs(t.amount);\n          grouped[day].profit -= Math.abs(t.amount);\n        }\n        if (t.type === 'WIN') {\n          grouped[day].wins += 1;\n          grouped[day].profit += t.amount; // winnings already positive\n        }\n      }\n    });\n    return Object.values(grouped).sort((a, b) => new Date(b.date) - new Date(a.date));\n  }, [transactions]);\n\n  // Overall stats similar to profile style\n  const totalBets = currentBets.length + transactions.filter(t => t.type === 'BET').length;\n  const wins = transactions.filter(t => t.type === 'WIN').length;\n  const winRate = totalBets > 0 ? (wins / totalBets * 100).toFixed(1) : '0.0';\n  const netProfit = transactions.reduce((sum, t) => {\n    if (t.type === 'BET') return sum - Math.abs(t.amount);\n    if (t.type === 'WIN') return sum + t.amount;\n    return sum;\n  }, 0);\n\n  // Advanced Metrics\n  const betTransactions = transactions.filter(t => t.type === 'BET');\n  const winTransactions = transactions.filter(t => t.type === 'WIN');\n  const totalBetAmount = betTransactions.reduce((s, t) => s + Math.abs(t.amount), 0);\n  const averageBetSize = betTransactions.length > 0 ? totalBetAmount / betTransactions.length : 0;\n  // ROI = Net Profit / Total Bet Outlay * 100\n  const roi = totalBetAmount > 0 ? netProfit / totalBetAmount * 100 : 0;\n\n  // Streak calculations (process bets & wins chronologically by timestamp)\n  const chronological = [...transactions].filter(t => t.type === 'BET' || t.type === 'WIN').sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n  // Map bet and win events to resolved outcomes; we assume each WIN corresponds to a previous BET in same cycle (simplified)\n  let longestWinStreak = 0;\n  let currentWinStreak = 0;\n  chronological.forEach(t => {\n    if (t.type === 'WIN') {\n      currentWinStreak += 1;\n      if (currentWinStreak > longestWinStreak) longestWinStreak = currentWinStreak;\n    } else if (t.type === 'BET') {\n      // A bet breaks nothing; only a loss would reset, but we don't explicitly store losses as transactions.\n      // Infer a loss when a BET is followed by settlement without a WIN? Lacking explicit data, we reset streak when we encounter a BET whose outcome not yet known.\n      // To avoid misleading streak inflation, we won't reset on BET; reset logic would need explicit LOST transaction entries.\n    }\n  });\n\n  // Since losses aren't individual WIN/LOSS transactions, we approximate current streak as currentWinStreak\n  const currentStreak = currentWinStreak;\n  const [activeTab, setActiveTab] = (0,react.useState)('performance');\n  const [startDate, setStartDate] = (0,react.useState)('');\n  const [endDate, setEndDate] = (0,react.useState)('');\n  const [page, setPage] = (0,react.useState)(1);\n  const pageSize = 10;\n  const filteredTransactions = (0,react.useMemo)(() => {\n    let list = [...transactions];\n    if (startDate) {\n      const s = new Date(startDate + 'T00:00:00Z');\n      list = list.filter(t => new Date(t.timestamp) >= s);\n    }\n    if (endDate) {\n      const e = new Date(endDate + 'T23:59:59Z');\n      list = list.filter(t => new Date(t.timestamp) <= e);\n    }\n    // Sort newest first\n    list.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    return list;\n  }, [transactions, startDate, endDate]);\n  const totalPages = Math.max(1, Math.ceil(filteredTransactions.length / pageSize));\n  const paginated = filteredTransactions.slice((page - 1) * pageSize, page * pageSize);\n  const resetPagination = () => setPage(1);\n  const exportCSV = () => {\n    if (!filteredTransactions.length) return;\n    const headers = ['Timestamp', 'Type', 'Amount', 'Description'];\n    const rows = filteredTransactions.map(t => [new Date(t.timestamp).toISOString(), t.type, t.amount, \"\\\"\".concat((t.description || '').replace(/\"/g, '\"\"'), \"\\\"\")]);\n    const csv = [headers.join(','), ...rows.map(r => r.join(','))].join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'transactions.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // Build cumulative profit timeline from chronological transactions for sparkline\n  const cumulativeProfit = (0,react.useMemo)(() => {\n    let running = 0;\n    const points = [];\n    const chrono = [...transactions].filter(t => t.type === 'BET' || t.type === 'WIN').sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n    chrono.forEach(t => {\n      if (t.type === 'BET') running -= Math.abs(t.amount);\n      if (t.type === 'WIN') running += t.amount;\n      points.push(running);\n    });\n    return points;\n  }, [transactions]);\n\n  // Empty state components\n  const EmptyState = _ref => {\n    let {\n      icon: Icon,\n      title,\n      description,\n      actionText,\n      onAction\n    } = _ref;\n    return /*#__PURE__*/react.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '3rem 2rem',\n        textAlign: 'center',\n        background: 'var(--card-bg)',\n        borderRadius: '1rem',\n        border: '1px solid var(--glass-border)',\n        margin: '2rem 0'\n      }\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      style: {\n        width: '4rem',\n        height: '4rem',\n        borderRadius: '50%',\n        background: 'linear-gradient(135deg, var(--accent-blue), var(--accent-purple))',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1.5rem',\n        opacity: 0.8\n      }\n    }, /*#__PURE__*/react.createElement(Icon, {\n      size: 24,\n      color: \"white\"\n    })), /*#__PURE__*/react.createElement(\"h3\", {\n      style: {\n        fontSize: '1.25rem',\n        fontWeight: '600',\n        color: 'var(--text-primary)',\n        marginBottom: '0.5rem'\n      }\n    }, title), /*#__PURE__*/react.createElement(\"p\", {\n      style: {\n        fontSize: '0.875rem',\n        color: 'var(--text-secondary)',\n        marginBottom: '1.5rem',\n        maxWidth: '300px',\n        lineHeight: '1.5'\n      }\n    }, description), actionText && onAction && /*#__PURE__*/react.createElement(\"button\", {\n      onClick: onAction,\n      style: {\n        background: 'linear-gradient(135deg, var(--accent-blue), var(--accent-purple))',\n        color: 'white',\n        border: 'none',\n        borderRadius: '0.5rem',\n        padding: '0.75rem 1.5rem',\n        fontSize: '0.875rem',\n        fontWeight: '600',\n        cursor: 'pointer',\n        transition: 'all 0.3s ease'\n      },\n      onMouseOver: e => {\n        e.target.style.transform = 'translateY(-2px)';\n        e.target.style.boxShadow = '0 8px 25px rgba(59, 130, 246, 0.3)';\n      },\n      onMouseOut: e => {\n        e.target.style.transform = 'translateY(0)';\n        e.target.style.boxShadow = 'none';\n      }\n    }, actionText));\n  };\n  const tabButtonStyle = tab => ({\n    padding: '.75rem 1.25rem',\n    borderRadius: '0.75rem',\n    fontWeight: 600,\n    fontSize: '.875rem',\n    letterSpacing: '.03em',\n    cursor: 'pointer',\n    border: '1px solid var(--glass-border)',\n    background: activeTab === tab ? 'var(--accent-gradient, linear-gradient(90deg,var(--accent-blue),var(--accent-purple)))' : 'var(--card-bg)',\n    color: activeTab === tab ? 'white' : 'var(--text-secondary)',\n    boxShadow: activeTab === tab ? '0 4px 18px -4px rgba(0,0,0,0.4)' : 'none',\n    transition: 'all .25s ease'\n  });\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"app-container\",\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg-primary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"style\", null, \"body { background: var(--bg-primary); }\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      maxWidth: '1280px',\n      margin: '0 auto',\n      padding: '2rem 1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"h1\", {\n    style: {\n      fontSize: '2.25rem',\n      fontWeight: 800,\n      marginBottom: '2rem',\n      color: 'var(--text-primary)',\n      textAlign: 'center'\n    }\n  }, \"History & Performance\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '.75rem',\n      justifyContent: 'center',\n      marginBottom: '2rem',\n      flexWrap: 'wrap'\n    }\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    style: tabButtonStyle('performance'),\n    onClick: () => setActiveTab('performance')\n  }, \"Performance\"), /*#__PURE__*/react.createElement(\"button\", {\n    style: tabButtonStyle('transactions'),\n    onClick: () => setActiveTab('transactions')\n  }, \"Detailed Transactions\")), activeTab === 'performance' && /*#__PURE__*/react.createElement(react.Fragment, null, transactions.length === 0 ? /*#__PURE__*/react.createElement(EmptyState, {\n    icon: ChartColumn,\n    title: \"No Performance Data\",\n    description: \"Start placing bets to build your performance history and see detailed analytics.\",\n    actionText: \"Start Betting\",\n    onAction: () => window.location.href = '/betting'\n  }) : /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gap: '1rem',\n      marginBottom: '2rem',\n      gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(Target, {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      color: 'var(--accent-green)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.75rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Total Bets\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.75rem',\n      fontWeight: 800,\n      color: 'var(--text-primary)'\n    }\n  }, totalBets)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(TrendingUp, {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      color: 'var(--accent-blue)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.75rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Wins\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.75rem',\n      fontWeight: 800,\n      color: 'var(--text-primary)'\n    }\n  }, wins)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(Award, {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      color: 'var(--accent-gold)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.75rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Win Rate\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.75rem',\n      fontWeight: 800,\n      color: 'var(--text-primary)'\n    }\n  }, winRate, \"%\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(Wallet, {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.75rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Net Profit\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.75rem',\n      fontWeight: 800,\n      color: netProfit >= 0 ? 'var(--accent-green)' : 'var(--accent-red)'\n    }\n  }, netProfit >= 0 ? '+' : '', netProfit.toFixed(2)), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      marginTop: '.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(components_Sparkline, {\n    data: cumulativeProfit\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      display: 'inline-block',\n      background: 'linear-gradient(135deg,var(--accent-blue),var(--accent-purple))',\n      borderRadius: '50%'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.65rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Avg Bet Size\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.35rem',\n      fontWeight: 700,\n      color: 'var(--text-primary)'\n    }\n  }, averageBetSize.toFixed(2))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      display: 'inline-block',\n      background: 'linear-gradient(135deg,var(--accent-green),var(--accent-teal,var(--accent-green)))',\n      borderRadius: '50%'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.65rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"ROI %\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.35rem',\n      fontWeight: 700,\n      color: roi >= 0 ? 'var(--accent-green)' : 'var(--accent-red)'\n    }\n  }, roi.toFixed(1), \"%\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      display: 'inline-block',\n      background: 'linear-gradient(135deg,var(--accent-gold),var(--accent-orange,var(--accent-gold)))',\n      borderRadius: '50%'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.65rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Longest Win Streak\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.35rem',\n      fontWeight: 700,\n      color: 'var(--text-primary)'\n    }\n  }, longestWinStreak)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\",\n    style: {\n      borderRadius: '1rem',\n      padding: '1.25rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '.5rem',\n      marginBottom: '.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      display: 'inline-block',\n      background: 'linear-gradient(135deg,var(--accent-red),var(--accent-purple))',\n      borderRadius: '50%'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '.65rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      color: 'var(--text-secondary)',\n      fontWeight: 600\n    }\n  }, \"Current Win Streak\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '1.35rem',\n      fontWeight: 700,\n      color: 'var(--text-primary)'\n    }\n  }, currentStreak))), /*#__PURE__*/react.createElement(components_PerformanceHistory, {\n    data: performanceData,\n    emptyMessage: transactions.length === 0 ? 'Place your first bet to build history' : 'No performance entries yet'\n  }))), activeTab === 'transactions' && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      borderRadius: '1rem',\n      padding: '1.5rem',\n      border: '1px solid var(--glass-border)',\n      background: 'var(--card-bg)',\n      boxShadow: '0 8px 32px var(--shadow)'\n    }\n  }, /*#__PURE__*/react.createElement(\"h2\", {\n    style: {\n      fontSize: '1.125rem',\n      fontWeight: 700,\n      margin: '0 0 1.25rem',\n      color: 'var(--text-primary)'\n    }\n  }, \"Detailed Transactions\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '1rem',\n      marginBottom: '1.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '.35rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      fontSize: '.65rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      fontWeight: 600,\n      color: 'var(--text-secondary)'\n    }\n  }, \"Start Date\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"date\",\n    value: startDate,\n    onChange: e => {\n      setStartDate(e.target.value);\n      resetPagination();\n    },\n    style: {\n      background: 'var(--bg-secondary)',\n      color: 'var(--text-primary)',\n      border: '1px solid var(--glass-border)',\n      padding: '.55rem .65rem',\n      borderRadius: '.5rem',\n      fontSize: '.75rem'\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '.35rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    style: {\n      fontSize: '.65rem',\n      textTransform: 'uppercase',\n      letterSpacing: '.05em',\n      fontWeight: 600,\n      color: 'var(--text-secondary)'\n    }\n  }, \"End Date\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"date\",\n    value: endDate,\n    onChange: e => {\n      setEndDate(e.target.value);\n      resetPagination();\n    },\n    style: {\n      background: 'var(--bg-secondary)',\n      color: 'var(--text-primary)',\n      border: '1px solid var(--glass-border)',\n      padding: '.55rem .65rem',\n      borderRadius: '.5rem',\n      fontSize: '.75rem'\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      alignSelf: 'flex-end',\n      display: 'flex',\n      gap: '.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => {\n      setStartDate('');\n      setEndDate('');\n      resetPagination();\n    },\n    style: {\n      padding: '.55rem .9rem',\n      borderRadius: '.6rem',\n      fontSize: '.7rem',\n      fontWeight: 600,\n      background: 'var(--bg-secondary)',\n      color: 'var(--text-secondary)',\n      border: '1px solid var(--glass-border)',\n      cursor: 'pointer'\n    }\n  }, \"Reset\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      marginLeft: 'auto',\n      display: 'flex',\n      gap: '.5rem',\n      alignItems: 'flex-end'\n    }\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    onClick: exportCSV,\n    disabled: !filteredTransactions.length,\n    style: {\n      opacity: !filteredTransactions.length ? .5 : 1,\n      cursor: !filteredTransactions.length ? 'not-allowed' : 'pointer',\n      padding: '.55rem .9rem',\n      borderRadius: '.6rem',\n      fontSize: '.7rem',\n      fontWeight: 600,\n      background: 'linear-gradient(90deg,var(--accent-blue),var(--accent-purple))',\n      color: '#fff',\n      border: 'none'\n    }\n  }, \"Export CSV\"))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      overflowX: 'auto',\n      marginBottom: '1.25rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"table\", {\n    style: {\n      width: '100%',\n      borderCollapse: 'collapse',\n      fontSize: '.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"thead\", null, /*#__PURE__*/react.createElement(\"tr\", {\n    style: {\n      textAlign: 'left',\n      background: 'var(--bg-secondary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"th\", {\n    style: {\n      padding: '.6rem .75rem',\n      fontWeight: 600,\n      letterSpacing: '.05em',\n      textTransform: 'uppercase',\n      fontSize: '.6rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Date\"), /*#__PURE__*/react.createElement(\"th\", {\n    style: {\n      padding: '.6rem .75rem',\n      fontWeight: 600,\n      letterSpacing: '.05em',\n      textTransform: 'uppercase',\n      fontSize: '.6rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Type\"), /*#__PURE__*/react.createElement(\"th\", {\n    style: {\n      padding: '.6rem .75rem',\n      fontWeight: 600,\n      letterSpacing: '.05em',\n      textTransform: 'uppercase',\n      fontSize: '.6rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Amount\"), /*#__PURE__*/react.createElement(\"th\", {\n    style: {\n      padding: '.6rem .75rem',\n      fontWeight: 600,\n      letterSpacing: '.05em',\n      textTransform: 'uppercase',\n      fontSize: '.6rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Description\"))), /*#__PURE__*/react.createElement(\"tbody\", null, paginated.length === 0 && /*#__PURE__*/react.createElement(\"tr\", null, /*#__PURE__*/react.createElement(\"td\", {\n    colSpan: 4,\n    style: {\n      padding: '0'\n    }\n  }, /*#__PURE__*/react.createElement(EmptyState, {\n    icon: FileText,\n    title: \"No Transactions Yet\",\n    description: \"You haven't made any transactions yet. Start betting to see your history here.\",\n    actionText: \"Start Betting\",\n    onAction: () => window.location.href = '/betting'\n  }))), paginated.map(tx => {\n    const isWin = tx.type === 'WIN';\n    const isBet = tx.type === 'BET';\n    return /*#__PURE__*/react.createElement(\"tr\", {\n      key: tx.id,\n      style: {\n        borderBottom: '1px solid var(--glass-border)'\n      }\n    }, /*#__PURE__*/react.createElement(\"td\", {\n      style: {\n        padding: '.55rem .75rem',\n        whiteSpace: 'nowrap',\n        color: 'var(--text-secondary)'\n      }\n    }, new Date(tx.timestamp).toLocaleString()), /*#__PURE__*/react.createElement(\"td\", {\n      style: {\n        padding: '.55rem .75rem',\n        fontWeight: 600,\n        color: isWin ? 'var(--accent-green)' : isBet ? 'var(--accent-red)' : 'var(--text-primary)'\n      }\n    }, tx.type), /*#__PURE__*/react.createElement(\"td\", {\n      style: {\n        padding: '.55rem .75rem',\n        color: isWin ? 'var(--accent-green)' : isBet ? 'var(--accent-red)' : 'var(--text-primary)',\n        fontFamily: 'monospace'\n      }\n    }, isBet ? '-' : isWin ? '+' : '', Math.abs(tx.amount).toFixed(2)), /*#__PURE__*/react.createElement(\"td\", {\n      style: {\n        padding: '.55rem .75rem',\n        color: 'var(--text-primary)'\n      }\n    }, tx.description));\n  })))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      gap: '1rem',\n      flexWrap: 'wrap'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      fontSize: '.65rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Page \", page, \" of \", totalPages, \" \\u2022 \", filteredTransactions.length, \" tx\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => setPage(p => Math.max(1, p - 1)),\n    disabled: page === 1,\n    style: {\n      padding: '.5rem .85rem',\n      borderRadius: '.5rem',\n      border: '1px solid var(--glass-border)',\n      background: page === 1 ? 'var(--bg-secondary)' : 'var(--card-bg)',\n      color: 'var(--text-secondary)',\n      cursor: page === 1 ? 'not-allowed' : 'pointer',\n      fontSize: '.65rem',\n      fontWeight: 600\n    }\n  }, \"Prev\"), /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => setPage(p => Math.min(totalPages, p + 1)),\n    disabled: page === totalPages,\n    style: {\n      padding: '.5rem .85rem',\n      borderRadius: '.5rem',\n      border: '1px solid var(--glass-border)',\n      background: page === totalPages ? 'var(--bg-secondary)' : 'var(--card-bg)',\n      color: 'var(--text-secondary)',\n      cursor: page === totalPages ? 'not-allowed' : 'pointer',\n      fontSize: '.65rem',\n      fontWeight: 600\n    }\n  }, \"Next\"))))));\n};\n/* harmony default export */ const pages_History = (History);\n;// ./src/pages/FAQ.js\n\nconst FAQ = () => {\n  // FAQ state\n  const [openFAQ, setOpenFAQ] = (0,react.useState)(null);\n  const toggleFAQ = index => {\n    setOpenFAQ(openFAQ === index ? null : index);\n  };\n  const faqs = [{\n    question: \"What currencies can i use?\",\n    answer: \"We Currently support BTC, ETH, and USDT\"\n  }, {\n    question: \"How are Payouts Calculated?\",\n    answer: \"Payouts are based on stake multiplied by odds at the time of your prediction\"\n  }, {\n    question: \"Is this platform secure?\",\n    answer: \"Yes we use advanced encryption and follow best practices for wallet and transactions safely\"\n  }];\n  return /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: 'var(--bg-primary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"section\", {\n    style: {\n      padding: 'clamp(2rem, 6vw, 4rem) 0',\n      background: 'var(--bg-primary)'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      maxWidth: '1200px',\n      margin: '0 auto',\n      padding: '0 1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"h2\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(1.25rem, 3.5vw, 2rem)',\n      fontWeight: '700',\n      marginBottom: 'clamp(1.5rem, 4vw, 2.5rem)',\n      textAlign: 'center'\n    }\n  }, \"Frequently Asked Questions\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 'clamp(1rem, 2.5vw, 1.5rem)',\n      maxWidth: '800px',\n      margin: '0 auto'\n    }\n  }, faqs.map((faq, index) => /*#__PURE__*/react.createElement(\"div\", {\n    key: index,\n    style: {\n      background: 'var(--faq-bg)',\n      borderRadius: 'clamp(0.75rem, 2vw, 1rem)',\n      padding: 'clamp(1.25rem, 3vw, 1.75rem)',\n      border: '1px solid var(--border-color)',\n      boxShadow: '0 2px 4px var(--shadow)',\n      transition: 'all 0.3s ease',\n      cursor: 'pointer'\n    },\n    onClick: () => toggleFAQ(index)\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      color: '#21C3FD',\n      fontSize: 'clamp(1rem, 2.5vw, 1.25rem)',\n      fontWeight: '700',\n      marginBottom: openFAQ === index ? 'clamp(0.5rem, 1.5vw, 0.75rem)' : 0,\n      fontFamily: 'Rubik, -apple-system, BlinkMacSystemFont, sans-serif',\n      transition: 'margin-bottom 0.3s ease'\n    }\n  }, faq.question), openFAQ === index && /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      color: 'var(--text-primary)',\n      fontSize: 'clamp(0.875rem, 2vw, 1rem)',\n      lineHeight: '1.5',\n      margin: 0,\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n      animation: 'fadeIn 0.3s ease-in'\n    }\n  }, faq.answer)))))));\n};\n/* harmony default export */ const pages_FAQ = (FAQ);\n;// ./node_modules/lucide-react/dist/esm/icons/settings.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst settings_iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M9.671 4.136a2.34 2.34 0 0 1 4.659 0 2.34 2.34 0 0 0 3.319 1.915 2.34 2.34 0 0 1 2.33 4.033 2.34 2.34 0 0 0 0 3.831 2.34 2.34 0 0 1-2.33 4.033 2.34 2.34 0 0 0-3.319 1.915 2.34 2.34 0 0 1-4.659 0 2.34 2.34 0 0 0-3.32-1.915 2.34 2.34 0 0 1-2.33-4.033 2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915\",\n      key: \"1i5ecw\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n];\nconst Settings = createLucideIcon(\"settings\", settings_iconNode);\n\n\n//# sourceMappingURL=settings.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/coins.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst coins_iconNode = [\n  [\"circle\", { cx: \"8\", cy: \"8\", r: \"6\", key: \"3yglwk\" }],\n  [\"path\", { d: \"M18.09 10.37A6 6 0 1 1 10.34 18\", key: \"t5s6rm\" }],\n  [\"path\", { d: \"M7 6h1v4\", key: \"1obek4\" }],\n  [\"path\", { d: \"m16.71 13.88.7.71-2.82 2.82\", key: \"1rbuyh\" }]\n];\nconst Coins = createLucideIcon(\"coins\", coins_iconNode);\n\n\n//# sourceMappingURL=coins.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/pen-line.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst pen_line_iconNode = [\n  [\"path\", { d: \"M13 21h8\", key: \"1jsn5i\" }],\n  [\n    \"path\",\n    {\n      d: \"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z\",\n      key: \"1a8usu\"\n    }\n  ]\n];\nconst PenLine = createLucideIcon(\"pen-line\", pen_line_iconNode);\n\n\n//# sourceMappingURL=pen-line.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/user.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst user_iconNode = [\n  [\"path\", { d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\", key: \"975kel\" }],\n  [\"circle\", { cx: \"12\", cy: \"7\", r: \"4\", key: \"17ys0d\" }]\n];\nconst User = createLucideIcon(\"user\", user_iconNode);\n\n\n//# sourceMappingURL=user.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/mail.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst mail_iconNode = [\n  [\"path\", { d: \"m22 7-8.991 5.727a2 2 0 0 1-2.009 0L2 7\", key: \"132q7q\" }],\n  [\"rect\", { x: \"2\", y: \"4\", width: \"20\", height: \"16\", rx: \"2\", key: \"izxlao\" }]\n];\nconst Mail = createLucideIcon(\"mail\", mail_iconNode);\n\n\n//# sourceMappingURL=mail.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/calendar.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst calendar_iconNode = [\n  [\"path\", { d: \"M8 2v4\", key: \"1cmpym\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", key: \"1hopcy\" }],\n  [\"path\", { d: \"M3 10h18\", key: \"8toen8\" }]\n];\nconst Calendar = createLucideIcon(\"calendar\", calendar_iconNode);\n\n\n//# sourceMappingURL=calendar.js.map\n\n;// ./node_modules/lucide-react/dist/esm/icons/shield.js\n/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\n\n\nconst shield_iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z\",\n      key: \"oel41y\"\n    }\n  ]\n];\nconst Shield = createLucideIcon(\"shield\", shield_iconNode);\n\n\n//# sourceMappingURL=shield.js.map\n\n;// ./src/pages/Profile.js\nfunction Profile_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction Profile_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? Profile_ownKeys(Object(t), !0).forEach(function (r) { Profile_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Profile_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction Profile_defineProperty(e, r, t) { return (r = Profile_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction Profile_toPropertyKey(t) { var i = Profile_toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction Profile_toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n\nconst Profile = () => {\n  const {\n    user,\n    isAuthenticated,\n    logout,\n    currentBets,\n    transactions,\n    balance\n  } = store_useStore();\n  const navigate = dist_useNavigate();\n  const [isEditing, setIsEditing] = (0,react.useState)(false);\n  const [editData, setEditData] = (0,react.useState)({\n    firstName: '',\n    lastName: '',\n    email: ''\n  });\n  const [isLoading, setIsLoading] = (0,react.useState)(false);\n  const [error, setError] = (0,react.useState)('');\n\n  // Apply light theme on mount (theme toggle hidden)\n  (0,react.useEffect)(() => {\n    document.documentElement.setAttribute('data-theme', 'light');\n  }, []);\n\n  // Initialize edit data when user data is available\n  (0,react.useEffect)(() => {\n    if (user) {\n      setEditData({\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n        email: user.email || ''\n      });\n    }\n  }, [user]);\n\n  // Redirect to login if not authenticated\n  (0,react.useEffect)(() => {\n    if (!isAuthenticated) {\n      window.location.href = '/login';\n    }\n  }, [isAuthenticated]);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = async () => {\n    if (!(user !== null && user !== void 0 && user.id)) return;\n    setIsLoading(true);\n    setError('');\n    try {\n      // Update username if changed\n      if (editData.firstName !== user.firstName || editData.lastName !== user.lastName) {\n        await userAPI.updateUsername(user.id, editData.firstName, editData.lastName);\n      }\n\n      // Update email if changed\n      if (editData.email !== user.email) {\n        await userAPI.updateEmail(user.id, editData.email);\n      }\n\n      // Update local user data\n      const updatedUser = Profile_objectSpread(Profile_objectSpread({}, user), {}, {\n        firstName: editData.firstName,\n        lastName: editData.lastName,\n        email: editData.email\n      });\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      window.location.reload(); // Refresh to update the UI\n    } catch (error) {\n      console.error('Update error:', error);\n      setError(error.message || 'Failed to update profile');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    setEditData({\n      firstName: (user === null || user === void 0 ? void 0 : user.firstName) || '',\n      lastName: (user === null || user === void 0 ? void 0 : user.lastName) || '',\n      email: (user === null || user === void 0 ? void 0 : user.email) || ''\n    });\n    setIsEditing(false);\n    setError('');\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditData(prev => Profile_objectSpread(Profile_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n  if (!user) {\n    return /*#__PURE__*/react.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh',\n        color: 'var(--text-primary)'\n      }\n    }, \"Loading...\");\n  }\n\n  // Calculate performance data from real transactions\n  const performanceData = react.useMemo(() => {\n    const grouped = {};\n    transactions.forEach(t => {\n      if (t.type === 'BET' || t.type === 'WIN') {\n        const day = new Date(t.timestamp).toISOString().slice(0, 10);\n        if (!grouped[day]) grouped[day] = {\n          date: day,\n          bets: 0,\n          wins: 0,\n          amount: 0,\n          profit: 0\n        };\n        if (t.type === 'BET') {\n          grouped[day].bets += 1;\n          grouped[day].amount += Math.abs(t.amount);\n          grouped[day].profit -= Math.abs(t.amount);\n        }\n        if (t.type === 'WIN') {\n          grouped[day].wins += 1;\n          grouped[day].profit += t.amount;\n        }\n      }\n    });\n    return Object.values(grouped).sort((a, b) => new Date(b.date) - new Date(a.date));\n  }, [transactions]);\n\n  // Get recent bets from currentBets\n  const recentBets = react.useMemo(() => {\n    return currentBets.slice(0, 4).map(bet => ({\n      id: bet.id,\n      direction: bet.direction,\n      amount: bet.amount,\n      result: bet.result || 'pending',\n      profit: bet.profit || 0,\n      time: bet.timestamp ? new Date(bet.timestamp).toLocaleString() : 'Recently'\n    }));\n  }, [currentBets]);\n\n  // Calculate real stats from user data\n  const userStats = react.useMemo(() => {\n    const totalBets = currentBets.length;\n    const wonBets = currentBets.filter(bet => bet.result === 'win').length;\n    const winRate = totalBets > 0 ? Math.round(wonBets / totalBets * 100) : 0;\n    const totalWinnings = currentBets.reduce((sum, bet) => sum + (bet.profit || 0), 0);\n    return {\n      totalBets,\n      winRate,\n      totalWinnings\n    };\n  }, [currentBets]);\n  const quickActions = [{\n    icon: Wallet,\n    label: 'Wallet',\n    action: 'wallet'\n  }, {\n    icon: ChartColumn,\n    label: 'History',\n    action: 'history'\n  }, {\n    icon: Settings,\n    label: 'Settings',\n    action: 'settings'\n  }, {\n    icon: Coins,\n    label: 'Bet',\n    action: 'bet'\n  }];\n  const handleQuickAction = action => {\n    switch (action) {\n      case 'wallet':\n        navigate('/wallet');\n        break;\n      case 'history':\n        navigate('/history');\n        break;\n      case 'settings':\n        // For now, just show a message since we don't have a settings page\n        alert('Settings page coming soon!');\n        break;\n      case 'bet':\n        navigate('/betting');\n        break;\n      default:\n        console.log(\"Quick action: \".concat(action));\n    }\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"app-container\"\n  }, /*#__PURE__*/react.createElement(\"style\", null, \"\\n        /* Default Dark Theme Variables */\\n        :root {\\n          --bg-primary: linear-gradient(135deg, #0F0F23 0%, #1E1E38 100%);\\n          --bg-secondary: #1A1B2E;\\n          --bg-tertiary: #252640;\\n          --text-primary: #F8FAFC;\\n          --text-secondary: #94A3B8;\\n          --border-color: rgba(248, 250, 252, 0.08);\\n          --accent-purple: #8B5CF6;\\n          --accent-green: #22C55E;\\n          --accent-blue: #3B82F6;\\n          --accent-red: #EF4444;\\n          --accent-gold: #F59E0B;\\n          --card-bg: rgba(26, 27, 46, 0.95);\\n          --shadow: rgba(0, 0, 0, 0.3);\\n          --glass-bg: rgba(26, 27, 46, 0.8);\\n          --glass-border: rgba(248, 250, 252, 0.1);\\n        }\\n        \\n        /* Light Theme Override */\\n        [data-theme=\\\"light\\\"] {\\n          --bg-primary: linear-gradient(135deg, #FAFBFC 0%, #F4F6F8 100%);\\n          --bg-secondary: #FFFFFF;\\n          --bg-tertiary: #F8FAFC;\\n          --text-primary: #0F172A;\\n          --text-secondary: #475569;\\n          --border-color: rgba(15, 23, 42, 0.08);\\n          --card-bg: rgba(255, 255, 255, 0.95);\\n          --shadow: rgba(15, 23, 42, 0.1);\\n          --glass-bg: rgba(255, 255, 255, 0.8);\\n          --glass-border: rgba(15, 23, 42, 0.1);\\n        }\\n\\n        body {\\n          margin: 0;\\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n            sans-serif;\\n          -webkit-font-smoothing: antialiased;\\n          -moz-osx-font-smoothing: grayscale;\\n          transition: all 0.3s ease;\\n          background: var(--bg-primary);\\n          color: var(--text-primary);\\n          min-height: 100vh;\\n        }\\n\\n        .app-container {\\n          min-height: 100vh;\\n          background: var(--bg-primary);\\n        }\\n\\n        .container {\\n          max-width: 1280px;\\n          margin: 0 auto;\\n          padding: 2rem 1rem;\\n        }\\n        \\n        .header {\\n          padding: 2rem 1rem;\\n          background: var(--glass-bg);\\n          border-bottom: 1px solid var(--border-color);\\n          backdrop-filter: blur(10px);\\n          -webkit-backdrop-filter: blur(10px);\\n        }\\n\\n        .header-content {\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          max-width: 1280px;\\n          margin: 0 auto;\\n        }\\n\\n        .edit-button, .theme-toggle {\\n          display: flex;\\n          align-items: center;\\n          gap: 0.5rem;\\n          padding: 0.75rem 1rem;\\n          border-radius: 0.75rem;\\n          border: 1px solid var(--border-color);\\n          background: var(--card-bg);\\n          color: var(--text-primary);\\n          cursor: pointer;\\n          transition: all 0.3s ease;\\n          font-weight: 500;\\n          backdrop-filter: blur(10px);\\n          -webkit-backdrop-filter: blur(10px);\\n        }\\n\\n        .theme-toggle {\\n          padding: 0.75rem;\\n          border-radius: 50%;\\n        }\\n\\n        .edit-button:hover, .theme-toggle:hover {\\n          transform: scale(1.05);\\n          border-color: var(--accent-purple);\\n          color: var(--accent-purple);\\n          background: var(--bg-tertiary);\\n          box-shadow: 0 4px 20px var(--shadow);\\n        }\\n        \\n        .grid-container {\\n          display: grid;\\n          gap: 2rem;\\n        }\\n\\n        @media (min-width: 1024px) {\\n          .grid-container {\\n            grid-template-columns: 1fr 2fr;\\n          }\\n        }\\n\\n        .card {\\n          border-radius: 1.5rem;\\n          padding: 2rem;\\n          border: 1px solid var(--glass-border);\\n          background: var(--card-bg);\\n          box-shadow: 0 8px 32px var(--shadow);\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n          transition: all 0.3s ease;\\n        }\\n\\n        .card:hover {\\n          transform: translateY(-2px);\\n          box-shadow: 0 12px 48px var(--shadow);\\n        }\\n        \\n        .stat-card {\\n          border-radius: 1.5rem;\\n          padding: 1.5rem;\\n          border: 1px solid var(--glass-border);\\n          background: var(--card-bg);\\n          box-shadow: 0 8px 32px var(--shadow);\\n          backdrop-filter: blur(20px);\\n          -webkit-backdrop-filter: blur(20px);\\n          transition: all 0.3s ease;\\n        }\\n\\n        .stat-card:hover {\\n          transform: translateY(-2px);\\n          box-shadow: 0 12px 48px var(--shadow);\\n        }\\n\\n        .stat-grid {\\n          display: grid;\\n          gap: 1rem;\\n        }\\n        \\n        @media (min-width: 768px) {\\n          .stat-grid {\\n            grid-template-columns: repeat(3, 1fr);\\n          }\\n        }\\n        \\n        .list-item {\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          padding: 1rem;\\n          border-radius: 0.75rem;\\n          background: var(--bg-tertiary);\\n          border: 1px solid var(--border-color);\\n          transition: all 0.2s ease-in-out;\\n        }\\n\\n        .list-item:hover {\\n          background: var(--glass-bg);\\n          transform: translateY(-2px);\\n          box-shadow: 0 4px 15px var(--shadow);\\n          backdrop-filter: blur(10px);\\n          -webkit-backdrop-filter: blur(10px);\\n        }\\n\\n        .avatar-gradient {\\n          background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));\\n        }\\n\\n        .icon-circle-up {\\n          background: rgba(34, 197, 94, 0.1);\\n          color: var(--accent-green);\\n          width: 2.5rem;\\n          height: 2.5rem;\\n          border-radius: 50%;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n        }\\n\\n        .icon-circle-down {\\n          background: rgba(239, 68, 68, 0.1);\\n          color: var(--accent-red);\\n          width: 2.5rem;\\n          height: 2.5rem;\\n          border-radius: 50%;\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n        }\\n\\n        .quick-actions-grid {\\n          display: grid;\\n          grid-template-columns: 1fr 1fr;\\n          gap: 0.75rem;\\n        }\\n\\n        .quick-action-button {\\n          display: flex;\\n          flex-direction: column;\\n          align-items: center;\\n          justify-content: center;\\n          padding: 1rem;\\n          border-radius: 0.75rem;\\n          border: 1px solid var(--border-color);\\n          background: var(--bg-tertiary);\\n          color: var(--text-primary);\\n          cursor: pointer;\\n          transition: all 0.3s ease;\\n          font-weight: 500;\\n        }\\n        \\n        .quick-action-button:hover {\\n          transform: translateY(-2px);\\n          border-color: var(--accent-purple);\\n          color: var(--accent-purple);\\n          box-shadow: 0 4px 15px var(--shadow);\\n          background: var(--card-bg);\\n        }\\n\\n        .quick-action-button:hover span {\\n          color: var(--accent-purple);\\n        }\\n\\n        .profit-positive {\\n          color: var(--accent-green);\\n        }\\n\\n        .profit-negative {\\n          color: var(--accent-red);\\n        }\\n        \"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"header-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"h1\", {\n    style: {\n      fontSize: '2rem',\n      fontWeight: 'bold',\n      marginBottom: '0.25rem',\n      color: 'var(--text-primary)'\n    }\n  }, \"User Profile\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '1.125rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Manage your account and view performance\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      alignItems: 'center'\n    }\n  }, isEditing ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"button\", {\n    className: \"edit-button\",\n    onClick: handleSave,\n    disabled: isLoading,\n    style: {\n      background: 'var(--accent-green)',\n      color: 'white',\n      opacity: isLoading ? 0.7 : 1,\n      cursor: isLoading ? 'not-allowed' : 'pointer'\n    }\n  }, isLoading ? 'Saving...' : 'Save Changes'), /*#__PURE__*/react.createElement(\"button\", {\n    className: \"edit-button\",\n    onClick: handleCancel,\n    disabled: isLoading,\n    style: {\n      background: 'var(--accent-red)',\n      color: 'white',\n      opacity: isLoading ? 0.7 : 1,\n      cursor: isLoading ? 'not-allowed' : 'pointer'\n    }\n  }, \"Cancel\")) : /*#__PURE__*/react.createElement(\"button\", {\n    className: \"edit-button\",\n    onClick: handleEdit\n  }, /*#__PURE__*/react.createElement(PenLine, {\n    style: {\n      width: '1rem',\n      height: '1rem'\n    }\n  }), \"Edit Profile\")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"container\"\n  }, error && /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      background: '#FEF2F2',\n      border: '1px solid #FECACA',\n      color: '#DC2626',\n      padding: '0.75rem',\n      borderRadius: '0.5rem',\n      marginBottom: '1rem',\n      fontSize: '0.875rem',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif'\n    }\n  }, error), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"grid-container\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '2rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '1.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"avatar-gradient\",\n    style: {\n      width: '6rem',\n      height: '6rem',\n      margin: '0 auto 1rem auto',\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(User, {\n    style: {\n      width: '3rem',\n      height: '3rem',\n      color: 'white'\n    }\n  })), /*#__PURE__*/react.createElement(\"h2\", {\n    style: {\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      marginBottom: '0.25rem',\n      color: 'var(--text-primary)'\n    }\n  }, isEditing ? /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '0.5rem',\n      alignItems: 'center'\n    }\n  }, /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    value: editData.firstName,\n    onChange: handleChange,\n    style: {\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: '0.375rem',\n      padding: '0.5rem',\n      color: 'var(--text-primary)',\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      width: '120px'\n    },\n    placeholder: \"First Name\"\n  }), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    value: editData.lastName,\n    onChange: handleChange,\n    style: {\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: '0.375rem',\n      padding: '0.5rem',\n      color: 'var(--text-primary)',\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      width: '120px'\n    },\n    placeholder: \"Last Name\"\n  })) : \"\".concat(user.firstName, \" \").concat(user.lastName)), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)'\n    }\n  }, user.level || 'Beginner'), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '0.25rem',\n      marginTop: '0.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(Award, {\n    style: {\n      width: '1rem',\n      height: '1rem',\n      color: 'var(--accent-gold)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Level 5 Trader\"))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(Mail, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem',\n      color: 'var(--accent-purple)'\n    }\n  }), isEditing ? /*#__PURE__*/react.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: editData.email,\n    onChange: handleChange,\n    style: {\n      background: 'var(--bg-secondary)',\n      border: '1px solid var(--border-color)',\n      borderRadius: '0.375rem',\n      padding: '0.5rem',\n      color: 'var(--text-primary)',\n      fontSize: '0.875rem',\n      flex: 1\n    },\n    placeholder: \"Email\"\n  }) : /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)'\n    }\n  }, user.email)), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(Calendar, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem',\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Joined \", user.signUpDate ? new Date(user.signUpDate).toLocaleDateString() : 'Recently')), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(Wallet, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem',\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '600',\n      color: 'var(--text-primary)'\n    }\n  }, \"$\", (user.balance || 0).toFixed(2))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      fontSize: '1.25rem',\n      fontWeight: '600',\n      marginBottom: '1rem',\n      color: 'var(--text-primary)'\n    }\n  }, \"Quick Actions\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"quick-actions-grid\"\n  }, quickActions.map((action, index) => /*#__PURE__*/react.createElement(\"button\", {\n    key: index,\n    onClick: () => handleQuickAction(action.action),\n    className: \"quick-action-button\"\n  }, /*#__PURE__*/react.createElement(action.icon, {\n    style: {\n      width: '1.5rem',\n      height: '1.5rem',\n      marginBottom: '0.25rem'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500'\n    }\n  }, action.label))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react.createElement(\"button\", {\n    onClick: () => {\n      logout();\n      navigate('/');\n    },\n    style: {\n      width: '100%',\n      padding: '0.75rem 1rem',\n      background: 'linear-gradient(135deg, #EF4444 0%, #DC2626 100%)',\n      color: 'white',\n      border: 'none',\n      borderRadius: '0.5rem',\n      fontSize: '0.875rem',\n      fontWeight: '600',\n      cursor: 'pointer',\n      transition: 'all 0.3s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '0.5rem'\n    },\n    onMouseOver: e => {\n      e.target.style.transform = 'translateY(-2px)';\n      e.target.style.boxShadow = '0 4px 12px rgba(239, 68, 68, 0.3)';\n    },\n    onMouseOut: e => {\n      e.target.style.transform = 'translateY(0)';\n      e.target.style.boxShadow = 'none';\n    }\n  }, /*#__PURE__*/react.createElement(Shield, {\n    style: {\n      width: '1rem',\n      height: '1rem'\n    }\n  }), \"Logout\"))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '2rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-grid\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem',\n      marginBottom: '0.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(Target, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem',\n      color: 'var(--accent-green)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Total Bets\")), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      color: 'var(--text-primary)'\n    }\n  }, userStats.totalBets)), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem',\n      marginBottom: '0.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(TrendingUp, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem',\n      color: 'var(--accent-blue)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Win Rate\")), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      color: 'var(--text-primary)'\n    }\n  }, userStats.winRate, \"%\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"stat-card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem',\n      marginBottom: '0.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(Wallet, {\n    style: {\n      width: '1.25rem',\n      height: '1.25rem',\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"span\", {\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500',\n      color: 'var(--text-secondary)'\n    }\n  }, \"Total Winnings\")), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      color: 'var(--text-primary)'\n    }\n  }, \"$\", userStats.totalWinnings.toFixed(2)))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem',\n      marginBottom: '1.5rem'\n    }\n  }, /*#__PURE__*/react.createElement(ChartColumn, {\n    style: {\n      width: '1.5rem',\n      height: '1.5rem',\n      color: 'var(--accent-purple)'\n    }\n  }), /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      fontSize: '1.25rem',\n      fontWeight: '600',\n      color: 'var(--text-primary)'\n    }\n  }, \"Performance History\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.75rem'\n    }\n  }, performanceData.map((day, index) => /*#__PURE__*/react.createElement(\"div\", {\n    key: index,\n    className: \"list-item\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontWeight: '500',\n      color: 'var(--text-primary)'\n    }\n  }, new Date(day.date).toLocaleDateString()), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)'\n    }\n  }, day.bets, \" bets \\u2022 \", day.wins, \" wins\")), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontWeight: '600',\n      color: 'var(--text-primary)'\n    }\n  }, \"$\", day.amount.toFixed(2)), /*#__PURE__*/react.createElement(\"p\", {\n    className: day.profit >= 0 ? 'profit-positive' : 'profit-negative',\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500'\n    }\n  }, day.profit >= 0 ? '+' : '', \"$\", day.profit.toFixed(2))))))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card\"\n  }, /*#__PURE__*/react.createElement(\"h3\", {\n    style: {\n      fontSize: '1.25rem',\n      fontWeight: '600',\n      marginBottom: '1.5rem',\n      color: 'var(--text-primary)'\n    }\n  }, \"Recent Bets\"), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.75rem'\n    }\n  }, recentBets.map(bet => /*#__PURE__*/react.createElement(\"div\", {\n    key: bet.id,\n    className: \"list-item\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.75rem'\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: bet.direction === 'UP' ? 'icon-circle-up' : 'icon-circle-down'\n  }, bet.direction === 'UP' ? /*#__PURE__*/react.createElement(TrendingUp, {\n    style: {\n      width: '1rem',\n      height: '1rem'\n    }\n  }) : /*#__PURE__*/react.createElement(TrendingDown, {\n    style: {\n      width: '1rem',\n      height: '1rem'\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontWeight: '500',\n      color: 'var(--text-primary)'\n    }\n  }, bet.direction, \" Bet\"), /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontSize: '0.875rem',\n      color: 'var(--text-secondary)'\n    }\n  }, bet.time))), /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, /*#__PURE__*/react.createElement(\"p\", {\n    style: {\n      fontWeight: '600',\n      color: 'var(--text-primary)'\n    }\n  }, \"$\", bet.amount.toFixed(2)), /*#__PURE__*/react.createElement(\"p\", {\n    className: bet.profit >= 0 ? 'profit-positive' : 'profit-negative',\n    style: {\n      fontSize: '0.875rem',\n      fontWeight: '500'\n    }\n  }, bet.profit >= 0 ? '+' : '', \"$\", bet.profit.toFixed(2)))))))))));\n};\n/* harmony default export */ const pages_Profile = (Profile);\n;// ./src/App.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  const {\n    initializeAuth,\n    initializeWebSocket,\n    loadCurrentPool\n  } = store_useStore();\n\n  // Initialize authentication and WebSocket on app start\n  (0,react.useEffect)(() => {\n    // Initialize authentication\n    initializeAuth();\n\n    // Load current pool data\n    loadCurrentPool().catch(console.error);\n\n    // Initialize WebSocket for real-time updates\n    initializeWebSocket().catch(console.error);\n  }, [initializeAuth, initializeWebSocket, loadCurrentPool]);\n  return /*#__PURE__*/react.createElement(BrowserRouter, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"min-h-screen\"\n  }, /*#__PURE__*/react.createElement(components_Navbar, null), /*#__PURE__*/react.createElement(\"main\", null, /*#__PURE__*/react.createElement(Routes, null, /*#__PURE__*/react.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/react.createElement(pages_Home, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/login\",\n    element: /*#__PURE__*/react.createElement(pages_Login, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/signup\",\n    element: /*#__PURE__*/react.createElement(pages_SignUp, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/wallet\",\n    element: /*#__PURE__*/react.createElement(pages_Wallet, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/betting\",\n    element: /*#__PURE__*/react.createElement(pages_Betting, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/overview\",\n    element: /*#__PURE__*/react.createElement(pages_Overview, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/history\",\n    element: /*#__PURE__*/react.createElement(pages_History, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/faq\",\n    element: /*#__PURE__*/react.createElement(pages_FAQ, null)\n  }), /*#__PURE__*/react.createElement(Route, {\n    path: \"/profile\",\n    element: /*#__PURE__*/react.createElement(pages_Profile, null)\n  }))), /*#__PURE__*/react.createElement(components_Footer, null)));\n}\n/* harmony default export */ const src_App = (App);\n;// ./src/ErrorBoundary.js\n\nclass ErrorBoundary extends react.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, info) {\n    // Log to console (could be extended to remote logging)\n    console.error('Runtime error captured by ErrorBoundary:', error, info);\n  }\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        style: {\n          padding: '2rem',\n          fontFamily: 'monospace',\n          color: '#f87171'\n        }\n      }, /*#__PURE__*/react.createElement(\"h2\", {\n        style: {\n          marginTop: 0\n        }\n      }, \"Something went wrong.\"), /*#__PURE__*/react.createElement(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap'\n        }\n      }, this.state.error.message), /*#__PURE__*/react.createElement(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '1rem',\n          background: '#1f2937',\n          color: '#fff',\n          border: '1px solid #374151',\n          padding: '.6rem 1rem',\n          borderRadius: '.5rem',\n          cursor: 'pointer'\n        }\n      }, \"Reload\"));\n    }\n    return this.props.children;\n  }\n}\n/* harmony default export */ const src_ErrorBoundary = (ErrorBoundary);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(5072);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(7825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(7659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(5056);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(1113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./src/index.css\nvar cjs_ruleSet_1_rules_1_use_2_src = __webpack_require__(4100);\n;// ./src/index.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, \"head\");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(cjs_ruleSet_1_rules_1_use_2_src/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src = (cjs_ruleSet_1_rules_1_use_2_src/* default */.A && cjs_ruleSet_1_rules_1_use_2_src/* default */.A.locals ? cjs_ruleSet_1_rules_1_use_2_src/* default */.A.locals : undefined);\n\n;// ./src/index.js\n\n\n\n\n\n\n// Global diagnostics\nif (typeof window !== 'undefined') {\n  window.__COINTOSS_DIAG__ = {\n    start: Date.now()\n  };\n  window.addEventListener('error', e => {\n    console.error('[Cointoss][global error]', e.message, e.error);\n  });\n  window.addEventListener('unhandledrejection', e => {\n    console.error('[Cointoss][unhandled promise]', e.reason);\n  });\n}\nconsole.log('[Cointoss] Bootstrapping build at', new Date().toISOString(), 'ENV=', \"production\");\nconst rootEl = document.getElementById('root');\nif (!rootEl) {\n  console.error('Root element #root not found');\n}\nfunction mount() {\n  try {\n    const root = client.createRoot(rootEl);\n    console.log('[Cointoss] React root created');\n    root.render(/*#__PURE__*/react.createElement(react.StrictMode, null, /*#__PURE__*/react.createElement(src_ErrorBoundary, null, /*#__PURE__*/react.createElement(src_App, null))));\n    console.log('[Cointoss] Initial render dispatched');\n  } catch (err) {\n    console.error('[Cointoss] Mount failure', err);\n    const fallback = document.createElement('pre');\n    fallback.style.color = 'red';\n    fallback.style.padding = '1rem';\n    fallback.textContent = 'Mount failed: ' + (err && err.message ? err.message : String(err));\n    document.body.appendChild(fallback);\n  }\n}\nmount();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8666\n\n}")},9242:(module,__unused_webpack_exports,__webpack_require__)=>{eval("{\n\nif (true) {\n  module.exports = __webpack_require__(2162);\n} else // removed by dead control flow\n{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTI0Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanM/N2EzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5wcm9kdWN0aW9uLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9242\n\n}")},9888:(module,__unused_webpack_exports,__webpack_require__)=>{eval("{\n\nif (true) {\n  module.exports = __webpack_require__(8493);\n} else // removed by dead control flow\n{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTg4OC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzPzZhZGYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9888\n\n}")},9982:(module,__unused_webpack_exports,__webpack_require__)=>{eval("{\n\nif (true) {\n  module.exports = __webpack_require__(7463);\n} else // removed by dead control flow\n{}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTk4Mi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2ludG9zcy1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanM/NDAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9982\n\n}")}},__webpack_module_cache__={},leafPrototypes,getProto,inProgress,dataWebpackPrefix;function __webpack_require__(g){var I=__webpack_module_cache__[g];if(void 0!==I)return I.exports;var n=__webpack_module_cache__[g]={id:g,exports:{}};return __webpack_modules__[g](n,n.exports,__webpack_require__),n.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=g=>{var I=g&&g.__esModule?()=>g.default:()=>g;return __webpack_require__.d(I,{a:I}),I},getProto=Object.getPrototypeOf?g=>Object.getPrototypeOf(g):g=>g.__proto__,__webpack_require__.t=function(g,I){if(1&I&&(g=this(g)),8&I)return g;if("object"==typeof g&&g){if(4&I&&g.__esModule)return g;if(16&I&&"function"==typeof g.then)return g}var n=Object.create(null);__webpack_require__.r(n);var t={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var e=2&I&&g;("object"==typeof e||"function"==typeof e)&&!~leafPrototypes.indexOf(e);e=getProto(e))Object.getOwnPropertyNames(e).forEach(I=>t[I]=()=>g[I]);return t.default=()=>g,__webpack_require__.d(n,t),n},__webpack_require__.d=(g,I)=>{for(var n in I)__webpack_require__.o(I,n)&&!__webpack_require__.o(g,n)&&Object.defineProperty(g,n,{enumerable:!0,get:I[n]})},__webpack_require__.f={},__webpack_require__.e=g=>Promise.all(Object.keys(__webpack_require__.f).reduce((I,n)=>(__webpack_require__.f[n](g,I),I),[])),__webpack_require__.u=g=>g+".bundle.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(g){if("object"==typeof window)return window}}(),__webpack_require__.o=(g,I)=>Object.prototype.hasOwnProperty.call(g,I),inProgress={},dataWebpackPrefix="cointoss-frontend:",__webpack_require__.l=(g,I,n,t)=>{if(inProgress[g])inProgress[g].push(I);else{var e,c;if(void 0!==n)for(var l=document.getElementsByTagName("script"),C=0;C<l.length;C++){var a=l[C];if(a.getAttribute("src")==g||a.getAttribute("data-webpack")==dataWebpackPrefix+n){e=a;break}}e||(c=!0,(e=document.createElement("script")).charset="utf-8",e.timeout=120,__webpack_require__.nc&&e.setAttribute("nonce",__webpack_require__.nc),e.setAttribute("data-webpack",dataWebpackPrefix+n),e.src=g),inProgress[g]=[I];var A=(I,n)=>{e.onerror=e.onload=null,clearTimeout(i);var t=inProgress[g];if(delete inProgress[g],e.parentNode&&e.parentNode.removeChild(e),t&&t.forEach(g=>g(n)),I)return I(n)},i=setTimeout(A.bind(null,void 0,{type:"timeout",target:e}),12e4);e.onerror=A.bind(null,e.onerror),e.onload=A.bind(null,e.onload),c&&document.head.appendChild(e)}},__webpack_require__.r=g=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},__webpack_require__.p="/",(()=>{var g={792:0};__webpack_require__.f.j=(I,n)=>{var t=__webpack_require__.o(g,I)?g[I]:void 0;if(0!==t)if(t)n.push(t[2]);else{var e=new Promise((n,e)=>t=g[I]=[n,e]);n.push(t[2]=e);var c=__webpack_require__.p+__webpack_require__.u(I),l=new Error;__webpack_require__.l(c,n=>{if(__webpack_require__.o(g,I)&&(0!==(t=g[I])&&(g[I]=void 0),t)){var e=n&&("load"===n.type?"missing":n.type),c=n&&n.target&&n.target.src;l.message="Loading chunk "+I+" failed.\n("+e+": "+c+")",l.name="ChunkLoadError",l.type=e,l.request=c,t[1](l)}},"chunk-"+I,I)}};var I=(I,n)=>{var t,e,c=n[0],l=n[1],C=n[2],a=0;if(c.some(I=>0!==g[I])){for(t in l)__webpack_require__.o(l,t)&&(__webpack_require__.m[t]=l[t]);C&&C(__webpack_require__)}for(I&&I(n);a<c.length;a++)e=c[a],__webpack_require__.o(g,e)&&g[e]&&g[e][0](),g[e]=0},n=self.webpackChunkcointoss_frontend=self.webpackChunkcointoss_frontend||[];n.forEach(I.bind(null,0)),n.push=I.bind(null,n.push.bind(n))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(8666)})();